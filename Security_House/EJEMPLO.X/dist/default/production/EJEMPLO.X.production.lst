

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 04 18:20:46 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35  0000                     
    36                           ; Version 2.10
    37                           ; Generated 31/07/2019 GMT
    38                           ; 
    39                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  0019B0                     __pidataCOMRAM:
    73                           	opt callstack 0
    74                           
    75                           ;initializer for _contra
    76  0019B0  07E4               	dw	2020
    77  0019B2  0000               	dw	0
    78                           
    79                           	psect	idataBANK0
    80  00197E                     __pidataBANK0:
    81                           	opt callstack 0
    82                           
    83                           ;initializer for teclado_getc@F3164
    84  00197E  31                 	db	49
    85  00197F  32                 	db	50
    86  001980  33                 	db	51
    87  001981  41                 	db	65
    88  001982  34                 	db	52
    89  001983  35                 	db	53
    90  001984  36                 	db	54
    91  001985  42                 	db	66
    92  001986  37                 	db	55
    93  001987  38                 	db	56
    94  001988  39                 	db	57
    95  001989  43                 	db	67
    96  00198A  2A                 	db	42
    97  00198B  30                 	db	48
    98  00198C  23                 	db	35
    99  00198D  44                 	db	68
   100                           
   101                           	psect	nvCOMRAM
   102  000055                     __pnvCOMRAM:
   103                           	opt callstack 0
   104  000055                     _intentos:
   105                           	opt callstack 0
   106  000055                     	ds	4
   107  0000                     _EECON2	set	4007
   108  0000                     _INTCONbits	set	4082
   109  0000                     _EECON1bits	set	4006
   110  0000                     _EEDATA	set	4008
   111  0000                     _EEADR	set	4009
   112  0000                     _PORTB	set	3969
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _TRISB	set	3987
   115  0000                     _LATB	set	3978
   116  0000                     _TRISDbits	set	3989
   117  0000                     _LATDbits	set	3980
   118  0000                     _PORTC	set	3970
   119  0000                     _TRISD	set	3989
   120  0000                     _TRISC	set	3988
   121  0000                     _PORTD	set	3971
   122  0000                     _PORTDbits	set	3971
   123  0000                     _LATC2	set	31834
   124  0000                     _LATC1	set	31833
   125  0000                     _LATC0	set	31832
   126                           
   127                           	psect	smallconst
   128  000800                     __psmallconst:
   129                           	opt callstack 0
   130  000800  00                 	db	0
   131  000801                     STR_7:
   132  000801  43                 	db	67	;'C'
   133  000802  4C                 	db	76	;'L'
   134  000803  41                 	db	65	;'A'
   135  000804  56                 	db	86	;'V'
   136  000805  45                 	db	69	;'E'
   137  000806  20                 	db	32
   138  000807  49                 	db	73	;'I'
   139  000808  4E                 	db	78	;'N'
   140  000809  56                 	db	86	;'V'
   141  00080A  41                 	db	65	;'A'
   142  00080B  4C                 	db	76	;'L'
   143  00080C  49                 	db	73	;'I'
   144  00080D  44                 	db	68	;'D'
   145  00080E  41                 	db	65	;'A'
   146  00080F  20                 	db	32
   147  000810  00                 	db	0
   148  000811                     STR_5:
   149  000811  20                 	db	32
   150  000812  20                 	db	32
   151  000813  20                 	db	32
   152  000814  43                 	db	67	;'C'
   153  000815  4F                 	db	79	;'O'
   154  000816  52                 	db	82	;'R'
   155  000817  52                 	db	82	;'R'
   156  000818  45                 	db	69	;'E'
   157  000819  43                 	db	67	;'C'
   158  00081A  54                 	db	84	;'T'
   159  00081B  4F                 	db	79	;'O'
   160  00081C  20                 	db	32
   161  00081D  20                 	db	32
   162  00081E  20                 	db	32
   163  00081F  00                 	db	0
   164  000820                     STR_10:
   165  000820  20                 	db	32
   166  000821  20                 	db	32
   167  000822  42                 	db	66	;'B'
   168  000823  49                 	db	73	;'I'
   169  000824  45                 	db	69	;'E'
   170  000825  4E                 	db	78	;'N'
   171  000826  56                 	db	86	;'V'
   172  000827  45                 	db	69	;'E'
   173  000828  4E                 	db	78	;'N'
   174  000829  49                 	db	73	;'I'
   175  00082A  44                 	db	68	;'D'
   176  00082B  4F                 	db	79	;'O'
   177  00082C  20                 	db	32
   178  00082D  20                 	db	32
   179  00082E  00                 	db	0
   180  00082F                     STR_8:
   181  00082F  20                 	db	32
   182  000830  44                 	db	68	;'D'
   183  000831  49                 	db	73	;'I'
   184  000832  47                 	db	71	;'G'
   185  000833  49                 	db	73	;'I'
   186  000834  54                 	db	84	;'T'
   187  000835  45                 	db	69	;'E'
   188  000836  20                 	db	32
   189  000837  43                 	db	67	;'C'
   190  000838  4C                 	db	76	;'L'
   191  000839  41                 	db	65	;'A'
   192  00083A  56                 	db	86	;'V'
   193  00083B  45                 	db	69	;'E'
   194  00083C  20                 	db	32
   195  00083D  00                 	db	0
   196  00083E                     STR_3:
   197  00083E  20                 	db	32
   198  00083F  43                 	db	67	;'C'
   199  000840  4C                 	db	76	;'L'
   200  000841  41                 	db	65	;'A'
   201  000842  56                 	db	86	;'V'
   202  000843  45                 	db	69	;'E'
   203  000844  20                 	db	32
   204  000845  41                 	db	65	;'A'
   205  000846  43                 	db	67	;'C'
   206  000847  54                 	db	84	;'T'
   207  000848  55                 	db	85	;'U'
   208  000849  41                 	db	65	;'A'
   209  00084A  4C                 	db	76	;'L'
   210  00084B  20                 	db	32
   211  00084C  00                 	db	0
   212  00084D                     STR_9:
   213  00084D  43                 	db	67	;'C'
   214  00084E  4C                 	db	76	;'L'
   215  00084F  41                 	db	65	;'A'
   216  000850  56                 	db	86	;'V'
   217  000851  45                 	db	69	;'E'
   218  000852  20                 	db	32
   219  000853  43                 	db	67	;'C'
   220  000854  4F                 	db	79	;'O'
   221  000855  52                 	db	82	;'R'
   222  000856  52                 	db	82	;'R'
   223  000857  45                 	db	69	;'E'
   224  000858  43                 	db	67	;'C'
   225  000859  54                 	db	84	;'T'
   226  00085A  41                 	db	65	;'A'
   227  00085B  00                 	db	0
   228  00085C                     STR_2:
   229  00085C  53                 	db	83	;'S'
   230  00085D  4F                 	db	79	;'O'
   231  00085E  4C                 	db	76	;'L'
   232  00085F  4F                 	db	79	;'O'
   233  000860  20                 	db	32
   234  000861  33                 	db	51	;'3'
   235  000862  20                 	db	32
   236  000863  49                 	db	73	;'I'
   237  000864  4E                 	db	78	;'N'
   238  000865  54                 	db	84	;'T'
   239  000866  45                 	db	69	;'E'
   240  000867  4E                 	db	78	;'N'
   241  000868  4F                 	db	79	;'O'
   242  000869  53                 	db	83	;'S'
   243  00086A  00                 	db	0
   244  00086B                     STR_11:
   245  00086B  20                 	db	32
   246  00086C  2A                 	db	42
   247  00086D  2A                 	db	42
   248  00086E  42                 	db	66	;'B'
   249  00086F  4C                 	db	76	;'L'
   250  000870  4F                 	db	79	;'O'
   251  000871  51                 	db	81	;'Q'
   252  000872  55                 	db	85	;'U'
   253  000873  45                 	db	69	;'E'
   254  000874  4F                 	db	79	;'O'
   255  000875  2A                 	db	42
   256  000876  2A                 	db	42
   257  000877  20                 	db	32
   258  000878  00                 	db	0
   259  000879                     STR_4:
   260  000879  20                 	db	32
   261  00087A  43                 	db	67	;'C'
   262  00087B  4C                 	db	76	;'L'
   263  00087C  41                 	db	65	;'A'
   264  00087D  56                 	db	86	;'V'
   265  00087E  45                 	db	69	;'E'
   266  00087F  20                 	db	32
   267  000880  4E                 	db	78	;'N'
   268  000881  55                 	db	85	;'U'
   269  000882  45                 	db	69	;'E'
   270  000883  56                 	db	86	;'V'
   271  000884  41                 	db	65	;'A'
   272  000885  20                 	db	32
   273  000886  00                 	db	0
   274  000887                     STR_6:
   275  000887  2A                 	db	42
   276  000888  2A                 	db	42
   277  000889  31                 	db	49	;'1'
   278  00088A  5F                 	db	95	;'_'
   279  00088B  42                 	db	66	;'B'
   280  00088C  4C                 	db	76	;'L'
   281  00088D  4F                 	db	79	;'O'
   282  00088E  51                 	db	81	;'Q'
   283  00088F  55                 	db	85	;'U'
   284  000890  45                 	db	69	;'E'
   285  000891  4F                 	db	79	;'O'
   286  000892  2A                 	db	42
   287  000893  2A                 	db	42
   288  000894  00                 	db	0
   289  000895                     STR_1:
   290  000895  20                 	db	32
   291  000896  20                 	db	32
   292  000897  45                 	db	69	;'E'
   293  000898  52                 	db	82	;'R'
   294  000899  52                 	db	82	;'R'
   295  00089A  4F                 	db	79	;'O'
   296  00089B  52                 	db	82	;'R'
   297  00089C  20                 	db	32
   298  00089D  20                 	db	32
   299  00089E  00                 	db	0
   300  0000                     
   301                           ; #config settings
   302  00089F  00                 	db	0	; dummy byte at the end
   303  0000                     
   304                           	psect	cinit
   305  001894                     __pcinit:
   306                           	opt callstack 0
   307  001894                     start_initialization:
   308                           	opt callstack 0
   309  001894                     __initialization:
   310                           	opt callstack 0
   311                           
   312                           ; Initialize objects allocated to BANK0 (16 bytes)
   313                           ; load TBLPTR registers with __pidataBANK0
   314  001894  0E7E               	movlw	low __pidataBANK0
   315  001896  6EF6               	movwf	tblptrl,c
   316  001898  0E19               	movlw	high __pidataBANK0
   317  00189A  6EF7               	movwf	tblptrh,c
   318  00189C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   319  00189E  6EF8               	movwf	tblptru,c
   320  0018A0  EE00  F074         	lfsr	0,__pdataBANK0
   321  0018A4  EE10 F010          	lfsr	1,16
   322  0018A8                     copy_data0:
   323  0018A8  0009               	tblrd		*+
   324  0018AA  CFF5 FFEE          	movff	tablat,postinc0
   325  0018AE  50E5               	movf	postdec1,w,c
   326  0018B0  50E1               	movf	fsr1l,w,c
   327  0018B2  E1FA               	bnz	copy_data0
   328                           
   329                           ; Initialize objects allocated to COMRAM (4 bytes)
   330                           ; load TBLPTR registers with __pidataCOMRAM
   331  0018B4  0EB0               	movlw	low __pidataCOMRAM
   332  0018B6  6EF6               	movwf	tblptrl,c
   333  0018B8  0E19               	movlw	high __pidataCOMRAM
   334  0018BA  6EF7               	movwf	tblptrh,c
   335  0018BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   336  0018BE  6EF8               	movwf	tblptru,c
   337  0018C0  EE00  F059         	lfsr	0,__pdataCOMRAM
   338  0018C4  EE10 F004          	lfsr	1,4
   339  0018C8                     copy_data1:
   340  0018C8  0009               	tblrd		*+
   341  0018CA  CFF5 FFEE          	movff	tablat,postinc0
   342  0018CE  50E5               	movf	postdec1,w,c
   343  0018D0  50E1               	movf	fsr1l,w,c
   344  0018D2  E1FA               	bnz	copy_data1
   345                           
   346                           ; Clear objects allocated to BANK0 (1 bytes)
   347  0018D4  0100               	movlb	0
   348  0018D6  6B84               	clrf	__pbssBANK0& (0+255),b
   349                           
   350                           ; Clear objects allocated to COMRAM (6 bytes)
   351  0018D8  6A54               	clrf	(__pbssCOMRAM+5)& (0+255),c
   352  0018DA  6A53               	clrf	(__pbssCOMRAM+4)& (0+255),c
   353  0018DC  6A52               	clrf	(__pbssCOMRAM+3)& (0+255),c
   354  0018DE  6A51               	clrf	(__pbssCOMRAM+2)& (0+255),c
   355  0018E0  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   356  0018E2  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   357  0018E4                     end_of_initialization:
   358                           	opt callstack 0
   359  0018E4                     __end_of__initialization:
   360                           	opt callstack 0
   361  0018E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   362  0018E6  6EF8               	movwf	tblptru,c
   363  0018E8  0100               	movlb	0
   364  0018EA  EF2C  F006         	goto	_main	;jump to C main() function
   365                           
   366                           	psect	bssCOMRAM
   367  00004F                     __pbssCOMRAM:
   368                           	opt callstack 0
   369  00004F                     _VAL:
   370                           	opt callstack 0
   371  00004F                     	ds	1
   372  000050                     _UNI:
   373                           	opt callstack 0
   374  000050                     	ds	1
   375  000051                     _DEC:
   376                           	opt callstack 0
   377  000051                     	ds	1
   378  000052                     _CEN:
   379                           	opt callstack 0
   380  000052                     	ds	1
   381  000053                     _MIL:
   382                           	opt callstack 0
   383  000053                     	ds	1
   384  000054                     _K:
   385                           	opt callstack 0
   386  000054                     	ds	1
   387                           
   388                           	psect	dataCOMRAM
   389  000059                     __pdataCOMRAM:
   390                           	opt callstack 0
   391  000059                     _contra:
   392                           	opt callstack 0
   393  000059                     	ds	4
   394                           
   395                           	psect	bssBANK0
   396  000084                     __pbssBANK0:
   397                           	opt callstack 0
   398  000084                     _sinal:
   399                           	opt callstack 0
   400  000084                     	ds	1
   401                           
   402                           	psect	dataBANK0
   403  000074                     __pdataBANK0:
   404                           	opt callstack 0
   405  000074                     teclado_getc@F3164:
   406                           	opt callstack 0
   407  000074                     	ds	16
   408                           
   409                           	psect	cstackBANK0
   410  000060                     __pcstackBANK0:
   411                           	opt callstack 0
   412  000060                     main@m:
   413                           	opt callstack 0
   414                           
   415                           ; 4 bytes @ 0x0
   416  000060                     	ds	4
   417  000064                     main@c:
   418                           	opt callstack 0
   419                           
   420                           ; 4 bytes @ 0x4
   421  000064                     	ds	4
   422  000068                     main@d:
   423                           	opt callstack 0
   424                           
   425                           ; 4 bytes @ 0x8
   426  000068                     	ds	4
   427  00006C                     main@u:
   428                           	opt callstack 0
   429                           
   430                           ; 4 bytes @ 0xC
   431  00006C                     	ds	4
   432  000070                     main@m1:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x10
   436  000070                     	ds	1
   437  000071                     main@c1:
   438                           	opt callstack 0
   439                           
   440                           ; 1 bytes @ 0x11
   441  000071                     	ds	1
   442  000072                     main@d1:
   443                           	opt callstack 0
   444                           
   445                           ; 1 bytes @ 0x12
   446  000072                     	ds	1
   447  000073                     main@u1:
   448                           	opt callstack 0
   449                           
   450                           ; 1 bytes @ 0x13
   451  000073                     	ds	1
   452                           
   453                           	psect	cstackCOMRAM
   454  000001                     __pcstackCOMRAM:
   455                           	opt callstack 0
   456  000001                     ?___wmul:
   457                           	opt callstack 0
   458  000001                     ?___lmul:
   459                           	opt callstack 0
   460  000001                     LCD_putc@ch:
   461                           	opt callstack 0
   462  000001                     LCD_command@cmd:
   463                           	opt callstack 0
   464  000001                     eeprom_writex@address:
   465                           	opt callstack 0
   466  000001                     eeprom_readx@address:
   467                           	opt callstack 0
   468  000001                     ___wmul@multiplier:
   469                           	opt callstack 0
   470  000001                     ___lmul@multiplier:
   471                           	opt callstack 0
   472  000001                     teclado_getc@letras:
   473                           	opt callstack 0
   474                           
   475                           ; 16 bytes @ 0x0
   476  000001                     	ds	1
   477  000002                     ??_LCD_init:
   478  000002                     LCD_gotoxy@y:
   479                           	opt callstack 0
   480  000002                     LCD_puts@data:
   481                           	opt callstack 0
   482                           
   483                           ; 2 bytes @ 0x1
   484  000002                     	ds	1
   485  000003                     ??_LCD_gotoxy:
   486  000003                     eeprom_writex@data:
   487                           	opt callstack 0
   488  000003                     ___wmul@multiplicand:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x2
   492  000003                     	ds	1
   493  000004                     LCD_puts@nBytes:
   494                           	opt callstack 0
   495                           
   496                           ; 1 bytes @ 0x3
   497  000004                     	ds	1
   498  000005                     ??_LCD_puts:
   499  000005                     LCD_gotoxy@DDRAMAddr:
   500                           	opt callstack 0
   501  000005                     ___wmul@product:
   502                           	opt callstack 0
   503  000005                     ___lmul@multiplicand:
   504                           	opt callstack 0
   505                           
   506                           ; 4 bytes @ 0x4
   507  000005                     	ds	1
   508  000006                     LCD_gotoxy@x:
   509                           	opt callstack 0
   510                           
   511                           ; 1 bytes @ 0x5
   512  000006                     	ds	1
   513  000007                     LCD_puts@i:
   514                           	opt callstack 0
   515                           
   516                           ; 1 bytes @ 0x6
   517  000007                     	ds	2
   518  000009                     ___lmul@product:
   519                           	opt callstack 0
   520                           
   521                           ; 4 bytes @ 0x8
   522  000009                     	ds	4
   523  00000D                     ?_validar_clave:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0xC
   527  00000D                     	ds	2
   528  00000F                     ??_validar_clave:
   529                           
   530                           ; 1 bytes @ 0xE
   531  00000F                     	ds	2
   532  000011                     teclado_getc@valor:
   533                           	opt callstack 0
   534                           
   535                           ; 1 bytes @ 0x10
   536  000011                     	ds	1
   537  000012                     teclado_getc@i:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x11
   541  000012                     	ds	2
   542  000014                     
   543                           ; 1 bytes @ 0x13
   544  000014                     	ds	3
   545  000017                     validar_clave@m:
   546                           	opt callstack 0
   547                           
   548                           ; 4 bytes @ 0x16
   549  000017                     	ds	4
   550  00001B                     validar_clave@c:
   551                           	opt callstack 0
   552                           
   553                           ; 4 bytes @ 0x1A
   554  00001B                     	ds	4
   555  00001F                     validar_clave@d:
   556                           	opt callstack 0
   557                           
   558                           ; 4 bytes @ 0x1E
   559  00001F                     	ds	4
   560  000023                     validar_clave@u:
   561                           	opt callstack 0
   562                           
   563                           ; 4 bytes @ 0x22
   564  000023                     	ds	4
   565  000027                     validar_clave@clave:
   566                           	opt callstack 0
   567                           
   568                           ; 4 bytes @ 0x26
   569  000027                     	ds	4
   570  00002B                     ??_cambio_clave:
   571                           
   572                           ; 1 bytes @ 0x2A
   573  00002B                     	ds	8
   574  000033                     cambio_clave@m:
   575                           	opt callstack 0
   576                           
   577                           ; 4 bytes @ 0x32
   578  000033                     	ds	4
   579  000037                     cambio_clave@d:
   580                           	opt callstack 0
   581                           
   582                           ; 4 bytes @ 0x36
   583  000037                     	ds	4
   584  00003B                     cambio_clave@u:
   585                           	opt callstack 0
   586                           
   587                           ; 4 bytes @ 0x3A
   588  00003B                     	ds	4
   589  00003F                     cambio_clave@clave:
   590                           	opt callstack 0
   591                           
   592                           ; 4 bytes @ 0x3E
   593  00003F                     	ds	4
   594  000043                     cambio_clave@c:
   595                           	opt callstack 0
   596                           
   597                           ; 4 bytes @ 0x42
   598  000043                     	ds	4
   599  000047                     ??_main:
   600                           
   601                           ; 1 bytes @ 0x46
   602  000047                     	ds	8
   603                           
   604 ;;
   605 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   606 ;;
   607 ;; *************** function _main *****************
   608 ;; Defined at:
   609 ;;		line 420 in file "main.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  u               4   12[BANK0 ] long 
   614 ;;  d               4    8[BANK0 ] long 
   615 ;;  c               4    4[BANK0 ] long 
   616 ;;  m               4    0[BANK0 ] long 
   617 ;;  u1              1   19[BANK0 ] unsigned char 
   618 ;;  d1              1   18[BANK0 ] unsigned char 
   619 ;;  c1              1   17[BANK0 ] unsigned char 
   620 ;;  m1              1   16[BANK0 ] unsigned char 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   630 ;;      Params:         0       0       0       0       0       0       0       0       0
   631 ;;      Locals:         0      20       0       0       0       0       0       0       0
   632 ;;      Temps:          8       0       0       0       0       0       0       0       0
   633 ;;      Totals:         8      20       0       0       0       0       0       0       0
   634 ;;Total ram usage:       28 bytes
   635 ;; Hardware stack levels required when called:    4
   636 ;; This function calls:
   637 ;;		_LCD_clear
   638 ;;		_LCD_gotoxy
   639 ;;		_LCD_init
   640 ;;		_LCD_puts
   641 ;;		_TECLADO
   642 ;;		___lmul
   643 ;;		___wmul
   644 ;;		_cambio_clave
   645 ;;		_eeprom_readx
   646 ;;		_pedir_clave
   647 ;;		_teclado_init
   648 ;;		_validar_clave
   649 ;; This function is called by:
   650 ;;		Startup code after reset
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text0
   655  000C58                     __ptext0:
   656                           	opt callstack 0
   657  000C58                     _main:
   658                           	opt callstack 27
   659  000C58                     
   660                           ;main.c: 422:         intentos = 0;
   661  000C58  0E00               	movlw	0
   662  000C5A  6E55               	movwf	_intentos^0,c
   663  000C5C  0E00               	movlw	0
   664  000C5E  6E56               	movwf	(_intentos+1)^0,c
   665  000C60  0E00               	movlw	0
   666  000C62  6E57               	movwf	(_intentos+2)^0,c
   667  000C64  0E00               	movlw	0
   668  000C66  6E58               	movwf	(_intentos+3)^0,c
   669                           
   670                           ;main.c: 424:         long m, c, d, u;;main.c: 425:         char m1, c1, d1, u1;;main.c:
      +                           428:         TRISC = 0;
   671  000C68  0E00               	movlw	0
   672  000C6A  6E94               	movwf	148,c	;volatile
   673                           
   674                           ;main.c: 429:         TRISD = 0;
   675  000C6C  0E00               	movlw	0
   676  000C6E  6E95               	movwf	149,c	;volatile
   677                           
   678                           ;main.c: 430:         PORTC = 0;
   679  000C70  0E00               	movlw	0
   680  000C72  6E82               	movwf	130,c	;volatile
   681  000C74                     
   682                           ;main.c: 432:         LCD_init();
   683  000C74  EC8F  F00B         	call	_LCD_init	;wreg free
   684  000C78                     
   685                           ;main.c: 434:         teclado_init();
   686  000C78  ECCE  F00C         	call	_teclado_init	;wreg free
   687  000C7C                     
   688                           ;main.c: 439:         sinal = eeprom_readx(4);
   689  000C7C  0E00               	movlw	0
   690  000C7E  6E02               	movwf	(eeprom_readx@address+1)^0,c
   691  000C80  0E04               	movlw	4
   692  000C82  6E01               	movwf	eeprom_readx@address^0,c
   693  000C84  ECC7  F00C         	call	_eeprom_readx	;wreg free
   694  000C88  0100               	movlb	0	; () banked
   695  000C8A  6F84               	movwf	_sinal& (0+255),b
   696  000C8C                     
   697                           ; BSR set to: 0
   698                           ;main.c: 440:         if (sinal != 1)
   699  000C8C  0584               	decf	_sinal& (0+255),w,b
   700  000C8E  B4D8               	btfsc	status,2,c
   701  000C90  EF4C  F006         	goto	u1721
   702  000C94  EF4E  F006         	goto	u1720
   703  000C98                     u1721:
   704  000C98  EF58  F006         	goto	l2351
   705  000C9C                     u1720:
   706  000C9C                     
   707                           ; BSR set to: 0
   708                           ;main.c: 441:             contra = 2020;
   709  000C9C  0EE4               	movlw	228
   710  000C9E  6E59               	movwf	_contra^0,c
   711  000CA0  0E07               	movlw	7
   712  000CA2  6E5A               	movwf	(_contra+1)^0,c
   713  000CA4  0E00               	movlw	0
   714  000CA6  6E5B               	movwf	(_contra+2)^0,c
   715  000CA8  0E00               	movlw	0
   716  000CAA  6E5C               	movwf	(_contra+3)^0,c
   717  000CAC  EFDB  F006         	goto	l2363
   718  000CB0                     l2351:
   719                           
   720                           ; BSR set to: 0
   721                           ;main.c: 444:             m1 = eeprom_readx(0);
   722  000CB0  0E00               	movlw	0
   723  000CB2  6E02               	movwf	(eeprom_readx@address+1)^0,c
   724  000CB4  0E00               	movlw	0
   725  000CB6  6E01               	movwf	eeprom_readx@address^0,c
   726  000CB8  ECC7  F00C         	call	_eeprom_readx	;wreg free
   727  000CBC  0100               	movlb	0	; () banked
   728  000CBE  6F70               	movwf	main@m1& (0+255),b
   729                           
   730                           ;main.c: 445:             c1 = eeprom_readx(1);
   731  000CC0  0E00               	movlw	0
   732  000CC2  6E02               	movwf	(eeprom_readx@address+1)^0,c
   733  000CC4  0E01               	movlw	1
   734  000CC6  6E01               	movwf	eeprom_readx@address^0,c
   735  000CC8  ECC7  F00C         	call	_eeprom_readx	;wreg free
   736  000CCC  0100               	movlb	0	; () banked
   737  000CCE  6F71               	movwf	main@c1& (0+255),b
   738                           
   739                           ;main.c: 446:             d1 = eeprom_readx(2);
   740  000CD0  0E00               	movlw	0
   741  000CD2  6E02               	movwf	(eeprom_readx@address+1)^0,c
   742  000CD4  0E02               	movlw	2
   743  000CD6  6E01               	movwf	eeprom_readx@address^0,c
   744  000CD8  ECC7  F00C         	call	_eeprom_readx	;wreg free
   745  000CDC  0100               	movlb	0	; () banked
   746  000CDE  6F72               	movwf	main@d1& (0+255),b
   747                           
   748                           ;main.c: 447:             u1 = eeprom_readx(3);
   749  000CE0  0E00               	movlw	0
   750  000CE2  6E02               	movwf	(eeprom_readx@address+1)^0,c
   751  000CE4  0E03               	movlw	3
   752  000CE6  6E01               	movwf	eeprom_readx@address^0,c
   753  000CE8  ECC7  F00C         	call	_eeprom_readx	;wreg free
   754  000CEC  0100               	movlb	0	; () banked
   755  000CEE  6F73               	movwf	main@u1& (0+255),b
   756  000CF0                     
   757                           ; BSR set to: 0
   758                           ;main.c: 455:             m = m1 * 1000;
   759  000CF0  C070  F001         	movff	main@m1,___wmul@multiplier
   760  000CF4  6A02               	clrf	(___wmul@multiplier+1)^0,c
   761  000CF6  0E03               	movlw	3
   762  000CF8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   763  000CFA  0EE8               	movlw	232
   764  000CFC  6E03               	movwf	___wmul@multiplicand^0,c
   765  000CFE  ECAC  F00C         	call	___wmul	;wreg free
   766  000D02  C001  F060         	movff	?___wmul,main@m
   767  000D06  C002  F061         	movff	?___wmul+1,main@m+1
   768  000D0A  0100               	movlb	0	; () banked
   769  000D0C  0E00               	movlw	0
   770  000D0E  BF61               	btfsc	(main@m+1)& (0+255),7,b
   771  000D10  0EFF               	movlw	-1
   772  000D12  6F62               	movwf	(main@m+2)& (0+255),b
   773  000D14  6F63               	movwf	(main@m+3)& (0+255),b
   774  000D16                     
   775                           ; BSR set to: 0
   776                           ;main.c: 457:             c = (long) c1 * 100;
   777  000D16  5171               	movf	main@c1& (0+255),w,b
   778  000D18  6E01               	movwf	___lmul@multiplier^0,c
   779  000D1A  6A02               	clrf	(___lmul@multiplier+1)^0,c
   780  000D1C  6A03               	clrf	(___lmul@multiplier+2)^0,c
   781  000D1E  6A04               	clrf	(___lmul@multiplier+3)^0,c
   782  000D20  0E64               	movlw	100
   783  000D22  6E05               	movwf	___lmul@multiplicand^0,c
   784  000D24  0E00               	movlw	0
   785  000D26  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   786  000D28  0E00               	movlw	0
   787  000D2A  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   788  000D2C  0E00               	movlw	0
   789  000D2E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   790  000D30  EC15  F00C         	call	___lmul	;wreg free
   791  000D34  C001  F064         	movff	?___lmul,main@c
   792  000D38  C002  F065         	movff	?___lmul+1,main@c+1
   793  000D3C  C003  F066         	movff	?___lmul+2,main@c+2
   794  000D40  C004  F067         	movff	?___lmul+3,main@c+3
   795  000D44                     
   796                           ;main.c: 458:             d = d1 * 10;
   797  000D44  0100               	movlb	0	; () banked
   798  000D46  5172               	movf	main@d1& (0+255),w,b
   799  000D48  0D0A               	mullw	10
   800  000D4A  CFF3 F047          	movff	prodl,??_main
   801  000D4E  CFF4 F048          	movff	prodh,??_main+1
   802  000D52  C047  F068         	movff	??_main,main@d
   803  000D56  C048  F069         	movff	??_main+1,main@d+1
   804  000D5A  0E00               	movlw	0
   805  000D5C  BF69               	btfsc	(main@d+1)& (0+255),7,b
   806  000D5E  0EFF               	movlw	-1
   807  000D60  6F6A               	movwf	(main@d+2)& (0+255),b
   808  000D62  6F6B               	movwf	(main@d+3)& (0+255),b
   809  000D64                     
   810                           ; BSR set to: 0
   811                           ;main.c: 459:             u = u1;
   812  000D64  5173               	movf	main@u1& (0+255),w,b
   813  000D66  6F6C               	movwf	main@u& (0+255),b
   814  000D68  6B6D               	clrf	(main@u+1)& (0+255),b
   815  000D6A  6B6E               	clrf	(main@u+2)& (0+255),b
   816  000D6C  6B6F               	clrf	(main@u+3)& (0+255),b
   817  000D6E                     
   818                           ; BSR set to: 0
   819                           ;main.c: 461:             contra = m + c + d + u;
   820  000D6E  5164               	movf	main@c& (0+255),w,b
   821  000D70  2560               	addwf	main@m& (0+255),w,b
   822  000D72  6E47               	movwf	??_main^0,c
   823  000D74  5165               	movf	(main@c+1)& (0+255),w,b
   824  000D76  2161               	addwfc	(main@m+1)& (0+255),w,b
   825  000D78  6E48               	movwf	(??_main+1)^0,c
   826  000D7A  5166               	movf	(main@c+2)& (0+255),w,b
   827  000D7C  2162               	addwfc	(main@m+2)& (0+255),w,b
   828  000D7E  6E49               	movwf	(??_main+2)^0,c
   829  000D80  5167               	movf	(main@c+3)& (0+255),w,b
   830  000D82  2163               	addwfc	(main@m+3)& (0+255),w,b
   831  000D84  6E4A               	movwf	(??_main+3)^0,c
   832  000D86  5168               	movf	main@d& (0+255),w,b
   833  000D88  2447               	addwf	??_main^0,w,c
   834  000D8A  6E4B               	movwf	(??_main+4)^0,c
   835  000D8C  5169               	movf	(main@d+1)& (0+255),w,b
   836  000D8E  2048               	addwfc	(??_main+1)^0,w,c
   837  000D90  6E4C               	movwf	(??_main+5)^0,c
   838  000D92  516A               	movf	(main@d+2)& (0+255),w,b
   839  000D94  2049               	addwfc	(??_main+2)^0,w,c
   840  000D96  6E4D               	movwf	(??_main+6)^0,c
   841  000D98  516B               	movf	(main@d+3)& (0+255),w,b
   842  000D9A  204A               	addwfc	(??_main+3)^0,w,c
   843  000D9C  6E4E               	movwf	(??_main+7)^0,c
   844  000D9E  516C               	movf	main@u& (0+255),w,b
   845  000DA0  244B               	addwf	(??_main+4)^0,w,c
   846  000DA2  6E59               	movwf	_contra^0,c
   847  000DA4  516D               	movf	(main@u+1)& (0+255),w,b
   848  000DA6  204C               	addwfc	(??_main+5)^0,w,c
   849  000DA8  6E5A               	movwf	(_contra+1)^0,c
   850  000DAA  516E               	movf	(main@u+2)& (0+255),w,b
   851  000DAC  204D               	addwfc	(??_main+6)^0,w,c
   852  000DAE  6E5B               	movwf	(_contra+2)^0,c
   853  000DB0  516F               	movf	(main@u+3)& (0+255),w,b
   854  000DB2  204E               	addwfc	(??_main+7)^0,w,c
   855  000DB4  6E5C               	movwf	(_contra+3)^0,c
   856  000DB6                     l2363:
   857                           
   858                           ;main.c: 465:             LCD_clear();
   859  000DB6  ECD4  F00C         	call	_LCD_clear	;wreg free
   860  000DBA                     
   861                           ;main.c: 466:             LCD_gotoxy(2, 1);
   862  000DBA  0E01               	movlw	1
   863  000DBC  6E02               	movwf	LCD_gotoxy@y^0,c
   864  000DBE  0E02               	movlw	2
   865  000DC0  ECDD  F00B         	call	_LCD_gotoxy
   866  000DC4                     
   867                           ;main.c: 467:             LCD_puts(" DIGITE CLAVE ", 14);
   868  000DC4  0E2F               	movlw	low STR_8
   869  000DC6  6E02               	movwf	LCD_puts@data^0,c
   870  000DC8  0E08               	movlw	high STR_8
   871  000DCA  6E03               	movwf	(LCD_puts@data+1)^0,c
   872  000DCC  0E0E               	movlw	14
   873  000DCE  6E04               	movwf	LCD_puts@nBytes^0,c
   874  000DD0  EC77  F00C         	call	_LCD_puts	;wreg free
   875  000DD4                     
   876                           ;main.c: 468:             LCD_gotoxy(1, 2);
   877  000DD4  0E02               	movlw	2
   878  000DD6  6E02               	movwf	LCD_gotoxy@y^0,c
   879  000DD8  0E01               	movlw	1
   880  000DDA  ECDD  F00B         	call	_LCD_gotoxy
   881  000DDE                     
   882                           ;main.c: 469:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   883  000DDE  0E06               	movlw	6
   884  000DE0  6E48               	movwf	(??_main+1)^0,c
   885  000DE2  0E13               	movlw	19
   886  000DE4  6E47               	movwf	??_main^0,c
   887  000DE6  0EAE               	movlw	174
   888  000DE8                     u1787:
   889  000DE8  2EE8               	decfsz	wreg,f,c
   890  000DEA  D7FE               	bra	u1787
   891  000DEC  2E47               	decfsz	??_main^0,f,c
   892  000DEE  D7FC               	bra	u1787
   893  000DF0  2E48               	decfsz	(??_main+1)^0,f,c
   894  000DF2  D7FA               	bra	u1787
   895  000DF4                     
   896                           ;main.c: 471:             pedir_clave();
   897  000DF4  EC90  F009         	call	_pedir_clave	;wreg free
   898  000DF8                     
   899                           ;main.c: 472:             if (K == '*')
   900  000DF8  0E2A               	movlw	42
   901  000DFA  1854               	xorwf	_K^0,w,c
   902  000DFC  A4D8               	btfss	status,2,c
   903  000DFE  EF03  F007         	goto	u1731
   904  000E02  EF05  F007         	goto	u1730
   905  000E06                     u1731:
   906  000E06  EF16  F007         	goto	l2385
   907  000E0A                     u1730:
   908  000E0A                     
   909                           ;main.c: 473:                 cambio_clave();
   910  000E0A  EC50  F004         	call	_cambio_clave	;wreg free
   911  000E0E  EFDB  F006         	goto	l2363
   912  000E12                     l2379:
   913                           
   914                           ;main.c: 476:                     TECLADO();
   915  000E12  EC33  F00A         	call	_TECLADO	;wreg free
   916  000E16                     
   917                           ;main.c: 477:                     if (K == '*')
   918  000E16  0E2A               	movlw	42
   919  000E18  1854               	xorwf	_K^0,w,c
   920  000E1A  A4D8               	btfss	status,2,c
   921  000E1C  EF12  F007         	goto	u1741
   922  000E20  EF14  F007         	goto	u1740
   923  000E24                     u1741:
   924  000E24  EF16  F007         	goto	l2385
   925  000E28                     u1740:
   926  000E28                     
   927                           ;main.c: 478:                         cambio_clave();
   928  000E28  EC50  F004         	call	_cambio_clave	;wreg free
   929  000E2C                     l2385:
   930                           
   931                           ;main.c: 475:                 while ((K != '#')) {
   932  000E2C  0E23               	movlw	35
   933  000E2E  1854               	xorwf	_K^0,w,c
   934  000E30  A4D8               	btfss	status,2,c
   935  000E32  EF1D  F007         	goto	u1751
   936  000E36  EF1F  F007         	goto	u1750
   937  000E3A                     u1751:
   938  000E3A  EF09  F007         	goto	l2379
   939  000E3E                     u1750:
   940  000E3E                     
   941                           ;main.c: 480:                 if (validar_clave())
   942  000E3E  ECCE  F008         	call	_validar_clave	;wreg free
   943  000E42  500D               	movf	?_validar_clave^0,w,c
   944  000E44  100E               	iorwf	(?_validar_clave+1)^0,w,c
   945  000E46  B4D8               	btfsc	status,2,c
   946  000E48  EF28  F007         	goto	u1761
   947  000E4C  EF2A  F007         	goto	u1760
   948  000E50                     u1761:
   949  000E50  EF78  F007         	goto	l2413
   950  000E54                     u1760:
   951  000E54                     
   952                           ;main.c: 483:                 {;main.c: 484:                     LCD_clear();
   953  000E54  ECD4  F00C         	call	_LCD_clear	;wreg free
   954  000E58                     
   955                           ;main.c: 485:                     LCD_gotoxy(2, 1);
   956  000E58  0E01               	movlw	1
   957  000E5A  6E02               	movwf	LCD_gotoxy@y^0,c
   958  000E5C  0E02               	movlw	2
   959  000E5E  ECDD  F00B         	call	_LCD_gotoxy
   960  000E62                     
   961                           ;main.c: 486:                     LCD_puts("CLAVE CORRECTA", 16);
   962  000E62  0E4D               	movlw	low STR_9
   963  000E64  6E02               	movwf	LCD_puts@data^0,c
   964  000E66  0E08               	movlw	high STR_9
   965  000E68  6E03               	movwf	(LCD_puts@data+1)^0,c
   966  000E6A  0E10               	movlw	16
   967  000E6C  6E04               	movwf	LCD_puts@nBytes^0,c
   968  000E6E  EC77  F00C         	call	_LCD_puts	;wreg free
   969  000E72                     
   970                           ;main.c: 487:                     _delay((unsigned long)((40)*(4000000/4000.0)));
   971  000E72  0E34               	movlw	52
   972  000E74  6E47               	movwf	??_main^0,c
   973  000E76  0EF2               	movlw	242
   974  000E78                     u1797:
   975  000E78  2EE8               	decfsz	wreg,f,c
   976  000E7A  D7FE               	bra	u1797
   977  000E7C  2E47               	decfsz	??_main^0,f,c
   978  000E7E  D7FC               	bra	u1797
   979  000E80                     
   980                           ;main.c: 488:                     LCD_gotoxy(2, 2);
   981  000E80  0E02               	movlw	2
   982  000E82  6E02               	movwf	LCD_gotoxy@y^0,c
   983  000E84  0E02               	movlw	2
   984  000E86  ECDD  F00B         	call	_LCD_gotoxy
   985  000E8A                     
   986                           ;main.c: 489:                     LCD_puts("  BIENVENIDO  ", 16);
   987  000E8A  0E20               	movlw	low STR_10
   988  000E8C  6E02               	movwf	LCD_puts@data^0,c
   989  000E8E  0E08               	movlw	high STR_10
   990  000E90  6E03               	movwf	(LCD_puts@data+1)^0,c
   991  000E92  0E10               	movlw	16
   992  000E94  6E04               	movwf	LCD_puts@nBytes^0,c
   993  000E96  EC77  F00C         	call	_LCD_puts	;wreg free
   994  000E9A                     
   995                           ;main.c: 490:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
   996  000E9A  0E15               	movlw	21
   997  000E9C  6E48               	movwf	(??_main+1)^0,c
   998  000E9E  0E4B               	movlw	75
   999  000EA0  6E47               	movwf	??_main^0,c
  1000  000EA2  0EBE               	movlw	190
  1001  000EA4                     u1807:
  1002  000EA4  2EE8               	decfsz	wreg,f,c
  1003  000EA6  D7FE               	bra	u1807
  1004  000EA8  2E47               	decfsz	??_main^0,f,c
  1005  000EAA  D7FC               	bra	u1807
  1006  000EAC  2E48               	decfsz	(??_main+1)^0,f,c
  1007  000EAE  D7FA               	bra	u1807
  1008  000EB0  D000               	nop2	
  1009  000EB2                     
  1010                           ;main.c: 491:                     PORTC = 0B00000001;
  1011  000EB2  0E01               	movlw	1
  1012  000EB4  6E82               	movwf	130,c	;volatile
  1013  000EB6                     
  1014                           ;main.c: 492:                     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1015  000EB6  0E0B               	movlw	11
  1016  000EB8  6E48               	movwf	(??_main+1)^0,c
  1017  000EBA  0E26               	movlw	38
  1018  000EBC  6E47               	movwf	??_main^0,c
  1019  000EBE  0E5E               	movlw	94
  1020  000EC0                     u1817:
  1021  000EC0  2EE8               	decfsz	wreg,f,c
  1022  000EC2  D7FE               	bra	u1817
  1023  000EC4  2E47               	decfsz	??_main^0,f,c
  1024  000EC6  D7FC               	bra	u1817
  1025  000EC8  2E48               	decfsz	(??_main+1)^0,f,c
  1026  000ECA  D7FA               	bra	u1817
  1027  000ECC                     
  1028                           ;main.c: 493:                     PORTC = 0B00000010;
  1029  000ECC  0E02               	movlw	2
  1030  000ECE  6E82               	movwf	130,c	;volatile
  1031  000ED0                     
  1032                           ;main.c: 494:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
  1033  000ED0  0E15               	movlw	21
  1034  000ED2  6E48               	movwf	(??_main+1)^0,c
  1035  000ED4  0E4B               	movlw	75
  1036  000ED6  6E47               	movwf	??_main^0,c
  1037  000ED8  0EBE               	movlw	190
  1038  000EDA                     u1827:
  1039  000EDA  2EE8               	decfsz	wreg,f,c
  1040  000EDC  D7FE               	bra	u1827
  1041  000EDE  2E47               	decfsz	??_main^0,f,c
  1042  000EE0  D7FC               	bra	u1827
  1043  000EE2  2E48               	decfsz	(??_main+1)^0,f,c
  1044  000EE4  D7FA               	bra	u1827
  1045  000EE6  D000               	nop2	
  1046  000EE8                     
  1047                           ;main.c: 496:                     PORTC = 0;
  1048  000EE8  0E00               	movlw	0
  1049  000EEA  6E82               	movwf	130,c	;volatile
  1050                           
  1051                           ;main.c: 498:                 } else {
  1052  000EEC  EFDB  F006         	goto	l2363
  1053  000EF0                     l2413:
  1054                           
  1055                           ;main.c: 499:                     LCD_clear();
  1056  000EF0  ECD4  F00C         	call	_LCD_clear	;wreg free
  1057  000EF4                     
  1058                           ;main.c: 500:                     LCD_gotoxy(3, 1);
  1059  000EF4  0E01               	movlw	1
  1060  000EF6  6E02               	movwf	LCD_gotoxy@y^0,c
  1061  000EF8  0E03               	movlw	3
  1062  000EFA  ECDD  F00B         	call	_LCD_gotoxy
  1063  000EFE                     
  1064                           ;main.c: 501:                     LCD_puts(" **BLOQUEO** ", 16);
  1065  000EFE  0E6B               	movlw	low STR_11
  1066  000F00  6E02               	movwf	LCD_puts@data^0,c
  1067  000F02  0E08               	movlw	high STR_11
  1068  000F04  6E03               	movwf	(LCD_puts@data+1)^0,c
  1069  000F06  0E10               	movlw	16
  1070  000F08  6E04               	movwf	LCD_puts@nBytes^0,c
  1071  000F0A  EC77  F00C         	call	_LCD_puts	;wreg free
  1072  000F0E                     
  1073                           ;main.c: 502:                     _delay((unsigned long)((80)*(4000000/4000.0)));
  1074  000F0E  0E68               	movlw	104
  1075  000F10  6E47               	movwf	??_main^0,c
  1076  000F12  0EE4               	movlw	228
  1077  000F14                     u1837:
  1078  000F14  2EE8               	decfsz	wreg,f,c
  1079  000F16  D7FE               	bra	u1837
  1080  000F18  2E47               	decfsz	??_main^0,f,c
  1081  000F1A  D7FC               	bra	u1837
  1082  000F1C  D000               	nop2	
  1083  000F1E                     
  1084                           ;main.c: 503:                       intentos++;
  1085  000F1E  0E01               	movlw	1
  1086  000F20  2655               	addwf	_intentos^0,f,c
  1087  000F22  0E00               	movlw	0
  1088  000F24  2256               	addwfc	(_intentos+1)^0,f,c
  1089  000F26  2257               	addwfc	(_intentos+2)^0,f,c
  1090  000F28  2258               	addwfc	(_intentos+3)^0,f,c
  1091  000F2A                     
  1092                           ;main.c: 504:                     LCD_gotoxy(2, 2);
  1093  000F2A  0E02               	movlw	2
  1094  000F2C  6E02               	movwf	LCD_gotoxy@y^0,c
  1095  000F2E  0E02               	movlw	2
  1096  000F30  ECDD  F00B         	call	_LCD_gotoxy
  1097  000F34                     
  1098                           ;main.c: 505:                     LCD_puts("CLAVE INVALIDA ", 16);
  1099  000F34  0E01               	movlw	low STR_7
  1100  000F36  6E02               	movwf	LCD_puts@data^0,c
  1101  000F38  0E08               	movlw	high STR_7
  1102  000F3A  6E03               	movwf	(LCD_puts@data+1)^0,c
  1103  000F3C  0E10               	movlw	16
  1104  000F3E  6E04               	movwf	LCD_puts@nBytes^0,c
  1105  000F40  EC77  F00C         	call	_LCD_puts	;wreg free
  1106  000F44                     
  1107                           ;main.c: 506:                     _delay((unsigned long)((500)*(4000000/4000.0)));
  1108  000F44  0E03               	movlw	3
  1109  000F46  6E48               	movwf	(??_main+1)^0,c
  1110  000F48  0E8A               	movlw	138
  1111  000F4A  6E47               	movwf	??_main^0,c
  1112  000F4C  0E56               	movlw	86
  1113  000F4E                     u1847:
  1114  000F4E  2EE8               	decfsz	wreg,f,c
  1115  000F50  D7FE               	bra	u1847
  1116  000F52  2E47               	decfsz	??_main^0,f,c
  1117  000F54  D7FC               	bra	u1847
  1118  000F56  2E48               	decfsz	(??_main+1)^0,f,c
  1119  000F58  D7FA               	bra	u1847
  1120  000F5A                     
  1121                           ;main.c: 507:                     PORTDbits.RD3 = 1;
  1122  000F5A  8683               	bsf	131,3,c	;volatile
  1123  000F5C                     
  1124                           ;main.c: 508:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1125  000F5C  0E06               	movlw	6
  1126  000F5E  6E48               	movwf	(??_main+1)^0,c
  1127  000F60  0E13               	movlw	19
  1128  000F62  6E47               	movwf	??_main^0,c
  1129  000F64  0EAE               	movlw	174
  1130  000F66                     u1857:
  1131  000F66  2EE8               	decfsz	wreg,f,c
  1132  000F68  D7FE               	bra	u1857
  1133  000F6A  2E47               	decfsz	??_main^0,f,c
  1134  000F6C  D7FC               	bra	u1857
  1135  000F6E  2E48               	decfsz	(??_main+1)^0,f,c
  1136  000F70  D7FA               	bra	u1857
  1137  000F72                     
  1138                           ;main.c: 509:                     PORTD = 0;
  1139  000F72  0E00               	movlw	0
  1140  000F74  6E83               	movwf	131,c	;volatile
  1141  000F76  EFDB  F006         	goto	l2363
  1142  000F7A  EF00  F000         	goto	start
  1143  000F7E                     __end_of_main:
  1144                           	opt callstack 0
  1145                           
  1146 ;; *************** function _teclado_init *****************
  1147 ;; Defined at:
  1148 ;;		line 6 in file "teclado.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1162 ;;      Params:         0       0       0       0       0       0       0       0       0
  1163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1165 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1166 ;;Total ram usage:        0 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text1
  1176  00199C                     __ptext1:
  1177                           	opt callstack 0
  1178  00199C                     _teclado_init:
  1179                           	opt callstack 30
  1180  00199C                     
  1181                           ;teclado.c: 8:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  1182  00199C  0EF0               	movlw	240
  1183  00199E  1693               	andwf	147,f,c	;volatile
  1184                           
  1185                           ;teclado.c: 9:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  1186  0019A0  0EF0               	movlw	240
  1187  0019A2  1293               	iorwf	147,f,c	;volatile
  1188  0019A4                     
  1189                           ;teclado.c: 10:     INTCON2bits.RBPU = 0;
  1190  0019A4  9EF1               	bcf	241,7,c	;volatile
  1191  0019A6  0012               	return		;funcret
  1192  0019A8                     __end_of_teclado_init:
  1193                           	opt callstack 0
  1194                           
  1195 ;; *************** function _eeprom_readx *****************
  1196 ;; Defined at:
  1197 ;;		line 25 in file "eeprom.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  address         2    0[COMRAM] int 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      unsigned char 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1211 ;;      Params:         2       0       0       0       0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1214 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1215 ;;Total ram usage:        2 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text2
  1225  00198E                     __ptext2:
  1226                           	opt callstack 0
  1227  00198E                     _eeprom_readx:
  1228                           	opt callstack 30
  1229  00198E                     
  1230                           ;eeprom.c: 25: char eeprom_readx(int address);eeprom.c: 26: {;eeprom.c: 27:     EEADR = 
      +                          address;
  1231  00198E  C001  FFA9         	movff	eeprom_readx@address,4009	;volatile
  1232                           
  1233                           ;eeprom.c: 28:     EECON1bits.EEPGD = 0;
  1234  001992  9EA6               	bcf	166,7,c	;volsfr
  1235                           
  1236                           ;eeprom.c: 29:     EECON1bits.CFGS = 0;
  1237  001994  9CA6               	bcf	166,6,c	;volsfr
  1238                           
  1239                           ;eeprom.c: 30:     EECON1bits.RD = 1;
  1240  001996  80A6               	bsf	166,0,c	;volsfr
  1241  001998                     
  1242                           ;eeprom.c: 31:     return(EEDATA);
  1243  001998  50A8               	movf	168,w,c	;volatile
  1244  00199A  0012               	return		;funcret
  1245  00199C                     __end_of_eeprom_readx:
  1246                           	opt callstack 0
  1247                           
  1248 ;; *************** function _cambio_clave *****************
  1249 ;; Defined at:
  1250 ;;		line 335 in file "main.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  c               4   66[COMRAM] long 
  1255 ;;  clave           4   62[COMRAM] long 
  1256 ;;  u               4   58[COMRAM] long 
  1257 ;;  d               4   54[COMRAM] long 
  1258 ;;  m               4   50[COMRAM] long 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0
  1269 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1270 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1271 ;;      Totals:        28       0       0       0       0       0       0       0       0
  1272 ;;Total ram usage:       28 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    3
  1275 ;; This function calls:
  1276 ;;		_LCD_clear
  1277 ;;		_LCD_gotoxy
  1278 ;;		_LCD_putc
  1279 ;;		_LCD_puts
  1280 ;;		_TECLADO
  1281 ;;		___lmul
  1282 ;;		___wmul
  1283 ;;		_eeprom_writex
  1284 ;;		_pedir_clave
  1285 ;;		_validar_clave
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text3
  1292  0008A0                     __ptext3:
  1293                           	opt callstack 0
  1294  0008A0                     _cambio_clave:
  1295                           	opt callstack 27
  1296  0008A0                     
  1297                           ;main.c: 338:     LCD_clear();
  1298  0008A0  ECD4  F00C         	call	_LCD_clear	;wreg free
  1299  0008A4                     
  1300                           ;main.c: 339:     LCD_gotoxy(2, 1);
  1301  0008A4  0E01               	movlw	1
  1302  0008A6  6E02               	movwf	LCD_gotoxy@y^0,c
  1303  0008A8  0E02               	movlw	2
  1304  0008AA  ECDD  F00B         	call	_LCD_gotoxy
  1305  0008AE                     
  1306                           ;main.c: 340:     LCD_puts(" CLAVE ACTUAL ", 15);
  1307  0008AE  0E3E               	movlw	low STR_3
  1308  0008B0  6E02               	movwf	LCD_puts@data^0,c
  1309  0008B2  0E08               	movlw	high STR_3
  1310  0008B4  6E03               	movwf	(LCD_puts@data+1)^0,c
  1311  0008B6  0E0F               	movlw	15
  1312  0008B8  6E04               	movwf	LCD_puts@nBytes^0,c
  1313  0008BA  EC77  F00C         	call	_LCD_puts	;wreg free
  1314  0008BE                     
  1315                           ;main.c: 341:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1316  0008BE  0E03               	movlw	3
  1317  0008C0  6E2C               	movwf	(??_cambio_clave+1)^0,c
  1318  0008C2  0E8A               	movlw	138
  1319  0008C4  6E2B               	movwf	??_cambio_clave^0,c
  1320  0008C6  0E56               	movlw	86
  1321  0008C8                     u1867:
  1322  0008C8  2EE8               	decfsz	wreg,f,c
  1323  0008CA  D7FE               	bra	u1867
  1324  0008CC  2E2B               	decfsz	??_cambio_clave^0,f,c
  1325  0008CE  D7FC               	bra	u1867
  1326  0008D0  2E2C               	decfsz	(??_cambio_clave+1)^0,f,c
  1327  0008D2  D7FA               	bra	u1867
  1328  0008D4                     
  1329                           ;main.c: 342:     LCD_gotoxy(1, 2);
  1330  0008D4  0E02               	movlw	2
  1331  0008D6  6E02               	movwf	LCD_gotoxy@y^0,c
  1332  0008D8  0E01               	movlw	1
  1333  0008DA  ECDD  F00B         	call	_LCD_gotoxy
  1334  0008DE                     
  1335                           ;main.c: 343:     pedir_clave();
  1336  0008DE  EC90  F009         	call	_pedir_clave	;wreg free
  1337  0008E2                     
  1338                           ;main.c: 345:     if (validar_clave()) {
  1339  0008E2  ECCE  F008         	call	_validar_clave	;wreg free
  1340  0008E6  500D               	movf	?_validar_clave^0,w,c
  1341  0008E8  100E               	iorwf	(?_validar_clave+1)^0,w,c
  1342  0008EA  B4D8               	btfsc	status,2,c
  1343  0008EC  EF7A  F004         	goto	u1631
  1344  0008F0  EF7C  F004         	goto	u1630
  1345  0008F4                     u1631:
  1346  0008F4  EFF0  F005         	goto	l2223
  1347  0008F8                     u1630:
  1348  0008F8                     
  1349                           ;main.c: 346:         LCD_clear();
  1350  0008F8  ECD4  F00C         	call	_LCD_clear	;wreg free
  1351  0008FC                     
  1352                           ;main.c: 347:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1353  0008FC  0E03               	movlw	3
  1354  0008FE  6E2C               	movwf	(??_cambio_clave+1)^0,c
  1355  000900  0E8A               	movlw	138
  1356  000902  6E2B               	movwf	??_cambio_clave^0,c
  1357  000904  0E56               	movlw	86
  1358  000906                     u1877:
  1359  000906  2EE8               	decfsz	wreg,f,c
  1360  000908  D7FE               	bra	u1877
  1361  00090A  2E2B               	decfsz	??_cambio_clave^0,f,c
  1362  00090C  D7FC               	bra	u1877
  1363  00090E  2E2C               	decfsz	(??_cambio_clave+1)^0,f,c
  1364  000910  D7FA               	bra	u1877
  1365  000912                     
  1366                           ;main.c: 348:         LCD_gotoxy(2, 1);
  1367  000912  0E01               	movlw	1
  1368  000914  6E02               	movwf	LCD_gotoxy@y^0,c
  1369  000916  0E02               	movlw	2
  1370  000918  ECDD  F00B         	call	_LCD_gotoxy
  1371  00091C                     
  1372                           ;main.c: 349:         LCD_puts(" CLAVE NUEVA ", 14);
  1373  00091C  0E79               	movlw	low STR_4
  1374  00091E  6E02               	movwf	LCD_puts@data^0,c
  1375  000920  0E08               	movlw	high STR_4
  1376  000922  6E03               	movwf	(LCD_puts@data+1)^0,c
  1377  000924  0E0E               	movlw	14
  1378  000926  6E04               	movwf	LCD_puts@nBytes^0,c
  1379  000928  EC77  F00C         	call	_LCD_puts	;wreg free
  1380  00092C                     
  1381                           ;main.c: 350:         LCD_gotoxy(1, 2);
  1382  00092C  0E02               	movlw	2
  1383  00092E  6E02               	movwf	LCD_gotoxy@y^0,c
  1384  000930  0E01               	movlw	1
  1385  000932  ECDD  F00B         	call	_LCD_gotoxy
  1386  000936                     
  1387                           ;main.c: 351:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1388  000936  0E06               	movlw	6
  1389  000938  6E2C               	movwf	(??_cambio_clave+1)^0,c
  1390  00093A  0E13               	movlw	19
  1391  00093C  6E2B               	movwf	??_cambio_clave^0,c
  1392  00093E  0EAE               	movlw	174
  1393  000940                     u1887:
  1394  000940  2EE8               	decfsz	wreg,f,c
  1395  000942  D7FE               	bra	u1887
  1396  000944  2E2B               	decfsz	??_cambio_clave^0,f,c
  1397  000946  D7FC               	bra	u1887
  1398  000948  2E2C               	decfsz	(??_cambio_clave+1)^0,f,c
  1399  00094A  D7FA               	bra	u1887
  1400  00094C                     
  1401                           ;main.c: 352:         TECLADO();
  1402  00094C  EC33  F00A         	call	_TECLADO	;wreg free
  1403  000950                     
  1404                           ;main.c: 353:         validar_clave();
  1405  000950  ECCE  F008         	call	_validar_clave	;wreg free
  1406  000954                     
  1407                           ;main.c: 355:         if ((K != '#')&&(K != '*')) {
  1408  000954  0E23               	movlw	35
  1409  000956  1854               	xorwf	_K^0,w,c
  1410  000958  B4D8               	btfsc	status,2,c
  1411  00095A  EFB1  F004         	goto	u1641
  1412  00095E  EFB3  F004         	goto	u1640
  1413  000962                     u1641:
  1414  000962  EFC8  F004         	goto	l2155
  1415  000966                     u1640:
  1416  000966  0E2A               	movlw	42
  1417  000968  1854               	xorwf	_K^0,w,c
  1418  00096A  B4D8               	btfsc	status,2,c
  1419  00096C  EFBA  F004         	goto	u1651
  1420  000970  EFBC  F004         	goto	u1650
  1421  000974                     u1651:
  1422  000974  EFC8  F004         	goto	l2155
  1423  000978                     u1650:
  1424  000978                     
  1425                           ;main.c: 356:             LCD_putc('*');
  1426  000978  0E2A               	movlw	42
  1427  00097A  EC24  F00B         	call	_LCD_putc
  1428  00097E                     
  1429                           ;main.c: 357:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1430  00097E  0E82               	movlw	130
  1431  000980  6E2B               	movwf	??_cambio_clave^0,c
  1432  000982  0EDE               	movlw	222
  1433  000984                     u1897:
  1434  000984  2EE8               	decfsz	wreg,f,c
  1435  000986  D7FE               	bra	u1897
  1436  000988  2E2B               	decfsz	??_cambio_clave^0,f,c
  1437  00098A  D7FC               	bra	u1897
  1438  00098C                     
  1439                           ;main.c: 358:             MIL = VAL;
  1440  00098C  C04F  F053         	movff	_VAL,_MIL
  1441  000990                     l2155:
  1442                           
  1443                           ;main.c: 361:         TECLADO();
  1444  000990  EC33  F00A         	call	_TECLADO	;wreg free
  1445  000994                     
  1446                           ;main.c: 362:         if ((K != '#')&&(K != '*')) {
  1447  000994  0E23               	movlw	35
  1448  000996  1854               	xorwf	_K^0,w,c
  1449  000998  B4D8               	btfsc	status,2,c
  1450  00099A  EFD1  F004         	goto	u1661
  1451  00099E  EFD3  F004         	goto	u1660
  1452  0009A2                     u1661:
  1453  0009A2  EFE8  F004         	goto	l2167
  1454  0009A6                     u1660:
  1455  0009A6  0E2A               	movlw	42
  1456  0009A8  1854               	xorwf	_K^0,w,c
  1457  0009AA  B4D8               	btfsc	status,2,c
  1458  0009AC  EFDA  F004         	goto	u1671
  1459  0009B0  EFDC  F004         	goto	u1670
  1460  0009B4                     u1671:
  1461  0009B4  EFE8  F004         	goto	l2167
  1462  0009B8                     u1670:
  1463  0009B8                     
  1464                           ;main.c: 363:             LCD_putc('*');
  1465  0009B8  0E2A               	movlw	42
  1466  0009BA  EC24  F00B         	call	_LCD_putc
  1467  0009BE                     
  1468                           ;main.c: 364:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1469  0009BE  0E82               	movlw	130
  1470  0009C0  6E2B               	movwf	??_cambio_clave^0,c
  1471  0009C2  0EDE               	movlw	222
  1472  0009C4                     u1907:
  1473  0009C4  2EE8               	decfsz	wreg,f,c
  1474  0009C6  D7FE               	bra	u1907
  1475  0009C8  2E2B               	decfsz	??_cambio_clave^0,f,c
  1476  0009CA  D7FC               	bra	u1907
  1477  0009CC                     
  1478                           ;main.c: 365:             CEN = VAL;
  1479  0009CC  C04F  F052         	movff	_VAL,_CEN
  1480  0009D0                     l2167:
  1481                           
  1482                           ;main.c: 368:         TECLADO();
  1483  0009D0  EC33  F00A         	call	_TECLADO	;wreg free
  1484  0009D4                     
  1485                           ;main.c: 369:         if ((K != '#')&&(K != '*')) {
  1486  0009D4  0E23               	movlw	35
  1487  0009D6  1854               	xorwf	_K^0,w,c
  1488  0009D8  B4D8               	btfsc	status,2,c
  1489  0009DA  EFF1  F004         	goto	u1681
  1490  0009DE  EFF3  F004         	goto	u1680
  1491  0009E2                     u1681:
  1492  0009E2  EF08  F005         	goto	l2179
  1493  0009E6                     u1680:
  1494  0009E6  0E2A               	movlw	42
  1495  0009E8  1854               	xorwf	_K^0,w,c
  1496  0009EA  B4D8               	btfsc	status,2,c
  1497  0009EC  EFFA  F004         	goto	u1691
  1498  0009F0  EFFC  F004         	goto	u1690
  1499  0009F4                     u1691:
  1500  0009F4  EF08  F005         	goto	l2179
  1501  0009F8                     u1690:
  1502  0009F8                     
  1503                           ;main.c: 370:             LCD_putc('*');
  1504  0009F8  0E2A               	movlw	42
  1505  0009FA  EC24  F00B         	call	_LCD_putc
  1506  0009FE                     
  1507                           ;main.c: 371:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1508  0009FE  0E82               	movlw	130
  1509  000A00  6E2B               	movwf	??_cambio_clave^0,c
  1510  000A02  0EDE               	movlw	222
  1511  000A04                     u1917:
  1512  000A04  2EE8               	decfsz	wreg,f,c
  1513  000A06  D7FE               	bra	u1917
  1514  000A08  2E2B               	decfsz	??_cambio_clave^0,f,c
  1515  000A0A  D7FC               	bra	u1917
  1516  000A0C                     
  1517                           ;main.c: 372:             DEC = VAL;
  1518  000A0C  C04F  F051         	movff	_VAL,_DEC
  1519  000A10                     l2179:
  1520                           
  1521                           ;main.c: 375:         TECLADO();
  1522  000A10  EC33  F00A         	call	_TECLADO	;wreg free
  1523  000A14                     
  1524                           ;main.c: 376:         if ((K != '#')&&(K != '*')) {
  1525  000A14  0E23               	movlw	35
  1526  000A16  1854               	xorwf	_K^0,w,c
  1527  000A18  B4D8               	btfsc	status,2,c
  1528  000A1A  EF11  F005         	goto	u1701
  1529  000A1E  EF13  F005         	goto	u1700
  1530  000A22                     u1701:
  1531  000A22  EF28  F005         	goto	l2191
  1532  000A26                     u1700:
  1533  000A26  0E2A               	movlw	42
  1534  000A28  1854               	xorwf	_K^0,w,c
  1535  000A2A  B4D8               	btfsc	status,2,c
  1536  000A2C  EF1A  F005         	goto	u1711
  1537  000A30  EF1C  F005         	goto	u1710
  1538  000A34                     u1711:
  1539  000A34  EF28  F005         	goto	l2191
  1540  000A38                     u1710:
  1541  000A38                     
  1542                           ;main.c: 377:             LCD_putc('*');
  1543  000A38  0E2A               	movlw	42
  1544  000A3A  EC24  F00B         	call	_LCD_putc
  1545  000A3E                     
  1546                           ;main.c: 378:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1547  000A3E  0E82               	movlw	130
  1548  000A40  6E2B               	movwf	??_cambio_clave^0,c
  1549  000A42  0EDE               	movlw	222
  1550  000A44                     u1927:
  1551  000A44  2EE8               	decfsz	wreg,f,c
  1552  000A46  D7FE               	bra	u1927
  1553  000A48  2E2B               	decfsz	??_cambio_clave^0,f,c
  1554  000A4A  D7FC               	bra	u1927
  1555  000A4C                     
  1556                           ;main.c: 379:             UNI = VAL;
  1557  000A4C  C04F  F050         	movff	_VAL,_UNI
  1558  000A50                     l2191:
  1559                           
  1560                           ;main.c: 382:         m = MIL * 1000;
  1561  000A50  C053  F001         	movff	_MIL,___wmul@multiplier
  1562  000A54  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1563  000A56  0E03               	movlw	3
  1564  000A58  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1565  000A5A  0EE8               	movlw	232
  1566  000A5C  6E03               	movwf	___wmul@multiplicand^0,c
  1567  000A5E  ECAC  F00C         	call	___wmul	;wreg free
  1568  000A62  C001  F033         	movff	?___wmul,cambio_clave@m
  1569  000A66  C002  F034         	movff	?___wmul+1,cambio_clave@m+1
  1570  000A6A  0E00               	movlw	0
  1571  000A6C  BE34               	btfsc	(cambio_clave@m+1)^0,7,c
  1572  000A6E  0EFF               	movlw	-1
  1573  000A70  6E35               	movwf	(cambio_clave@m+2)^0,c
  1574  000A72  6E36               	movwf	(cambio_clave@m+3)^0,c
  1575  000A74                     
  1576                           ;main.c: 383:         c = CEN * 10;
  1577  000A74  5052               	movf	_CEN^0,w,c
  1578  000A76  0D0A               	mullw	10
  1579  000A78  CFF3 F02B          	movff	prodl,??_cambio_clave
  1580  000A7C  CFF4 F02C          	movff	prodh,??_cambio_clave+1
  1581  000A80  C02B  F043         	movff	??_cambio_clave,cambio_clave@c
  1582  000A84  C02C  F044         	movff	??_cambio_clave+1,cambio_clave@c+1
  1583  000A88  0E00               	movlw	0
  1584  000A8A  BE44               	btfsc	(cambio_clave@c+1)^0,7,c
  1585  000A8C  0EFF               	movlw	-1
  1586  000A8E  6E45               	movwf	(cambio_clave@c+2)^0,c
  1587  000A90  6E46               	movwf	(cambio_clave@c+3)^0,c
  1588  000A92                     
  1589                           ;main.c: 384:         c = c * 10;
  1590  000A92  C043  F001         	movff	cambio_clave@c,___lmul@multiplier
  1591  000A96  C044  F002         	movff	cambio_clave@c+1,___lmul@multiplier+1
  1592  000A9A  C045  F003         	movff	cambio_clave@c+2,___lmul@multiplier+2
  1593  000A9E  C046  F004         	movff	cambio_clave@c+3,___lmul@multiplier+3
  1594  000AA2  0E0A               	movlw	10
  1595  000AA4  6E05               	movwf	___lmul@multiplicand^0,c
  1596  000AA6  0E00               	movlw	0
  1597  000AA8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1598  000AAA  0E00               	movlw	0
  1599  000AAC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1600  000AAE  0E00               	movlw	0
  1601  000AB0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1602  000AB2  EC15  F00C         	call	___lmul	;wreg free
  1603  000AB6  C001  F043         	movff	?___lmul,cambio_clave@c
  1604  000ABA  C002  F044         	movff	?___lmul+1,cambio_clave@c+1
  1605  000ABE  C003  F045         	movff	?___lmul+2,cambio_clave@c+2
  1606  000AC2  C004  F046         	movff	?___lmul+3,cambio_clave@c+3
  1607  000AC6                     
  1608                           ;main.c: 385:         d = DEC * 10;
  1609  000AC6  5051               	movf	_DEC^0,w,c
  1610  000AC8  0D0A               	mullw	10
  1611  000ACA  CFF3 F02B          	movff	prodl,??_cambio_clave
  1612  000ACE  CFF4 F02C          	movff	prodh,??_cambio_clave+1
  1613  000AD2  C02B  F037         	movff	??_cambio_clave,cambio_clave@d
  1614  000AD6  C02C  F038         	movff	??_cambio_clave+1,cambio_clave@d+1
  1615  000ADA  0E00               	movlw	0
  1616  000ADC  BE38               	btfsc	(cambio_clave@d+1)^0,7,c
  1617  000ADE  0EFF               	movlw	-1
  1618  000AE0  6E39               	movwf	(cambio_clave@d+2)^0,c
  1619  000AE2  6E3A               	movwf	(cambio_clave@d+3)^0,c
  1620  000AE4                     
  1621                           ;main.c: 386:         u = UNI;
  1622  000AE4  5050               	movf	_UNI^0,w,c
  1623  000AE6  6E3B               	movwf	cambio_clave@u^0,c
  1624  000AE8  6A3C               	clrf	(cambio_clave@u+1)^0,c
  1625  000AEA  6A3D               	clrf	(cambio_clave@u+2)^0,c
  1626  000AEC  6A3E               	clrf	(cambio_clave@u+3)^0,c
  1627  000AEE                     
  1628                           ;main.c: 388:         clave = m + c + d + u;
  1629  000AEE  5043               	movf	cambio_clave@c^0,w,c
  1630  000AF0  2433               	addwf	cambio_clave@m^0,w,c
  1631  000AF2  6E2B               	movwf	??_cambio_clave^0,c
  1632  000AF4  5044               	movf	(cambio_clave@c+1)^0,w,c
  1633  000AF6  2034               	addwfc	(cambio_clave@m+1)^0,w,c
  1634  000AF8  6E2C               	movwf	(??_cambio_clave+1)^0,c
  1635  000AFA  5045               	movf	(cambio_clave@c+2)^0,w,c
  1636  000AFC  2035               	addwfc	(cambio_clave@m+2)^0,w,c
  1637  000AFE  6E2D               	movwf	(??_cambio_clave+2)^0,c
  1638  000B00  5046               	movf	(cambio_clave@c+3)^0,w,c
  1639  000B02  2036               	addwfc	(cambio_clave@m+3)^0,w,c
  1640  000B04  6E2E               	movwf	(??_cambio_clave+3)^0,c
  1641  000B06  5037               	movf	cambio_clave@d^0,w,c
  1642  000B08  242B               	addwf	??_cambio_clave^0,w,c
  1643  000B0A  6E2F               	movwf	(??_cambio_clave+4)^0,c
  1644  000B0C  5038               	movf	(cambio_clave@d+1)^0,w,c
  1645  000B0E  202C               	addwfc	(??_cambio_clave+1)^0,w,c
  1646  000B10  6E30               	movwf	(??_cambio_clave+5)^0,c
  1647  000B12  5039               	movf	(cambio_clave@d+2)^0,w,c
  1648  000B14  202D               	addwfc	(??_cambio_clave+2)^0,w,c
  1649  000B16  6E31               	movwf	(??_cambio_clave+6)^0,c
  1650  000B18  503A               	movf	(cambio_clave@d+3)^0,w,c
  1651  000B1A  202E               	addwfc	(??_cambio_clave+3)^0,w,c
  1652  000B1C  6E32               	movwf	(??_cambio_clave+7)^0,c
  1653  000B1E  503B               	movf	cambio_clave@u^0,w,c
  1654  000B20  242F               	addwf	(??_cambio_clave+4)^0,w,c
  1655  000B22  6E3F               	movwf	cambio_clave@clave^0,c
  1656  000B24  503C               	movf	(cambio_clave@u+1)^0,w,c
  1657  000B26  2030               	addwfc	(??_cambio_clave+5)^0,w,c
  1658  000B28  6E40               	movwf	(cambio_clave@clave+1)^0,c
  1659  000B2A  503D               	movf	(cambio_clave@u+2)^0,w,c
  1660  000B2C  2031               	addwfc	(??_cambio_clave+6)^0,w,c
  1661  000B2E  6E41               	movwf	(cambio_clave@clave+2)^0,c
  1662  000B30  503E               	movf	(cambio_clave@u+3)^0,w,c
  1663  000B32  2032               	addwfc	(??_cambio_clave+7)^0,w,c
  1664  000B34  6E42               	movwf	(cambio_clave@clave+3)^0,c
  1665  000B36                     
  1666                           ;main.c: 391:         contra = clave;
  1667  000B36  C03F  F059         	movff	cambio_clave@clave,_contra
  1668  000B3A  C040  F05A         	movff	cambio_clave@clave+1,_contra+1
  1669  000B3E  C041  F05B         	movff	cambio_clave@clave+2,_contra+2
  1670  000B42  C042  F05C         	movff	cambio_clave@clave+3,_contra+3
  1671  000B46                     
  1672                           ;main.c: 392:         eeprom_writex(0, MIL);
  1673  000B46  0E00               	movlw	0
  1674  000B48  6E02               	movwf	(eeprom_writex@address+1)^0,c
  1675  000B4A  0E00               	movlw	0
  1676  000B4C  6E01               	movwf	eeprom_writex@address^0,c
  1677  000B4E  C053  F003         	movff	_MIL,eeprom_writex@data
  1678  000B52  EC96  F00C         	call	_eeprom_writex	;wreg free
  1679  000B56                     
  1680                           ;main.c: 393:         eeprom_writex(1, CEN);
  1681  000B56  0E00               	movlw	0
  1682  000B58  6E02               	movwf	(eeprom_writex@address+1)^0,c
  1683  000B5A  0E01               	movlw	1
  1684  000B5C  6E01               	movwf	eeprom_writex@address^0,c
  1685  000B5E  C052  F003         	movff	_CEN,eeprom_writex@data
  1686  000B62  EC96  F00C         	call	_eeprom_writex	;wreg free
  1687  000B66                     
  1688                           ;main.c: 394:         eeprom_writex(2, DEC);
  1689  000B66  0E00               	movlw	0
  1690  000B68  6E02               	movwf	(eeprom_writex@address+1)^0,c
  1691  000B6A  0E02               	movlw	2
  1692  000B6C  6E01               	movwf	eeprom_writex@address^0,c
  1693  000B6E  C051  F003         	movff	_DEC,eeprom_writex@data
  1694  000B72  EC96  F00C         	call	_eeprom_writex	;wreg free
  1695  000B76                     
  1696                           ;main.c: 395:         eeprom_writex(3, UNI);
  1697  000B76  0E00               	movlw	0
  1698  000B78  6E02               	movwf	(eeprom_writex@address+1)^0,c
  1699  000B7A  0E03               	movlw	3
  1700  000B7C  6E01               	movwf	eeprom_writex@address^0,c
  1701  000B7E  C050  F003         	movff	_UNI,eeprom_writex@data
  1702  000B82  EC96  F00C         	call	_eeprom_writex	;wreg free
  1703  000B86                     
  1704                           ;main.c: 396:         eeprom_writex(4, 12);
  1705  000B86  0E00               	movlw	0
  1706  000B88  6E02               	movwf	(eeprom_writex@address+1)^0,c
  1707  000B8A  0E04               	movlw	4
  1708  000B8C  6E01               	movwf	eeprom_writex@address^0,c
  1709  000B8E  0E0C               	movlw	12
  1710  000B90  6E03               	movwf	eeprom_writex@data^0,c
  1711  000B92  EC96  F00C         	call	_eeprom_writex	;wreg free
  1712  000B96                     
  1713                           ;main.c: 397:         _delay((unsigned long)((900)*(4000000/4000.0)));
  1714  000B96  0E05               	movlw	5
  1715  000B98  6E2C               	movwf	(??_cambio_clave+1)^0,c
  1716  000B9A  0E91               	movlw	145
  1717  000B9C  6E2B               	movwf	??_cambio_clave^0,c
  1718  000B9E  0ED0               	movlw	208
  1719  000BA0                     u1937:
  1720  000BA0  2EE8               	decfsz	wreg,f,c
  1721  000BA2  D7FE               	bra	u1937
  1722  000BA4  2E2B               	decfsz	??_cambio_clave^0,f,c
  1723  000BA6  D7FC               	bra	u1937
  1724  000BA8  2E2C               	decfsz	(??_cambio_clave+1)^0,f,c
  1725  000BAA  D7FA               	bra	u1937
  1726  000BAC                     
  1727                           ;main.c: 399:          LCD_gotoxy(3, 1);
  1728  000BAC  0E01               	movlw	1
  1729  000BAE  6E02               	movwf	LCD_gotoxy@y^0,c
  1730  000BB0  0E03               	movlw	3
  1731  000BB2  ECDD  F00B         	call	_LCD_gotoxy
  1732  000BB6                     
  1733                           ;main.c: 400:         LCD_puts("   CORRECTO   ", 16);
  1734  000BB6  0E11               	movlw	low STR_5
  1735  000BB8  6E02               	movwf	LCD_puts@data^0,c
  1736  000BBA  0E08               	movlw	high STR_5
  1737  000BBC  6E03               	movwf	(LCD_puts@data+1)^0,c
  1738  000BBE  0E10               	movlw	16
  1739  000BC0  6E04               	movwf	LCD_puts@nBytes^0,c
  1740  000BC2  EC77  F00C         	call	_LCD_puts	;wreg free
  1741  000BC6                     
  1742                           ;main.c: 401:         _delay((unsigned long)((900)*(4000000/4000.0)));
  1743  000BC6  0E05               	movlw	5
  1744  000BC8  6E2C               	movwf	(??_cambio_clave+1)^0,c
  1745  000BCA  0E91               	movlw	145
  1746  000BCC  6E2B               	movwf	??_cambio_clave^0,c
  1747  000BCE  0ED0               	movlw	208
  1748  000BD0                     u1947:
  1749  000BD0  2EE8               	decfsz	wreg,f,c
  1750  000BD2  D7FE               	bra	u1947
  1751  000BD4  2E2B               	decfsz	??_cambio_clave^0,f,c
  1752  000BD6  D7FC               	bra	u1947
  1753  000BD8  2E2C               	decfsz	(??_cambio_clave+1)^0,f,c
  1754  000BDA  D7FA               	bra	u1947
  1755                           
  1756                           ;main.c: 403:     } else {
  1757  000BDC  EF2B  F006         	goto	l100
  1758  000BE0                     l2223:
  1759                           
  1760                           ;main.c: 404:         LCD_clear();
  1761  000BE0  ECD4  F00C         	call	_LCD_clear	;wreg free
  1762  000BE4                     
  1763                           ;main.c: 405:         LCD_gotoxy(2, 1);
  1764  000BE4  0E01               	movlw	1
  1765  000BE6  6E02               	movwf	LCD_gotoxy@y^0,c
  1766  000BE8  0E02               	movlw	2
  1767  000BEA  ECDD  F00B         	call	_LCD_gotoxy
  1768  000BEE                     
  1769                           ;main.c: 406:         LCD_puts("**1_BLOQUEO**", 16);
  1770  000BEE  0E87               	movlw	low STR_6
  1771  000BF0  6E02               	movwf	LCD_puts@data^0,c
  1772  000BF2  0E08               	movlw	high STR_6
  1773  000BF4  6E03               	movwf	(LCD_puts@data+1)^0,c
  1774  000BF6  0E10               	movlw	16
  1775  000BF8  6E04               	movwf	LCD_puts@nBytes^0,c
  1776  000BFA  EC77  F00C         	call	_LCD_puts	;wreg free
  1777  000BFE                     
  1778                           ;main.c: 407:         _delay((unsigned long)((60)*(4000000/4000.0)));
  1779  000BFE  0E4E               	movlw	78
  1780  000C00  6E2B               	movwf	??_cambio_clave^0,c
  1781  000C02  0EEB               	movlw	235
  1782  000C04                     u1957:
  1783  000C04  2EE8               	decfsz	wreg,f,c
  1784  000C06  D7FE               	bra	u1957
  1785  000C08  2E2B               	decfsz	??_cambio_clave^0,f,c
  1786  000C0A  D7FC               	bra	u1957
  1787  000C0C  F000               	nop	
  1788  000C0E                     
  1789                           ;main.c: 408:         LCD_gotoxy(1, 2);
  1790  000C0E  0E02               	movlw	2
  1791  000C10  6E02               	movwf	LCD_gotoxy@y^0,c
  1792  000C12  0E01               	movlw	1
  1793  000C14  ECDD  F00B         	call	_LCD_gotoxy
  1794  000C18                     
  1795                           ;main.c: 409:         LCD_puts("CLAVE INVALIDA ", 16);
  1796  000C18  0E01               	movlw	low STR_7
  1797  000C1A  6E02               	movwf	LCD_puts@data^0,c
  1798  000C1C  0E08               	movlw	high STR_7
  1799  000C1E  6E03               	movwf	(LCD_puts@data+1)^0,c
  1800  000C20  0E10               	movlw	16
  1801  000C22  6E04               	movwf	LCD_puts@nBytes^0,c
  1802  000C24  EC77  F00C         	call	_LCD_puts	;wreg free
  1803  000C28                     
  1804                           ;main.c: 410:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1805  000C28  0E0D               	movlw	13
  1806  000C2A  6E2B               	movwf	??_cambio_clave^0,c
  1807  000C2C  0EFC               	movlw	252
  1808  000C2E                     u1967:
  1809  000C2E  2EE8               	decfsz	wreg,f,c
  1810  000C30  D7FE               	bra	u1967
  1811  000C32  2E2B               	decfsz	??_cambio_clave^0,f,c
  1812  000C34  D7FC               	bra	u1967
  1813  000C36                     
  1814                           ;main.c: 411:         PORTDbits.RD3 = 1;
  1815  000C36  8683               	bsf	131,3,c	;volatile
  1816  000C38                     
  1817                           ;main.c: 412:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1818  000C38  0E0B               	movlw	11
  1819  000C3A  6E2C               	movwf	(??_cambio_clave+1)^0,c
  1820  000C3C  0E26               	movlw	38
  1821  000C3E  6E2B               	movwf	??_cambio_clave^0,c
  1822  000C40  0E5E               	movlw	94
  1823  000C42                     u1977:
  1824  000C42  2EE8               	decfsz	wreg,f,c
  1825  000C44  D7FE               	bra	u1977
  1826  000C46  2E2B               	decfsz	??_cambio_clave^0,f,c
  1827  000C48  D7FC               	bra	u1977
  1828  000C4A  2E2C               	decfsz	(??_cambio_clave+1)^0,f,c
  1829  000C4C  D7FA               	bra	u1977
  1830  000C4E                     
  1831                           ;main.c: 413:         PORTD = 0;
  1832  000C4E  0E00               	movlw	0
  1833  000C50  6E83               	movwf	131,c	;volatile
  1834  000C52                     
  1835                           ;main.c: 414:         LCD_clear();
  1836  000C52  ECD4  F00C         	call	_LCD_clear	;wreg free
  1837  000C56                     l100:
  1838  000C56  0012               	return		;funcret
  1839  000C58                     __end_of_cambio_clave:
  1840                           	opt callstack 0
  1841                           
  1842 ;; *************** function _validar_clave *****************
  1843 ;; Defined at:
  1844 ;;		line 288 in file "main.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  clave           4   38[COMRAM] long 
  1849 ;;  u               4   34[COMRAM] long 
  1850 ;;  d               4   30[COMRAM] long 
  1851 ;;  c               4   26[COMRAM] long 
  1852 ;;  m               4   22[COMRAM] long 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2   12[COMRAM] int 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1862 ;;      Params:         2       0       0       0       0       0       0       0       0
  1863 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1864 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1865 ;;      Totals:        30       0       0       0       0       0       0       0       0
  1866 ;;Total ram usage:       30 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    2
  1869 ;; This function calls:
  1870 ;;		_LCD_clear
  1871 ;;		_LCD_gotoxy
  1872 ;;		_LCD_puts
  1873 ;;		___lmul
  1874 ;;		___wmul
  1875 ;; This function is called by:
  1876 ;;		_cambio_clave
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text4
  1882  00119C                     __ptext4:
  1883                           	opt callstack 0
  1884  00119C                     _validar_clave:
  1885                           	opt callstack 28
  1886  00119C                     
  1887                           ;main.c: 289:     if (intentos <= 2) {
  1888  00119C  BE58               	btfsc	(_intentos+3)^0,7,c
  1889  00119E  EFDE  F008         	goto	u1600
  1890  0011A2  5058               	movf	(_intentos+3)^0,w,c
  1891  0011A4  1057               	iorwf	(_intentos+2)^0,w,c
  1892  0011A6  1056               	iorwf	(_intentos+1)^0,w,c
  1893  0011A8  E107               	bnz	u1601
  1894  0011AA  0E03               	movlw	3
  1895  0011AC  5C55               	subwf	_intentos^0,w,c
  1896  0011AE  B0D8               	btfsc	status,0,c
  1897  0011B0  EFDC  F008         	goto	u1601
  1898  0011B4  EFDE  F008         	goto	u1600
  1899  0011B8                     u1601:
  1900  0011B8  EF65  F009         	goto	l2089
  1901  0011BC                     u1600:
  1902  0011BC                     
  1903                           ;main.c: 299:         m = MIL * 1000;
  1904  0011BC  C053  F001         	movff	_MIL,___wmul@multiplier
  1905  0011C0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1906  0011C2  0E03               	movlw	3
  1907  0011C4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1908  0011C6  0EE8               	movlw	232
  1909  0011C8  6E03               	movwf	___wmul@multiplicand^0,c
  1910  0011CA  ECAC  F00C         	call	___wmul	;wreg free
  1911  0011CE  C001  F017         	movff	?___wmul,validar_clave@m
  1912  0011D2  C002  F018         	movff	?___wmul+1,validar_clave@m+1
  1913  0011D6  0E00               	movlw	0
  1914  0011D8  BE18               	btfsc	(validar_clave@m+1)^0,7,c
  1915  0011DA  0EFF               	movlw	-1
  1916  0011DC  6E19               	movwf	(validar_clave@m+2)^0,c
  1917  0011DE  6E1A               	movwf	(validar_clave@m+3)^0,c
  1918  0011E0                     
  1919                           ;main.c: 301:         c = (long) CEN * 100;
  1920  0011E0  5052               	movf	_CEN^0,w,c
  1921  0011E2  6E01               	movwf	___lmul@multiplier^0,c
  1922  0011E4  6A02               	clrf	(___lmul@multiplier+1)^0,c
  1923  0011E6  6A03               	clrf	(___lmul@multiplier+2)^0,c
  1924  0011E8  6A04               	clrf	(___lmul@multiplier+3)^0,c
  1925  0011EA  0E64               	movlw	100
  1926  0011EC  6E05               	movwf	___lmul@multiplicand^0,c
  1927  0011EE  0E00               	movlw	0
  1928  0011F0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1929  0011F2  0E00               	movlw	0
  1930  0011F4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1931  0011F6  0E00               	movlw	0
  1932  0011F8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1933  0011FA  EC15  F00C         	call	___lmul	;wreg free
  1934  0011FE  C001  F01B         	movff	?___lmul,validar_clave@c
  1935  001202  C002  F01C         	movff	?___lmul+1,validar_clave@c+1
  1936  001206  C003  F01D         	movff	?___lmul+2,validar_clave@c+2
  1937  00120A  C004  F01E         	movff	?___lmul+3,validar_clave@c+3
  1938  00120E                     
  1939                           ;main.c: 302:         d = DEC * 10;
  1940  00120E  5051               	movf	_DEC^0,w,c
  1941  001210  0D0A               	mullw	10
  1942  001212  CFF3 F00F          	movff	prodl,??_validar_clave
  1943  001216  CFF4 F010          	movff	prodh,??_validar_clave+1
  1944  00121A  C00F  F01F         	movff	??_validar_clave,validar_clave@d
  1945  00121E  C010  F020         	movff	??_validar_clave+1,validar_clave@d+1
  1946  001222  0E00               	movlw	0
  1947  001224  BE20               	btfsc	(validar_clave@d+1)^0,7,c
  1948  001226  0EFF               	movlw	-1
  1949  001228  6E21               	movwf	(validar_clave@d+2)^0,c
  1950  00122A  6E22               	movwf	(validar_clave@d+3)^0,c
  1951  00122C                     
  1952                           ;main.c: 303:         u = UNI;
  1953  00122C  5050               	movf	_UNI^0,w,c
  1954  00122E  6E23               	movwf	validar_clave@u^0,c
  1955  001230  6A24               	clrf	(validar_clave@u+1)^0,c
  1956  001232  6A25               	clrf	(validar_clave@u+2)^0,c
  1957  001234  6A26               	clrf	(validar_clave@u+3)^0,c
  1958                           
  1959                           ;main.c: 305:         clave = m + c + d + u;
  1960  001236  501B               	movf	validar_clave@c^0,w,c
  1961  001238  2417               	addwf	validar_clave@m^0,w,c
  1962  00123A  6E0F               	movwf	??_validar_clave^0,c
  1963  00123C  501C               	movf	(validar_clave@c+1)^0,w,c
  1964  00123E  2018               	addwfc	(validar_clave@m+1)^0,w,c
  1965  001240  6E10               	movwf	(??_validar_clave+1)^0,c
  1966  001242  501D               	movf	(validar_clave@c+2)^0,w,c
  1967  001244  2019               	addwfc	(validar_clave@m+2)^0,w,c
  1968  001246  6E11               	movwf	(??_validar_clave+2)^0,c
  1969  001248  501E               	movf	(validar_clave@c+3)^0,w,c
  1970  00124A  201A               	addwfc	(validar_clave@m+3)^0,w,c
  1971  00124C  6E12               	movwf	(??_validar_clave+3)^0,c
  1972  00124E  501F               	movf	validar_clave@d^0,w,c
  1973  001250  240F               	addwf	??_validar_clave^0,w,c
  1974  001252  6E13               	movwf	(??_validar_clave+4)^0,c
  1975  001254  5020               	movf	(validar_clave@d+1)^0,w,c
  1976  001256  2010               	addwfc	(??_validar_clave+1)^0,w,c
  1977  001258  6E14               	movwf	(??_validar_clave+5)^0,c
  1978  00125A  5021               	movf	(validar_clave@d+2)^0,w,c
  1979  00125C  2011               	addwfc	(??_validar_clave+2)^0,w,c
  1980  00125E  6E15               	movwf	(??_validar_clave+6)^0,c
  1981  001260  5022               	movf	(validar_clave@d+3)^0,w,c
  1982  001262  2012               	addwfc	(??_validar_clave+3)^0,w,c
  1983  001264  6E16               	movwf	(??_validar_clave+7)^0,c
  1984  001266  5023               	movf	validar_clave@u^0,w,c
  1985  001268  2413               	addwf	(??_validar_clave+4)^0,w,c
  1986  00126A  6E27               	movwf	validar_clave@clave^0,c
  1987  00126C  5024               	movf	(validar_clave@u+1)^0,w,c
  1988  00126E  2014               	addwfc	(??_validar_clave+5)^0,w,c
  1989  001270  6E28               	movwf	(validar_clave@clave+1)^0,c
  1990  001272  5025               	movf	(validar_clave@u+2)^0,w,c
  1991  001274  2015               	addwfc	(??_validar_clave+6)^0,w,c
  1992  001276  6E29               	movwf	(validar_clave@clave+2)^0,c
  1993  001278  5026               	movf	(validar_clave@u+3)^0,w,c
  1994  00127A  2016               	addwfc	(??_validar_clave+7)^0,w,c
  1995  00127C  6E2A               	movwf	(validar_clave@clave+3)^0,c
  1996  00127E                     
  1997                           ;main.c: 307:         MIL = 0;
  1998  00127E  0E00               	movlw	0
  1999  001280  6E53               	movwf	_MIL^0,c
  2000  001282                     
  2001                           ;main.c: 308:         CEN = 0;
  2002  001282  0E00               	movlw	0
  2003  001284  6E52               	movwf	_CEN^0,c
  2004  001286                     
  2005                           ;main.c: 309:         DEC = 0;
  2006  001286  0E00               	movlw	0
  2007  001288  6E51               	movwf	_DEC^0,c
  2008  00128A                     
  2009                           ;main.c: 310:         UNI = 0;
  2010  00128A  0E00               	movlw	0
  2011  00128C  6E50               	movwf	_UNI^0,c
  2012                           
  2013                           ;main.c: 311:         if (clave == contra)
  2014  00128E  5059               	movf	_contra^0,w,c
  2015  001290  1827               	xorwf	validar_clave@clave^0,w,c
  2016  001292  E10D               	bnz	u1611
  2017  001294  505A               	movf	(_contra+1)^0,w,c
  2018  001296  1828               	xorwf	(validar_clave@clave+1)^0,w,c
  2019  001298  E10A               	bnz	u1611
  2020  00129A  505B               	movf	(_contra+2)^0,w,c
  2021  00129C  1829               	xorwf	(validar_clave@clave+2)^0,w,c
  2022  00129E  E107               	bnz	u1611
  2023  0012A0  505C               	movf	(_contra+3)^0,w,c
  2024  0012A2  182A               	xorwf	(validar_clave@clave+3)^0,w,c
  2025  0012A4  A4D8               	btfss	status,2,c
  2026  0012A6  EF57  F009         	goto	u1611
  2027  0012AA  EF59  F009         	goto	u1610
  2028  0012AE                     u1611:
  2029  0012AE  EF5F  F009         	goto	l2085
  2030  0012B2                     u1610:
  2031  0012B2                     
  2032                           ;main.c: 312:             return (1);
  2033  0012B2  0E00               	movlw	0
  2034  0012B4  6E0E               	movwf	(?_validar_clave+1)^0,c
  2035  0012B6  0E01               	movlw	1
  2036  0012B8  6E0D               	movwf	?_validar_clave^0,c
  2037  0012BA  EF8F  F009         	goto	l89
  2038  0012BE                     l2085:
  2039                           
  2040                           ;main.c: 314:             return (0);
  2041  0012BE  0E00               	movlw	0
  2042  0012C0  6E0E               	movwf	(?_validar_clave+1)^0,c
  2043  0012C2  0E00               	movlw	0
  2044  0012C4  6E0D               	movwf	?_validar_clave^0,c
  2045  0012C6  EF8F  F009         	goto	l89
  2046  0012CA                     l2089:
  2047                           
  2048                           ;main.c: 316:         LCD_clear();
  2049  0012CA  ECD4  F00C         	call	_LCD_clear	;wreg free
  2050  0012CE                     
  2051                           ;main.c: 317:         LCD_gotoxy(3, 1);
  2052  0012CE  0E01               	movlw	1
  2053  0012D0  6E02               	movwf	LCD_gotoxy@y^0,c
  2054  0012D2  0E03               	movlw	3
  2055  0012D4  ECDD  F00B         	call	_LCD_gotoxy
  2056  0012D8                     
  2057                           ;main.c: 318:         LCD_puts("  ERROR  ", 8);
  2058  0012D8  0E95               	movlw	low STR_1
  2059  0012DA  6E02               	movwf	LCD_puts@data^0,c
  2060  0012DC  0E08               	movlw	high STR_1
  2061  0012DE  6E03               	movwf	(LCD_puts@data+1)^0,c
  2062  0012E0  0E08               	movlw	8
  2063  0012E2  6E04               	movwf	LCD_puts@nBytes^0,c
  2064  0012E4  EC77  F00C         	call	_LCD_puts	;wreg free
  2065  0012E8                     
  2066                           ;main.c: 319:         LCD_gotoxy(3, 2);
  2067  0012E8  0E02               	movlw	2
  2068  0012EA  6E02               	movwf	LCD_gotoxy@y^0,c
  2069  0012EC  0E03               	movlw	3
  2070  0012EE  ECDD  F00B         	call	_LCD_gotoxy
  2071  0012F2                     
  2072                           ;main.c: 320:         LCD_puts("SOLO 3 INTENOS", 15);
  2073  0012F2  0E5C               	movlw	low STR_2
  2074  0012F4  6E02               	movwf	LCD_puts@data^0,c
  2075  0012F6  0E08               	movlw	high STR_2
  2076  0012F8  6E03               	movwf	(LCD_puts@data+1)^0,c
  2077  0012FA  0E0F               	movlw	15
  2078  0012FC  6E04               	movwf	LCD_puts@nBytes^0,c
  2079  0012FE  EC77  F00C         	call	_LCD_puts	;wreg free
  2080  001302                     
  2081                           ;main.c: 321:         _delay((unsigned long)((9000)*(4000000/4000.0)));
  2082  001302  0E2E               	movlw	46
  2083  001304  6E10               	movwf	(??_validar_clave+1)^0,c
  2084  001306  0EA9               	movlw	169
  2085  001308  6E0F               	movwf	??_validar_clave^0,c
  2086  00130A  0E2F               	movlw	47
  2087  00130C                     u1987:
  2088  00130C  2EE8               	decfsz	wreg,f,c
  2089  00130E  D7FE               	bra	u1987
  2090  001310  2E0F               	decfsz	??_validar_clave^0,f,c
  2091  001312  D7FC               	bra	u1987
  2092  001314  2E10               	decfsz	(??_validar_clave+1)^0,f,c
  2093  001316  D7FA               	bra	u1987
  2094  001318  F000               	nop	
  2095  00131A  EF5F  F009         	goto	l2085
  2096  00131E                     l89:
  2097  00131E  0012               	return		;funcret
  2098  001320                     __end_of_validar_clave:
  2099                           	opt callstack 0
  2100                           
  2101 ;; *************** function ___wmul *****************
  2102 ;; Defined at:
  2103 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  multiplier      2    0[COMRAM] unsigned int 
  2106 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  product         2    4[COMRAM] unsigned int 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2    0[COMRAM] unsigned int 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0, prodl, prodh
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         4       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2122 ;;Total ram usage:        6 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_validar_clave
  2128 ;;		_cambio_clave
  2129 ;;		_main
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text5
  2134  001958                     __ptext5:
  2135                           	opt callstack 0
  2136  001958                     ___wmul:
  2137                           	opt callstack 29
  2138  001958  5001               	movf	___wmul@multiplier^0,w,c
  2139  00195A  0203               	mulwf	___wmul@multiplicand^0,c
  2140  00195C  CFF3 F005          	movff	prodl,___wmul@product
  2141  001960  CFF4 F006          	movff	prodh,___wmul@product+1
  2142  001964  5001               	movf	___wmul@multiplier^0,w,c
  2143  001966  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2144  001968  50F3               	movf	243,w,c
  2145  00196A  2606               	addwf	(___wmul@product+1)^0,f,c
  2146  00196C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2147  00196E  0203               	mulwf	___wmul@multiplicand^0,c
  2148  001970  50F3               	movf	243,w,c
  2149  001972  2606               	addwf	(___wmul@product+1)^0,f,c
  2150  001974  C005  F001         	movff	___wmul@product,?___wmul
  2151  001978  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2152  00197C  0012               	return		;funcret
  2153  00197E                     __end_of___wmul:
  2154                           	opt callstack 0
  2155                           
  2156 ;; *************** function ___lmul *****************
  2157 ;; Defined at:
  2158 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  multiplier      4    0[COMRAM] unsigned long 
  2161 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  product         4    8[COMRAM] unsigned long 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  4    0[COMRAM] unsigned long 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2173 ;;      Params:         8       0       0       0       0       0       0       0       0
  2174 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2176 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:       12 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_validar_clave
  2183 ;;		_cambio_clave
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text6
  2189  00182A                     __ptext6:
  2190                           	opt callstack 0
  2191  00182A                     ___lmul:
  2192                           	opt callstack 29
  2193  00182A  0E00               	movlw	0
  2194  00182C  6E09               	movwf	___lmul@product^0,c
  2195  00182E  0E00               	movlw	0
  2196  001830  6E0A               	movwf	(___lmul@product+1)^0,c
  2197  001832  0E00               	movlw	0
  2198  001834  6E0B               	movwf	(___lmul@product+2)^0,c
  2199  001836  0E00               	movlw	0
  2200  001838  6E0C               	movwf	(___lmul@product+3)^0,c
  2201  00183A                     l1995:
  2202  00183A  A001               	btfss	___lmul@multiplier^0,0,c
  2203  00183C  EF22  F00C         	goto	u1441
  2204  001840  EF24  F00C         	goto	u1440
  2205  001844                     u1441:
  2206  001844  EF2C  F00C         	goto	l1999
  2207  001848                     u1440:
  2208  001848  5005               	movf	___lmul@multiplicand^0,w,c
  2209  00184A  2609               	addwf	___lmul@product^0,f,c
  2210  00184C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  2211  00184E  220A               	addwfc	(___lmul@product+1)^0,f,c
  2212  001850  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  2213  001852  220B               	addwfc	(___lmul@product+2)^0,f,c
  2214  001854  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  2215  001856  220C               	addwfc	(___lmul@product+3)^0,f,c
  2216  001858                     l1999:
  2217  001858  90D8               	bcf	status,0,c
  2218  00185A  3605               	rlcf	___lmul@multiplicand^0,f,c
  2219  00185C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2220  00185E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2221  001860  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2222  001862  90D8               	bcf	status,0,c
  2223  001864  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  2224  001866  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  2225  001868  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  2226  00186A  3201               	rrcf	___lmul@multiplier^0,f,c
  2227  00186C  5001               	movf	___lmul@multiplier^0,w,c
  2228  00186E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  2229  001870  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  2230  001872  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  2231  001874  A4D8               	btfss	status,2,c
  2232  001876  EF3F  F00C         	goto	u1451
  2233  00187A  EF41  F00C         	goto	u1450
  2234  00187E                     u1451:
  2235  00187E  EF1D  F00C         	goto	l1995
  2236  001882                     u1450:
  2237  001882  C009  F001         	movff	___lmul@product,?___lmul
  2238  001886  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  2239  00188A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  2240  00188E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  2241  001892  0012               	return		;funcret
  2242  001894                     __end_of___lmul:
  2243                           	opt callstack 0
  2244                           
  2245 ;; *************** function _LCD_puts *****************
  2246 ;; Defined at:
  2247 ;;		line 160 in file "lcd.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  data            2    1[COMRAM] PTR unsigned char 
  2250 ;;		 -> STR_12(16), STR_11(14), STR_10(15), STR_9(15), 
  2251 ;;		 -> STR_8(15), STR_7(16), STR_6(14), STR_5(15), 
  2252 ;;		 -> STR_4(14), STR_3(15), STR_2(15), STR_1(10), 
  2253 ;;  nBytes          1    3[COMRAM] unsigned char 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  i               1    6[COMRAM] unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2265 ;;      Params:         3       0       0       0       0       0       0       0       0
  2266 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2267 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2268 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2269 ;;Total ram usage:        6 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    1
  2272 ;; This function calls:
  2273 ;;		_LCD_putc
  2274 ;; This function is called by:
  2275 ;;		_validar_clave
  2276 ;;		_cambio_clave
  2277 ;;		_main
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text7
  2282  0018EE                     __ptext7:
  2283                           	opt callstack 0
  2284  0018EE                     _LCD_puts:
  2285                           	opt callstack 28
  2286  0018EE                     
  2287                           ;lcd.c: 161:  register unsigned char i=0;
  2288  0018EE  0E00               	movlw	0
  2289  0018F0  6E07               	movwf	LCD_puts@i^0,c
  2290                           
  2291                           ;lcd.c: 163:  for(i=0; i<nBytes; i++){
  2292  0018F2  0E00               	movlw	0
  2293  0018F4  6E07               	movwf	LCD_puts@i^0,c
  2294  0018F6  EF8C  F00C         	goto	l1985
  2295  0018FA                     l1981:
  2296                           
  2297                           ;lcd.c: 164:   LCD_putc(data[i]);
  2298  0018FA  5007               	movf	LCD_puts@i^0,w,c
  2299  0018FC  2402               	addwf	LCD_puts@data^0,w,c
  2300  0018FE  6E05               	movwf	??_LCD_puts^0,c
  2301  001900  0E00               	movlw	0
  2302  001902  2003               	addwfc	(LCD_puts@data+1)^0,w,c
  2303  001904  6E06               	movwf	(??_LCD_puts+1)^0,c
  2304  001906  C005  FFF6         	movff	??_LCD_puts,tblptrl
  2305  00190A  C006  FFF7         	movff	??_LCD_puts+1,tblptrh
  2306  00190E                     	if	0	;tblptru may be non-zero
  2307  00190E                     	endif
  2308  00190E                     	if	0	;tblptru may be non-zero
  2309  00190E                     	endif
  2310  00190E  0008               	tblrd		*
  2311  001910  50F5               	movf	tablat,w,c
  2312  001912  EC24  F00B         	call	_LCD_putc
  2313  001916                     
  2314                           ;lcd.c: 165:  }
  2315  001916  2A07               	incf	LCD_puts@i^0,f,c
  2316  001918                     l1985:
  2317  001918  5004               	movf	LCD_puts@nBytes^0,w,c
  2318  00191A  5C07               	subwf	LCD_puts@i^0,w,c
  2319  00191C  A0D8               	btfss	status,0,c
  2320  00191E  EF93  F00C         	goto	u1431
  2321  001922  EF95  F00C         	goto	u1430
  2322  001926                     u1431:
  2323  001926  EF7D  F00C         	goto	l1981
  2324  00192A                     u1430:
  2325  00192A  0012               	return		;funcret
  2326  00192C                     __end_of_LCD_puts:
  2327                           	opt callstack 0
  2328                           
  2329 ;; *************** function _LCD_gotoxy *****************
  2330 ;; Defined at:
  2331 ;;		line 168 in file "lcd.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  x               1    wreg     unsigned char 
  2334 ;;  y               1    1[COMRAM] unsigned char 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  x               1    5[COMRAM] unsigned char 
  2337 ;;  DDRAMAddr       1    4[COMRAM] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2347 ;;      Params:         1       0       0       0       0       0       0       0       0
  2348 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2349 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2350 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2351 ;;Total ram usage:        5 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    1
  2354 ;; This function calls:
  2355 ;;		_LCD_command
  2356 ;; This function is called by:
  2357 ;;		_validar_clave
  2358 ;;		_cambio_clave
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text8
  2364  0017BA                     __ptext8:
  2365                           	opt callstack 0
  2366  0017BA                     _LCD_gotoxy:
  2367                           	opt callstack 28
  2368                           
  2369                           ;incstack = 0
  2370                           ;LCD_gotoxy@x stored from wreg
  2371  0017BA  6E06               	movwf	LCD_gotoxy@x^0,c
  2372  0017BC                     
  2373                           ;lcd.c: 169:  register unsigned char DDRAMAddr;;lcd.c: 171:  switch(y){
  2374  0017BC  EFF3  F00B         	goto	l1971
  2375  0017C0                     l1959:
  2376  0017C0  0406               	decf	LCD_gotoxy@x^0,w,c
  2377  0017C2  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  2378  0017C4  EF10  F00C         	goto	l1973
  2379  0017C8                     l1961:
  2380  0017C8  5006               	movf	LCD_gotoxy@x^0,w,c
  2381  0017CA  0F3F               	addlw	63
  2382  0017CC  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  2383  0017CE  EF10  F00C         	goto	l1973
  2384  0017D2                     l1963:
  2385  0017D2  5006               	movf	LCD_gotoxy@x^0,w,c
  2386  0017D4  0F13               	addlw	19
  2387  0017D6  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  2388  0017D8  EF10  F00C         	goto	l1973
  2389  0017DC                     l1965:
  2390  0017DC  5006               	movf	LCD_gotoxy@x^0,w,c
  2391  0017DE  0F53               	addlw	83
  2392  0017E0  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  2393  0017E2  EF10  F00C         	goto	l1973
  2394  0017E6                     l1971:
  2395  0017E6  5002               	movf	LCD_gotoxy@y^0,w,c
  2396  0017E8  6E03               	movwf	??_LCD_gotoxy^0,c
  2397  0017EA  6A04               	clrf	(??_LCD_gotoxy+1)^0,c
  2398                           
  2399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2400                           ; Switch size 1, requested type "simple"
  2401                           ; Number of cases is 1, Range of values is 0 to 0
  2402                           ; switch strategies available:
  2403                           ; Name         Instructions Cycles
  2404                           ; simple_byte            4     3 (average)
  2405                           ;	Chosen strategy is simple_byte
  2406  0017EC  5004               	movf	(??_LCD_gotoxy+1)^0,w,c
  2407  0017EE  0A00               	xorlw	0	; case 0
  2408  0017F0  B4D8               	btfsc	status,2,c
  2409  0017F2  EFFD  F00B         	goto	l2473
  2410  0017F6  EFE0  F00B         	goto	l1959
  2411  0017FA                     l2473:
  2412                           
  2413                           ; Switch size 1, requested type "simple"
  2414                           ; Number of cases is 4, Range of values is 1 to 4
  2415                           ; switch strategies available:
  2416                           ; Name         Instructions Cycles
  2417                           ; simple_byte           13     7 (average)
  2418                           ;	Chosen strategy is simple_byte
  2419  0017FA  5003               	movf	??_LCD_gotoxy^0,w,c
  2420  0017FC  0A01               	xorlw	1	; case 1
  2421  0017FE  B4D8               	btfsc	status,2,c
  2422  001800  EFE0  F00B         	goto	l1959
  2423  001804  0A03               	xorlw	3	; case 2
  2424  001806  B4D8               	btfsc	status,2,c
  2425  001808  EFE4  F00B         	goto	l1961
  2426  00180C  0A01               	xorlw	1	; case 3
  2427  00180E  B4D8               	btfsc	status,2,c
  2428  001810  EFE9  F00B         	goto	l1963
  2429  001814  0A07               	xorlw	7	; case 4
  2430  001816  B4D8               	btfsc	status,2,c
  2431  001818  EFEE  F00B         	goto	l1965
  2432  00181C  EFE0  F00B         	goto	l1959
  2433  001820                     l1973:
  2434                           
  2435                           ;lcd.c: 178:  LCD_command(1<<7|DDRAMAddr);
  2436  001820  5005               	movf	LCD_gotoxy@DDRAMAddr^0,w,c
  2437  001822  0980               	iorlw	128
  2438  001824  ECB5  F00A         	call	_LCD_command
  2439  001828  0012               	return		;funcret
  2440  00182A                     __end_of_LCD_gotoxy:
  2441                           	opt callstack 0
  2442                           
  2443 ;; *************** function _pedir_clave *****************
  2444 ;; Defined at:
  2445 ;;		line 256 in file "main.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2459 ;;      Params:         0       0       0       0       0       0       0       0       0
  2460 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2462 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    2
  2466 ;; This function calls:
  2467 ;;		_LCD_putc
  2468 ;;		_TECLADO
  2469 ;; This function is called by:
  2470 ;;		_cambio_clave
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text9
  2476  001320                     __ptext9:
  2477                           	opt callstack 0
  2478  001320                     _pedir_clave:
  2479                           	opt callstack 28
  2480  001320                     
  2481                           ;main.c: 257:     TECLADO();
  2482  001320  EC33  F00A         	call	_TECLADO	;wreg free
  2483  001324                     
  2484                           ;main.c: 259:     if ((K != '#')&&(K != '*')) {
  2485  001324  0E23               	movlw	35
  2486  001326  1854               	xorwf	_K^0,w,c
  2487  001328  B4D8               	btfsc	status,2,c
  2488  00132A  EF99  F009         	goto	u1461
  2489  00132E  EF9B  F009         	goto	u1460
  2490  001332                     u1461:
  2491  001332  EFA9  F009         	goto	l2013
  2492  001336                     u1460:
  2493  001336  0E2A               	movlw	42
  2494  001338  1854               	xorwf	_K^0,w,c
  2495  00133A  B4D8               	btfsc	status,2,c
  2496  00133C  EFA2  F009         	goto	u1471
  2497  001340  EFA4  F009         	goto	u1470
  2498  001344                     u1471:
  2499  001344  EFA9  F009         	goto	l2013
  2500  001348                     u1470:
  2501  001348                     
  2502                           ;main.c: 260:         LCD_putc('*');
  2503  001348  0E2A               	movlw	42
  2504  00134A  EC24  F00B         	call	_LCD_putc
  2505  00134E                     
  2506                           ;main.c: 261:         MIL = VAL;
  2507  00134E  C04F  F053         	movff	_VAL,_MIL
  2508  001352                     l2013:
  2509                           
  2510                           ;main.c: 263:     if (K == '*' || K == '#')
  2511  001352  0E2A               	movlw	42
  2512  001354  1854               	xorwf	_K^0,w,c
  2513  001356  B4D8               	btfsc	status,2,c
  2514  001358  EFB0  F009         	goto	u1481
  2515  00135C  EFB2  F009         	goto	u1480
  2516  001360                     u1481:
  2517  001360  EF32  F00A         	goto	l72
  2518  001364                     u1480:
  2519  001364  0E23               	movlw	35
  2520  001366  1854               	xorwf	_K^0,w,c
  2521  001368  A4D8               	btfss	status,2,c
  2522  00136A  EFB9  F009         	goto	u1491
  2523  00136E  EFBB  F009         	goto	u1490
  2524  001372                     u1491:
  2525  001372  EFBD  F009         	goto	l2017
  2526  001376                     u1490:
  2527  001376  EF32  F00A         	goto	l72
  2528  00137A                     l2017:
  2529                           
  2530                           ;main.c: 265:     TECLADO();
  2531  00137A  EC33  F00A         	call	_TECLADO	;wreg free
  2532  00137E                     
  2533                           ;main.c: 266:     if ((K != '#')&&(K != '*')) {
  2534  00137E  0E23               	movlw	35
  2535  001380  1854               	xorwf	_K^0,w,c
  2536  001382  B4D8               	btfsc	status,2,c
  2537  001384  EFC6  F009         	goto	u1501
  2538  001388  EFC8  F009         	goto	u1500
  2539  00138C                     u1501:
  2540  00138C  EFD6  F009         	goto	l2027
  2541  001390                     u1500:
  2542  001390  0E2A               	movlw	42
  2543  001392  1854               	xorwf	_K^0,w,c
  2544  001394  B4D8               	btfsc	status,2,c
  2545  001396  EFCF  F009         	goto	u1511
  2546  00139A  EFD1  F009         	goto	u1510
  2547  00139E                     u1511:
  2548  00139E  EFD6  F009         	goto	l2027
  2549  0013A2                     u1510:
  2550  0013A2                     
  2551                           ;main.c: 267:         LCD_putc('*');
  2552  0013A2  0E2A               	movlw	42
  2553  0013A4  EC24  F00B         	call	_LCD_putc
  2554  0013A8                     
  2555                           ;main.c: 268:         CEN = VAL;
  2556  0013A8  C04F  F052         	movff	_VAL,_CEN
  2557  0013AC                     l2027:
  2558                           
  2559                           ;main.c: 270:     if (K == '*' || K == '#')
  2560  0013AC  0E2A               	movlw	42
  2561  0013AE  1854               	xorwf	_K^0,w,c
  2562  0013B0  B4D8               	btfsc	status,2,c
  2563  0013B2  EFDD  F009         	goto	u1521
  2564  0013B6  EFDF  F009         	goto	u1520
  2565  0013BA                     u1521:
  2566  0013BA  EF32  F00A         	goto	l72
  2567  0013BE                     u1520:
  2568  0013BE  0E23               	movlw	35
  2569  0013C0  1854               	xorwf	_K^0,w,c
  2570  0013C2  A4D8               	btfss	status,2,c
  2571  0013C4  EFE6  F009         	goto	u1531
  2572  0013C8  EFE8  F009         	goto	u1530
  2573  0013CC                     u1531:
  2574  0013CC  EFEA  F009         	goto	l2031
  2575  0013D0                     u1530:
  2576  0013D0  EF32  F00A         	goto	l72
  2577  0013D4                     l2031:
  2578                           
  2579                           ;main.c: 272:     TECLADO();
  2580  0013D4  EC33  F00A         	call	_TECLADO	;wreg free
  2581  0013D8                     
  2582                           ;main.c: 273:     if ((K != '#')&&(K != '*')) {
  2583  0013D8  0E23               	movlw	35
  2584  0013DA  1854               	xorwf	_K^0,w,c
  2585  0013DC  B4D8               	btfsc	status,2,c
  2586  0013DE  EFF3  F009         	goto	u1541
  2587  0013E2  EFF5  F009         	goto	u1540
  2588  0013E6                     u1541:
  2589  0013E6  EF03  F00A         	goto	l2041
  2590  0013EA                     u1540:
  2591  0013EA  0E2A               	movlw	42
  2592  0013EC  1854               	xorwf	_K^0,w,c
  2593  0013EE  B4D8               	btfsc	status,2,c
  2594  0013F0  EFFC  F009         	goto	u1551
  2595  0013F4  EFFE  F009         	goto	u1550
  2596  0013F8                     u1551:
  2597  0013F8  EF03  F00A         	goto	l2041
  2598  0013FC                     u1550:
  2599  0013FC                     
  2600                           ;main.c: 274:         LCD_putc('*');
  2601  0013FC  0E2A               	movlw	42
  2602  0013FE  EC24  F00B         	call	_LCD_putc
  2603  001402                     
  2604                           ;main.c: 275:         DEC = VAL;
  2605  001402  C04F  F051         	movff	_VAL,_DEC
  2606  001406                     l2041:
  2607                           
  2608                           ;main.c: 277:     if (K == '*' || K == '#')
  2609  001406  0E2A               	movlw	42
  2610  001408  1854               	xorwf	_K^0,w,c
  2611  00140A  B4D8               	btfsc	status,2,c
  2612  00140C  EF0A  F00A         	goto	u1561
  2613  001410  EF0C  F00A         	goto	u1560
  2614  001414                     u1561:
  2615  001414  EF32  F00A         	goto	l72
  2616  001418                     u1560:
  2617  001418  0E23               	movlw	35
  2618  00141A  1854               	xorwf	_K^0,w,c
  2619  00141C  A4D8               	btfss	status,2,c
  2620  00141E  EF13  F00A         	goto	u1571
  2621  001422  EF15  F00A         	goto	u1570
  2622  001426                     u1571:
  2623  001426  EF17  F00A         	goto	l2045
  2624  00142A                     u1570:
  2625  00142A  EF32  F00A         	goto	l72
  2626  00142E                     l2045:
  2627                           
  2628                           ;main.c: 279:     TECLADO();
  2629  00142E  EC33  F00A         	call	_TECLADO	;wreg free
  2630  001432                     
  2631                           ;main.c: 280:     if ((K != '#')&&(K != '*')) {
  2632  001432  0E23               	movlw	35
  2633  001434  1854               	xorwf	_K^0,w,c
  2634  001436  B4D8               	btfsc	status,2,c
  2635  001438  EF20  F00A         	goto	u1581
  2636  00143C  EF22  F00A         	goto	u1580
  2637  001440                     u1581:
  2638  001440  EF32  F00A         	goto	l2055
  2639  001444                     u1580:
  2640  001444  0E2A               	movlw	42
  2641  001446  1854               	xorwf	_K^0,w,c
  2642  001448  B4D8               	btfsc	status,2,c
  2643  00144A  EF29  F00A         	goto	u1591
  2644  00144E  EF2B  F00A         	goto	u1590
  2645  001452                     u1591:
  2646  001452  EF32  F00A         	goto	l2055
  2647  001456                     u1590:
  2648  001456                     
  2649                           ;main.c: 281:         LCD_putc('*');
  2650  001456  0E2A               	movlw	42
  2651  001458  EC24  F00B         	call	_LCD_putc
  2652  00145C                     
  2653                           ;main.c: 282:         UNI = VAL;
  2654  00145C  C04F  F050         	movff	_VAL,_UNI
  2655  001460  EF32  F00A         	goto	l72
  2656  001464                     l2055:
  2657  001464                     l72:
  2658  001464  0012               	return		;funcret
  2659  001466                     __end_of_pedir_clave:
  2660                           	opt callstack 0
  2661                           
  2662 ;; *************** function _TECLADO *****************
  2663 ;; Defined at:
  2664 ;;		line 220 in file "main.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2678 ;;      Params:         0       0       0       0       0       0       0       0       0
  2679 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2681 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2682 ;;Total ram usage:        0 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    1
  2685 ;; This function calls:
  2686 ;;		_teclado_getc
  2687 ;; This function is called by:
  2688 ;;		_pedir_clave
  2689 ;;		_cambio_clave
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text10
  2695  001466                     __ptext10:
  2696                           	opt callstack 0
  2697  001466                     _TECLADO:
  2698                           	opt callstack 28
  2699  001466                     l1907:
  2700                           
  2701                           ;main.c: 221:     K = teclado_getc();
  2702  001466  ECBF  F007         	call	_teclado_getc	;wreg free
  2703  00146A  6E54               	movwf	_K^0,c
  2704  00146C                     
  2705                           ;main.c: 225:     while (K == '\0')
  2706  00146C  5054               	movf	_K^0,w,c
  2707  00146E  B4D8               	btfsc	status,2,c
  2708  001470  EF3C  F00A         	goto	u1311
  2709  001474  EF3E  F00A         	goto	u1310
  2710  001478                     u1311:
  2711  001478  EF33  F00A         	goto	l1907
  2712  00147C                     u1310:
  2713  00147C                     
  2714                           ;main.c: 229:     if ((K != '\0')) {
  2715  00147C  5054               	movf	_K^0,w,c
  2716  00147E  B4D8               	btfsc	status,2,c
  2717  001480  EF44  F00A         	goto	u1321
  2718  001484  EF46  F00A         	goto	u1320
  2719  001488                     u1321:
  2720  001488  EFB4  F00A         	goto	l65
  2721  00148C                     u1320:
  2722  00148C                     
  2723                           ;main.c: 230:         if (K == '0')
  2724  00148C  0E30               	movlw	48
  2725  00148E  1854               	xorwf	_K^0,w,c
  2726  001490  A4D8               	btfss	status,2,c
  2727  001492  EF4D  F00A         	goto	u1331
  2728  001496  EF4F  F00A         	goto	u1330
  2729  00149A                     u1331:
  2730  00149A  EF51  F00A         	goto	l1919
  2731  00149E                     u1330:
  2732  00149E                     
  2733                           ;main.c: 231:             VAL = 0;
  2734  00149E  0E00               	movlw	0
  2735  0014A0  6E4F               	movwf	_VAL^0,c
  2736  0014A2                     l1919:
  2737                           
  2738                           ;main.c: 232:         if (K == '1')
  2739  0014A2  0E31               	movlw	49
  2740  0014A4  1854               	xorwf	_K^0,w,c
  2741  0014A6  A4D8               	btfss	status,2,c
  2742  0014A8  EF58  F00A         	goto	u1341
  2743  0014AC  EF5A  F00A         	goto	u1340
  2744  0014B0                     u1341:
  2745  0014B0  EF5C  F00A         	goto	l1923
  2746  0014B4                     u1340:
  2747  0014B4                     
  2748                           ;main.c: 233:             VAL = 1;
  2749  0014B4  0E01               	movlw	1
  2750  0014B6  6E4F               	movwf	_VAL^0,c
  2751  0014B8                     l1923:
  2752                           
  2753                           ;main.c: 234:         if (K == '2')
  2754  0014B8  0E32               	movlw	50
  2755  0014BA  1854               	xorwf	_K^0,w,c
  2756  0014BC  A4D8               	btfss	status,2,c
  2757  0014BE  EF63  F00A         	goto	u1351
  2758  0014C2  EF65  F00A         	goto	u1350
  2759  0014C6                     u1351:
  2760  0014C6  EF67  F00A         	goto	l1927
  2761  0014CA                     u1350:
  2762  0014CA                     
  2763                           ;main.c: 235:             VAL = 2;
  2764  0014CA  0E02               	movlw	2
  2765  0014CC  6E4F               	movwf	_VAL^0,c
  2766  0014CE                     l1927:
  2767                           
  2768                           ;main.c: 236:         if (K == '3')
  2769  0014CE  0E33               	movlw	51
  2770  0014D0  1854               	xorwf	_K^0,w,c
  2771  0014D2  A4D8               	btfss	status,2,c
  2772  0014D4  EF6E  F00A         	goto	u1361
  2773  0014D8  EF70  F00A         	goto	u1360
  2774  0014DC                     u1361:
  2775  0014DC  EF72  F00A         	goto	l1931
  2776  0014E0                     u1360:
  2777  0014E0                     
  2778                           ;main.c: 237:             VAL = 3;
  2779  0014E0  0E03               	movlw	3
  2780  0014E2  6E4F               	movwf	_VAL^0,c
  2781  0014E4                     l1931:
  2782                           
  2783                           ;main.c: 238:         if (K == '4')
  2784  0014E4  0E34               	movlw	52
  2785  0014E6  1854               	xorwf	_K^0,w,c
  2786  0014E8  A4D8               	btfss	status,2,c
  2787  0014EA  EF79  F00A         	goto	u1371
  2788  0014EE  EF7B  F00A         	goto	u1370
  2789  0014F2                     u1371:
  2790  0014F2  EF7D  F00A         	goto	l1935
  2791  0014F6                     u1370:
  2792  0014F6                     
  2793                           ;main.c: 239:             VAL = 4;
  2794  0014F6  0E04               	movlw	4
  2795  0014F8  6E4F               	movwf	_VAL^0,c
  2796  0014FA                     l1935:
  2797                           
  2798                           ;main.c: 240:         if (K == '5')
  2799  0014FA  0E35               	movlw	53
  2800  0014FC  1854               	xorwf	_K^0,w,c
  2801  0014FE  A4D8               	btfss	status,2,c
  2802  001500  EF84  F00A         	goto	u1381
  2803  001504  EF86  F00A         	goto	u1380
  2804  001508                     u1381:
  2805  001508  EF88  F00A         	goto	l1939
  2806  00150C                     u1380:
  2807  00150C                     
  2808                           ;main.c: 241:             VAL = 5;
  2809  00150C  0E05               	movlw	5
  2810  00150E  6E4F               	movwf	_VAL^0,c
  2811  001510                     l1939:
  2812                           
  2813                           ;main.c: 242:         if (K == '6')
  2814  001510  0E36               	movlw	54
  2815  001512  1854               	xorwf	_K^0,w,c
  2816  001514  A4D8               	btfss	status,2,c
  2817  001516  EF8F  F00A         	goto	u1391
  2818  00151A  EF91  F00A         	goto	u1390
  2819  00151E                     u1391:
  2820  00151E  EF93  F00A         	goto	l1943
  2821  001522                     u1390:
  2822  001522                     
  2823                           ;main.c: 243:             VAL = 6;
  2824  001522  0E06               	movlw	6
  2825  001524  6E4F               	movwf	_VAL^0,c
  2826  001526                     l1943:
  2827                           
  2828                           ;main.c: 244:         if (K == '7')
  2829  001526  0E37               	movlw	55
  2830  001528  1854               	xorwf	_K^0,w,c
  2831  00152A  A4D8               	btfss	status,2,c
  2832  00152C  EF9A  F00A         	goto	u1401
  2833  001530  EF9C  F00A         	goto	u1400
  2834  001534                     u1401:
  2835  001534  EF9E  F00A         	goto	l1947
  2836  001538                     u1400:
  2837  001538                     
  2838                           ;main.c: 245:             VAL = 7;
  2839  001538  0E07               	movlw	7
  2840  00153A  6E4F               	movwf	_VAL^0,c
  2841  00153C                     l1947:
  2842                           
  2843                           ;main.c: 246:         if (K == '8')
  2844  00153C  0E38               	movlw	56
  2845  00153E  1854               	xorwf	_K^0,w,c
  2846  001540  A4D8               	btfss	status,2,c
  2847  001542  EFA5  F00A         	goto	u1411
  2848  001546  EFA7  F00A         	goto	u1410
  2849  00154A                     u1411:
  2850  00154A  EFA9  F00A         	goto	l1951
  2851  00154E                     u1410:
  2852  00154E                     
  2853                           ;main.c: 247:             VAL = 8;
  2854  00154E  0E08               	movlw	8
  2855  001550  6E4F               	movwf	_VAL^0,c
  2856  001552                     l1951:
  2857                           
  2858                           ;main.c: 248:         if (K == '9')
  2859  001552  0E39               	movlw	57
  2860  001554  1854               	xorwf	_K^0,w,c
  2861  001556  A4D8               	btfss	status,2,c
  2862  001558  EFB0  F00A         	goto	u1421
  2863  00155C  EFB2  F00A         	goto	u1420
  2864  001560                     u1421:
  2865  001560  EFB4  F00A         	goto	l65
  2866  001564                     u1420:
  2867  001564                     
  2868                           ;main.c: 249:             VAL = 9;
  2869  001564  0E09               	movlw	9
  2870  001566  6E4F               	movwf	_VAL^0,c
  2871  001568                     l65:
  2872  001568  0012               	return		;funcret
  2873  00156A                     __end_of_TECLADO:
  2874                           	opt callstack 0
  2875                           
  2876 ;; *************** function _teclado_getc *****************
  2877 ;; Defined at:
  2878 ;;		line 13 in file "teclado.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  letras         16    0[COMRAM] unsigned char [4][4]
  2883 ;;  i               2   17[COMRAM] int 
  2884 ;;  valor           1   16[COMRAM] unsigned char 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      unsigned char 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2894 ;;      Params:         0       0       0       0       0       0       0       0       0
  2895 ;;      Locals:        19       0       0       0       0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2897 ;;      Totals:        19       0       0       0       0       0       0       0       0
  2898 ;;Total ram usage:       19 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_TECLADO
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text11
  2908  000F7E                     __ptext11:
  2909                           	opt callstack 0
  2910  000F7E                     _teclado_getc:
  2911                           	opt callstack 28
  2912  000F7E                     
  2913                           ;teclado.c: 15: char letras[4][4]={ {'1','2','3','A'},
  2914  000F7E  EE20  F074         	lfsr	2,teclado_getc@F3164
  2915  000F82  EE10  F001         	lfsr	1,teclado_getc@letras
  2916  000F86  0E0F               	movlw	15
  2917  000F88                     u931:
  2918  000F88  CFDB FFE3          	movff	plusw2,plusw1
  2919  000F8C  06E8               	decf	wreg,f,c
  2920  000F8E  E2FC               	bc	u931
  2921  000F90                     
  2922                           ;teclado.c: 20: char valor=0;
  2923  000F90  0E00               	movlw	0
  2924  000F92  6E11               	movwf	teclado_getc@valor^0,c
  2925  000F94                     
  2926                           ;teclado.c: 22: for(i=0;i<4;i++){
  2927  000F94  0E00               	movlw	0
  2928  000F96  6E13               	movwf	(teclado_getc@i+1)^0,c
  2929  000F98  0E00               	movlw	0
  2930  000F9A  6E12               	movwf	teclado_getc@i^0,c
  2931  000F9C                     l1791:
  2932                           
  2933                           ;teclado.c: 24:    if(i==0){
  2934  000F9C  5012               	movf	teclado_getc@i^0,w,c
  2935  000F9E  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  2936  000FA0  A4D8               	btfss	status,2,c
  2937  000FA2  EFD5  F007         	goto	u941
  2938  000FA6  EFD7  F007         	goto	u940
  2939  000FAA                     u941:
  2940  000FAA  EF09  F008         	goto	l1797
  2941  000FAE                     u940:
  2942  000FAE                     
  2943                           ;teclado.c: 26:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  2944  000FAE  0EFE               	movlw	254
  2945  000FB0  6E8A               	movwf	138,c	;volatile
  2946  000FB2                     
  2947                           ;teclado.c: 27:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  2948  000FB2  0EA6               	movlw	166
  2949  000FB4                     u1997:
  2950  000FB4  2EE8               	decfsz	wreg,f,c
  2951  000FB6  D7FE               	bra	u1997
  2952  000FB8  D000               	nop2	
  2953                           
  2954                           ;teclado.c: 28:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  2955  000FBA  EFE1  F007         	goto	l265
  2956  000FBE                     l266:
  2957  000FBE  C001  F011         	movff	teclado_getc@letras,teclado_getc@valor
  2958  000FC2                     l265:
  2959  000FC2  A881               	btfss	129,4,c	;volatile
  2960  000FC4  EFE6  F007         	goto	u951
  2961  000FC8  EFE8  F007         	goto	u950
  2962  000FCC                     u951:
  2963  000FCC  EFDF  F007         	goto	l266
  2964  000FD0                     u950:
  2965  000FD0  EFEC  F007         	goto	l268
  2966  000FD4                     l269:
  2967  000FD4  C002  F011         	movff	teclado_getc@letras+1,teclado_getc@valor
  2968  000FD8                     l268:
  2969  000FD8  AA81               	btfss	129,5,c	;volatile
  2970  000FDA  EFF1  F007         	goto	u961
  2971  000FDE  EFF3  F007         	goto	u960
  2972  000FE2                     u961:
  2973  000FE2  EFEA  F007         	goto	l269
  2974  000FE6                     u960:
  2975  000FE6  EFF7  F007         	goto	l271
  2976  000FEA                     l272:
  2977  000FEA  C003  F011         	movff	teclado_getc@letras+2,teclado_getc@valor
  2978  000FEE                     l271:
  2979  000FEE  AC81               	btfss	129,6,c	;volatile
  2980  000FF0  EFFC  F007         	goto	u971
  2981  000FF4  EFFE  F007         	goto	u970
  2982  000FF8                     u971:
  2983  000FF8  EFF5  F007         	goto	l272
  2984  000FFC                     u970:
  2985  000FFC  EF02  F008         	goto	l274
  2986  001000                     l275:
  2987  001000  C004  F011         	movff	teclado_getc@letras+3,teclado_getc@valor
  2988  001004                     l274:
  2989  001004  AE81               	btfss	129,7,c	;volatile
  2990  001006  EF07  F008         	goto	u981
  2991  00100A  EF09  F008         	goto	u980
  2992  00100E                     u981:
  2993  00100E  EF00  F008         	goto	l275
  2994  001012                     u980:
  2995  001012                     l1797:
  2996                           
  2997                           ;teclado.c: 34:    if(i==1){
  2998  001012  0412               	decf	teclado_getc@i^0,w,c
  2999  001014  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  3000  001016  A4D8               	btfss	status,2,c
  3001  001018  EF10  F008         	goto	u991
  3002  00101C  EF12  F008         	goto	u990
  3003  001020                     u991:
  3004  001020  EF44  F008         	goto	l1803
  3005  001024                     u990:
  3006  001024                     
  3007                           ;teclado.c: 35:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  3008  001024  0EFD               	movlw	253
  3009  001026  6E8A               	movwf	138,c	;volatile
  3010  001028                     
  3011                           ;teclado.c: 36:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  3012  001028  0EA6               	movlw	166
  3013  00102A                     u2007:
  3014  00102A  2EE8               	decfsz	wreg,f,c
  3015  00102C  D7FE               	bra	u2007
  3016  00102E  D000               	nop2	
  3017                           
  3018                           ;teclado.c: 37:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  3019  001030  EF1C  F008         	goto	l278
  3020  001034                     l279:
  3021  001034  C005  F011         	movff	teclado_getc@letras+4,teclado_getc@valor
  3022  001038                     l278:
  3023  001038  A881               	btfss	129,4,c	;volatile
  3024  00103A  EF21  F008         	goto	u1001
  3025  00103E  EF23  F008         	goto	u1000
  3026  001042                     u1001:
  3027  001042  EF1A  F008         	goto	l279
  3028  001046                     u1000:
  3029  001046  EF27  F008         	goto	l281
  3030  00104A                     l282:
  3031  00104A  C006  F011         	movff	teclado_getc@letras+5,teclado_getc@valor
  3032  00104E                     l281:
  3033  00104E  AA81               	btfss	129,5,c	;volatile
  3034  001050  EF2C  F008         	goto	u1011
  3035  001054  EF2E  F008         	goto	u1010
  3036  001058                     u1011:
  3037  001058  EF25  F008         	goto	l282
  3038  00105C                     u1010:
  3039  00105C  EF32  F008         	goto	l284
  3040  001060                     l285:
  3041  001060  C007  F011         	movff	teclado_getc@letras+6,teclado_getc@valor
  3042  001064                     l284:
  3043  001064  AC81               	btfss	129,6,c	;volatile
  3044  001066  EF37  F008         	goto	u1021
  3045  00106A  EF39  F008         	goto	u1020
  3046  00106E                     u1021:
  3047  00106E  EF30  F008         	goto	l285
  3048  001072                     u1020:
  3049  001072  EF3D  F008         	goto	l287
  3050  001076                     l288:
  3051  001076  C008  F011         	movff	teclado_getc@letras+7,teclado_getc@valor
  3052  00107A                     l287:
  3053  00107A  AE81               	btfss	129,7,c	;volatile
  3054  00107C  EF42  F008         	goto	u1031
  3055  001080  EF44  F008         	goto	u1030
  3056  001084                     u1031:
  3057  001084  EF3B  F008         	goto	l288
  3058  001088                     u1030:
  3059  001088                     l1803:
  3060                           
  3061                           ;teclado.c: 43:    if(i==2){
  3062  001088  0E02               	movlw	2
  3063  00108A  1812               	xorwf	teclado_getc@i^0,w,c
  3064  00108C  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  3065  00108E  A4D8               	btfss	status,2,c
  3066  001090  EF4C  F008         	goto	u1041
  3067  001094  EF4E  F008         	goto	u1040
  3068  001098                     u1041:
  3069  001098  EF80  F008         	goto	l1809
  3070  00109C                     u1040:
  3071  00109C                     
  3072                           ;teclado.c: 44:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  3073  00109C  0EFB               	movlw	251
  3074  00109E  6E8A               	movwf	138,c	;volatile
  3075  0010A0                     
  3076                           ;teclado.c: 45:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  3077  0010A0  0EA6               	movlw	166
  3078  0010A2                     u2017:
  3079  0010A2  2EE8               	decfsz	wreg,f,c
  3080  0010A4  D7FE               	bra	u2017
  3081  0010A6  D000               	nop2	
  3082                           
  3083                           ;teclado.c: 46:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  3084  0010A8  EF58  F008         	goto	l291
  3085  0010AC                     l292:
  3086  0010AC  C009  F011         	movff	teclado_getc@letras+8,teclado_getc@valor
  3087  0010B0                     l291:
  3088  0010B0  A881               	btfss	129,4,c	;volatile
  3089  0010B2  EF5D  F008         	goto	u1051
  3090  0010B6  EF5F  F008         	goto	u1050
  3091  0010BA                     u1051:
  3092  0010BA  EF56  F008         	goto	l292
  3093  0010BE                     u1050:
  3094  0010BE  EF63  F008         	goto	l294
  3095  0010C2                     l295:
  3096  0010C2  C00A  F011         	movff	teclado_getc@letras+9,teclado_getc@valor
  3097  0010C6                     l294:
  3098  0010C6  AA81               	btfss	129,5,c	;volatile
  3099  0010C8  EF68  F008         	goto	u1061
  3100  0010CC  EF6A  F008         	goto	u1060
  3101  0010D0                     u1061:
  3102  0010D0  EF61  F008         	goto	l295
  3103  0010D4                     u1060:
  3104  0010D4  EF6E  F008         	goto	l297
  3105  0010D8                     l298:
  3106  0010D8  C00B  F011         	movff	teclado_getc@letras+10,teclado_getc@valor
  3107  0010DC                     l297:
  3108  0010DC  AC81               	btfss	129,6,c	;volatile
  3109  0010DE  EF73  F008         	goto	u1071
  3110  0010E2  EF75  F008         	goto	u1070
  3111  0010E6                     u1071:
  3112  0010E6  EF6C  F008         	goto	l298
  3113  0010EA                     u1070:
  3114  0010EA  EF79  F008         	goto	l300
  3115  0010EE                     l301:
  3116  0010EE  C00C  F011         	movff	teclado_getc@letras+11,teclado_getc@valor
  3117  0010F2                     l300:
  3118  0010F2  AE81               	btfss	129,7,c	;volatile
  3119  0010F4  EF7E  F008         	goto	u1081
  3120  0010F8  EF80  F008         	goto	u1080
  3121  0010FC                     u1081:
  3122  0010FC  EF77  F008         	goto	l301
  3123  001100                     u1080:
  3124  001100                     l1809:
  3125                           
  3126                           ;teclado.c: 52:    if(i==3){
  3127  001100  0E03               	movlw	3
  3128  001102  1812               	xorwf	teclado_getc@i^0,w,c
  3129  001104  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  3130  001106  A4D8               	btfss	status,2,c
  3131  001108  EF88  F008         	goto	u1091
  3132  00110C  EF8A  F008         	goto	u1090
  3133  001110                     u1091:
  3134  001110  EFBC  F008         	goto	l1815
  3135  001114                     u1090:
  3136  001114                     
  3137                           ;teclado.c: 53:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  3138  001114  0EF7               	movlw	247
  3139  001116  6E8A               	movwf	138,c	;volatile
  3140  001118                     
  3141                           ;teclado.c: 54:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  3142  001118  0EA6               	movlw	166
  3143  00111A                     u2027:
  3144  00111A  2EE8               	decfsz	wreg,f,c
  3145  00111C  D7FE               	bra	u2027
  3146  00111E  D000               	nop2	
  3147                           
  3148                           ;teclado.c: 55:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  3149  001120  EF94  F008         	goto	l304
  3150  001124                     l305:
  3151  001124  C00D  F011         	movff	teclado_getc@letras+12,teclado_getc@valor
  3152  001128                     l304:
  3153  001128  A881               	btfss	129,4,c	;volatile
  3154  00112A  EF99  F008         	goto	u1101
  3155  00112E  EF9B  F008         	goto	u1100
  3156  001132                     u1101:
  3157  001132  EF92  F008         	goto	l305
  3158  001136                     u1100:
  3159  001136  EF9F  F008         	goto	l307
  3160  00113A                     l308:
  3161  00113A  C00E  F011         	movff	teclado_getc@letras+13,teclado_getc@valor
  3162  00113E                     l307:
  3163  00113E  AA81               	btfss	129,5,c	;volatile
  3164  001140  EFA4  F008         	goto	u1111
  3165  001144  EFA6  F008         	goto	u1110
  3166  001148                     u1111:
  3167  001148  EF9D  F008         	goto	l308
  3168  00114C                     u1110:
  3169  00114C  EFAA  F008         	goto	l310
  3170  001150                     l311:
  3171  001150  C00F  F011         	movff	teclado_getc@letras+14,teclado_getc@valor
  3172  001154                     l310:
  3173  001154  AC81               	btfss	129,6,c	;volatile
  3174  001156  EFAF  F008         	goto	u1121
  3175  00115A  EFB1  F008         	goto	u1120
  3176  00115E                     u1121:
  3177  00115E  EFA8  F008         	goto	l311
  3178  001162                     u1120:
  3179  001162  EFB5  F008         	goto	l313
  3180  001166                     l314:
  3181  001166  C010  F011         	movff	teclado_getc@letras+15,teclado_getc@valor
  3182  00116A                     l313:
  3183  00116A  AE81               	btfss	129,7,c	;volatile
  3184  00116C  EFBA  F008         	goto	u1131
  3185  001170  EFBC  F008         	goto	u1130
  3186  001174                     u1131:
  3187  001174  EFB3  F008         	goto	l314
  3188  001178                     u1130:
  3189  001178                     l1815:
  3190                           
  3191                           ;teclado.c: 60:    }
  3192  001178  4A12               	infsnz	teclado_getc@i^0,f,c
  3193  00117A  2A13               	incf	(teclado_getc@i+1)^0,f,c
  3194  00117C  BE13               	btfsc	(teclado_getc@i+1)^0,7,c
  3195  00117E  EFCA  F008         	goto	u1141
  3196  001182  5013               	movf	(teclado_getc@i+1)^0,w,c
  3197  001184  E109               	bnz	u1140
  3198  001186  0E04               	movlw	4
  3199  001188  5C12               	subwf	teclado_getc@i^0,w,c
  3200  00118A  A0D8               	btfss	status,0,c
  3201  00118C  EFCA  F008         	goto	u1141
  3202  001190  EFCC  F008         	goto	u1140
  3203  001194                     u1141:
  3204  001194  EFCE  F007         	goto	l1791
  3205  001198                     u1140:
  3206  001198                     
  3207                           ;teclado.c: 62:    return valor;
  3208  001198  5011               	movf	teclado_getc@valor^0,w,c
  3209  00119A  0012               	return		;funcret
  3210  00119C                     __end_of_teclado_getc:
  3211                           	opt callstack 0
  3212                           
  3213 ;; *************** function _LCD_putc *****************
  3214 ;; Defined at:
  3215 ;;		line 7 in file "lcd.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  ch              1    wreg     unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  ch              1    0[COMRAM] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3229 ;;      Params:         0       0       0       0       0       0       0       0       0
  3230 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3232 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3233 ;;Total ram usage:        1 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_pedir_clave
  3239 ;;		_cambio_clave
  3240 ;;		_LCD_puts
  3241 ;;		_LCD_definechar
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text12
  3246  001648                     __ptext12:
  3247                           	opt callstack 0
  3248  001648                     _LCD_putc:
  3249                           	opt callstack 28
  3250                           
  3251                           ;incstack = 0
  3252                           ;LCD_putc@ch stored from wreg
  3253  001648  6E01               	movwf	LCD_putc@ch^0,c
  3254  00164A                     
  3255                           ;lcd.c: 9:     LATDbits.LATD0 = 1;
  3256  00164A  808C               	bsf	140,0,c	;volatile
  3257  00164C                     
  3258                           ;lcd.c: 11:     if ( ch & 0x10 ) {
  3259  00164C  A801               	btfss	LCD_putc@ch^0,4,c
  3260  00164E  EF2B  F00B         	goto	u1151
  3261  001652  EF2D  F00B         	goto	u1150
  3262  001656                     u1151:
  3263  001656  EF30  F00B         	goto	l146
  3264  00165A                     u1150:
  3265  00165A                     
  3266                           ;lcd.c: 12:         LATDbits.LATD4 = 1;
  3267  00165A  888C               	bsf	140,4,c	;volatile
  3268                           
  3269                           ;lcd.c: 13:  } else {
  3270  00165C  EF31  F00B         	goto	l1829
  3271  001660                     l146:
  3272                           
  3273                           ;lcd.c: 14:         LATDbits.LATD4 = 0;
  3274  001660  988C               	bcf	140,4,c	;volatile
  3275  001662                     l1829:
  3276                           
  3277                           ;lcd.c: 16:  if ( ch & 0x20 ) {
  3278  001662  AA01               	btfss	LCD_putc@ch^0,5,c
  3279  001664  EF36  F00B         	goto	u1161
  3280  001668  EF38  F00B         	goto	u1160
  3281  00166C                     u1161:
  3282  00166C  EF3B  F00B         	goto	l148
  3283  001670                     u1160:
  3284  001670                     
  3285                           ;lcd.c: 17:         LATDbits.LATD5 = 1;
  3286  001670  8A8C               	bsf	140,5,c	;volatile
  3287                           
  3288                           ;lcd.c: 18:  } else {
  3289  001672  EF3C  F00B         	goto	l1833
  3290  001676                     l148:
  3291                           
  3292                           ;lcd.c: 19:         LATDbits.LATD5 = 0;
  3293  001676  9A8C               	bcf	140,5,c	;volatile
  3294  001678                     l1833:
  3295                           
  3296                           ;lcd.c: 21:  if ( ch & 0x40 ) {
  3297  001678  AC01               	btfss	LCD_putc@ch^0,6,c
  3298  00167A  EF41  F00B         	goto	u1171
  3299  00167E  EF43  F00B         	goto	u1170
  3300  001682                     u1171:
  3301  001682  EF46  F00B         	goto	l150
  3302  001686                     u1170:
  3303  001686                     
  3304                           ;lcd.c: 22:         LATDbits.LATD6 = 1;
  3305  001686  8C8C               	bsf	140,6,c	;volatile
  3306                           
  3307                           ;lcd.c: 23:  } else {
  3308  001688  EF47  F00B         	goto	l1837
  3309  00168C                     l150:
  3310                           
  3311                           ;lcd.c: 24:         LATDbits.LATD6 = 0;
  3312  00168C  9C8C               	bcf	140,6,c	;volatile
  3313  00168E                     l1837:
  3314                           
  3315                           ;lcd.c: 26:  if ( ch & 0x80 ) {
  3316  00168E  AE01               	btfss	LCD_putc@ch^0,7,c
  3317  001690  EF4C  F00B         	goto	u1181
  3318  001694  EF4E  F00B         	goto	u1180
  3319  001698                     u1181:
  3320  001698  EF51  F00B         	goto	l152
  3321  00169C                     u1180:
  3322  00169C                     
  3323                           ;lcd.c: 27:         LATDbits.LATD7 = 1;
  3324  00169C  8E8C               	bsf	140,7,c	;volatile
  3325                           
  3326                           ;lcd.c: 28:  } else {
  3327  00169E  EF52  F00B         	goto	l153
  3328  0016A2                     l152:
  3329                           
  3330                           ;lcd.c: 29:         LATDbits.LATD7 = 0;
  3331  0016A2  9E8C               	bcf	140,7,c	;volatile
  3332  0016A4                     l153:
  3333                           
  3334                           ;lcd.c: 32:     LATDbits.LATD2 = 1;
  3335  0016A4  848C               	bsf	140,2,c	;volatile
  3336  0016A6                     
  3337                           ;lcd.c: 33:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  3338  0016A6  0E64               	movlw	100
  3339  0016A8                     u2037:
  3340  0016A8  2EE8               	decfsz	wreg,f,c
  3341  0016AA  D7FE               	bra	u2037
  3342  0016AC                     
  3343                           ;lcd.c: 34:     LATDbits.LATD2 = 0;
  3344  0016AC  948C               	bcf	140,2,c	;volatile
  3345                           
  3346                           ;lcd.c: 35:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  3347  0016AE  0E64               	movlw	100
  3348  0016B0                     u2047:
  3349  0016B0  2EE8               	decfsz	wreg,f,c
  3350  0016B2  D7FE               	bra	u2047
  3351  0016B4                     
  3352                           ;lcd.c: 37:     if ( ch & 0x01 ) {
  3353  0016B4  A001               	btfss	LCD_putc@ch^0,0,c
  3354  0016B6  EF5F  F00B         	goto	u1191
  3355  0016BA  EF61  F00B         	goto	u1190
  3356  0016BE                     u1191:
  3357  0016BE  EF64  F00B         	goto	l154
  3358  0016C2                     u1190:
  3359  0016C2                     
  3360                           ;lcd.c: 38:         LATDbits.LATD4 = 1;
  3361  0016C2  888C               	bsf	140,4,c	;volatile
  3362                           
  3363                           ;lcd.c: 39:  } else {
  3364  0016C4  EF65  F00B         	goto	l1849
  3365  0016C8                     l154:
  3366                           
  3367                           ;lcd.c: 40:         LATDbits.LATD4 = 0;
  3368  0016C8  988C               	bcf	140,4,c	;volatile
  3369  0016CA                     l1849:
  3370                           
  3371                           ;lcd.c: 42:  if ( ch & 0x02 ) {
  3372  0016CA  A201               	btfss	LCD_putc@ch^0,1,c
  3373  0016CC  EF6A  F00B         	goto	u1201
  3374  0016D0  EF6C  F00B         	goto	u1200
  3375  0016D4                     u1201:
  3376  0016D4  EF6F  F00B         	goto	l156
  3377  0016D8                     u1200:
  3378  0016D8                     
  3379                           ;lcd.c: 43:         LATDbits.LATD5 = 1;
  3380  0016D8  8A8C               	bsf	140,5,c	;volatile
  3381                           
  3382                           ;lcd.c: 44:  } else {
  3383  0016DA  EF70  F00B         	goto	l1853
  3384  0016DE                     l156:
  3385                           
  3386                           ;lcd.c: 45:         LATDbits.LATD5 = 0;
  3387  0016DE  9A8C               	bcf	140,5,c	;volatile
  3388  0016E0                     l1853:
  3389                           
  3390                           ;lcd.c: 47:  if ( ch & 0x04 ) {
  3391  0016E0  A401               	btfss	LCD_putc@ch^0,2,c
  3392  0016E2  EF75  F00B         	goto	u1211
  3393  0016E6  EF77  F00B         	goto	u1210
  3394  0016EA                     u1211:
  3395  0016EA  EF7A  F00B         	goto	l158
  3396  0016EE                     u1210:
  3397  0016EE                     
  3398                           ;lcd.c: 48:         LATDbits.LATD6 = 1;
  3399  0016EE  8C8C               	bsf	140,6,c	;volatile
  3400                           
  3401                           ;lcd.c: 49:  } else {
  3402  0016F0  EF7B  F00B         	goto	l1857
  3403  0016F4                     l158:
  3404                           
  3405                           ;lcd.c: 50:         LATDbits.LATD6 = 0;
  3406  0016F4  9C8C               	bcf	140,6,c	;volatile
  3407  0016F6                     l1857:
  3408                           
  3409                           ;lcd.c: 52:  if ( ch & 0x08 ) {
  3410  0016F6  A601               	btfss	LCD_putc@ch^0,3,c
  3411  0016F8  EF80  F00B         	goto	u1221
  3412  0016FC  EF82  F00B         	goto	u1220
  3413  001700                     u1221:
  3414  001700  EF85  F00B         	goto	l160
  3415  001704                     u1220:
  3416  001704                     
  3417                           ;lcd.c: 53:         LATDbits.LATD7 = 1;
  3418  001704  8E8C               	bsf	140,7,c	;volatile
  3419                           
  3420                           ;lcd.c: 54:  } else {
  3421  001706  EF86  F00B         	goto	l161
  3422  00170A                     l160:
  3423                           
  3424                           ;lcd.c: 55:         LATDbits.LATD7 = 0;
  3425  00170A  9E8C               	bcf	140,7,c	;volatile
  3426  00170C                     l161:
  3427                           
  3428                           ;lcd.c: 58:     LATDbits.LATD2 = 1;
  3429  00170C  848C               	bsf	140,2,c	;volatile
  3430  00170E                     
  3431                           ;lcd.c: 59:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  3432  00170E  0E64               	movlw	100
  3433  001710                     u2057:
  3434  001710  2EE8               	decfsz	wreg,f,c
  3435  001712  D7FE               	bra	u2057
  3436  001714                     
  3437                           ;lcd.c: 60:     LATDbits.LATD2 = 0;
  3438  001714  948C               	bcf	140,2,c	;volatile
  3439                           
  3440                           ;lcd.c: 61:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  3441  001716  0E64               	movlw	100
  3442  001718                     u2067:
  3443  001718  2EE8               	decfsz	wreg,f,c
  3444  00171A  D7FE               	bra	u2067
  3445  00171C  0012               	return		;funcret
  3446  00171E                     __end_of_LCD_putc:
  3447                           	opt callstack 0
  3448                           
  3449 ;; *************** function _eeprom_writex *****************
  3450 ;; Defined at:
  3451 ;;		line 6 in file "eeprom.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  address         2    0[COMRAM] int 
  3454 ;;  data            1    2[COMRAM] unsigned char 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3466 ;;      Params:         3       0       0       0       0       0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3469 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3470 ;;Total ram usage:        3 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; This function calls:
  3473 ;;		Nothing
  3474 ;; This function is called by:
  3475 ;;		_cambio_clave
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text13
  3480  00192C                     __ptext13:
  3481                           	opt callstack 0
  3482  00192C                     _eeprom_writex:
  3483                           	opt callstack 29
  3484  00192C                     
  3485                           ;eeprom.c: 6: void eeprom_writex(int address, char data);eeprom.c: 7: {;eeprom.c: 8:    
      +                           EEADR = address;
  3486  00192C  C001  FFA9         	movff	eeprom_writex@address,4009	;volatile
  3487                           
  3488                           ;eeprom.c: 9:     EEDATA = data;
  3489  001930  C003  FFA8         	movff	eeprom_writex@data,4008	;volatile
  3490                           
  3491                           ;eeprom.c: 10:     EECON1bits.EEPGD = 0;
  3492  001934  9EA6               	bcf	166,7,c	;volsfr
  3493                           
  3494                           ;eeprom.c: 11:     EECON1bits.CFGS = 0;
  3495  001936  9CA6               	bcf	166,6,c	;volsfr
  3496                           
  3497                           ;eeprom.c: 12:     EECON1bits.WREN = 1;
  3498  001938  84A6               	bsf	166,2,c	;volsfr
  3499                           
  3500                           ;eeprom.c: 13:     INTCONbits.GIE = 0;
  3501  00193A  9EF2               	bcf	242,7,c	;volatile
  3502  00193C                     
  3503                           ;eeprom.c: 17:     EECON2 = 0x55;
  3504  00193C  0E55               	movlw	85
  3505  00193E  6EA7               	movwf	167,c	;volsfr
  3506                           
  3507                           ;eeprom.c: 18:     EECON2 = 0xaa;
  3508  001940  0EAA               	movlw	170
  3509  001942  6EA7               	movwf	167,c	;volsfr
  3510  001944                     
  3511                           ;eeprom.c: 19:     EECON1bits.WR = 1;
  3512  001944  82A6               	bsf	166,1,c	;volsfr
  3513  001946                     
  3514                           ;eeprom.c: 21:     INTCONbits.GIE = 1;
  3515  001946  8EF2               	bsf	242,7,c	;volatile
  3516  001948                     l329:
  3517  001948  B2A6               	btfsc	166,1,c	;volsfr
  3518  00194A  EFA9  F00C         	goto	u1621
  3519  00194E  EFAB  F00C         	goto	u1620
  3520  001952                     u1621:
  3521  001952  EFA4  F00C         	goto	l329
  3522  001956                     u1620:
  3523  001956  0012               	return		;funcret
  3524  001958                     __end_of_eeprom_writex:
  3525                           	opt callstack 0
  3526                           
  3527 ;; *************** function _LCD_init *****************
  3528 ;; Defined at:
  3529 ;;		line 120 in file "lcd.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3545 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3546 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3547 ;;Total ram usage:        1 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    2
  3550 ;; This function calls:
  3551 ;;		_LCD_clear
  3552 ;;		_LCD_command
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text14
  3559  00171E                     __ptext14:
  3560                           	opt callstack 0
  3561  00171E                     _LCD_init:
  3562                           	opt callstack 28
  3563  00171E                     
  3564                           ;lcd.c: 123:     _delay((unsigned long)((15)*(4000000/4000.0)));
  3565  00171E  0E14               	movlw	20
  3566  001720  6E02               	movwf	??_LCD_init^0,c
  3567  001722  0E7A               	movlw	122
  3568  001724                     u2077:
  3569  001724  2EE8               	decfsz	wreg,f,c
  3570  001726  D7FE               	bra	u2077
  3571  001728  2E02               	decfsz	??_LCD_init^0,f,c
  3572  00172A  D7FC               	bra	u2077
  3573  00172C                     
  3574                           ;lcd.c: 124:     TRISDbits.TRISD0 = 0;
  3575  00172C  9095               	bcf	149,0,c	;volatile
  3576  00172E                     
  3577                           ;lcd.c: 125:     TRISDbits.TRISD1 = 0;
  3578  00172E  9295               	bcf	149,1,c	;volatile
  3579  001730                     
  3580                           ;lcd.c: 126:     TRISDbits.TRISD2 = 0;
  3581  001730  9495               	bcf	149,2,c	;volatile
  3582  001732                     
  3583                           ;lcd.c: 127:     TRISDbits.TRISD4 = 0;
  3584  001732  9895               	bcf	149,4,c	;volatile
  3585  001734                     
  3586                           ;lcd.c: 128:     TRISDbits.TRISD5 = 0;
  3587  001734  9A95               	bcf	149,5,c	;volatile
  3588  001736                     
  3589                           ;lcd.c: 129:     TRISDbits.TRISD6 = 0;
  3590  001736  9C95               	bcf	149,6,c	;volatile
  3591  001738                     
  3592                           ;lcd.c: 130:     TRISDbits.TRISD7 = 0;
  3593  001738  9E95               	bcf	149,7,c	;volatile
  3594  00173A                     
  3595                           ;lcd.c: 132:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 0; LATDbits.LA
      +                          TD4 = 0;
  3596  00173A  9E8C               	bcf	140,7,c	;volatile
  3597  00173C  9C8C               	bcf	140,6,c	;volatile
  3598  00173E  9A8C               	bcf	140,5,c	;volatile
  3599  001740  988C               	bcf	140,4,c	;volatile
  3600  001742                     
  3601                           ;lcd.c: 133:     LATDbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  3602  001742  948C               	bcf	140,2,c	;volatile
  3603  001744  928C               	bcf	140,1,c	;volatile
  3604  001746  908C               	bcf	140,0,c	;volatile
  3605  001748                     
  3606                           ;lcd.c: 135:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  3607  001748  9E8C               	bcf	140,7,c	;volatile
  3608  00174A  9C8C               	bcf	140,6,c	;volatile
  3609  00174C  8A8C               	bsf	140,5,c	;volatile
  3610  00174E  888C               	bsf	140,4,c	;volatile
  3611  001750                     
  3612                           ;lcd.c: 136:     LATDbits.LATD2 = 1; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  3613  001750  848C               	bsf	140,2,c	;volatile
  3614  001752  928C               	bcf	140,1,c	;volatile
  3615  001754  908C               	bcf	140,0,c	;volatile
  3616                           
  3617                           ;lcd.c: 137:  _delay((unsigned long)((1)*(4000000/4000.0)));
  3618  001756  0EC8               	movlw	200
  3619  001758                     u2087:
  3620  001758  D000               	nop2	
  3621  00175A  2EE8               	decfsz	wreg,f,c
  3622  00175C  D7FD               	bra	u2087
  3623  00175E                     
  3624                           ;lcd.c: 138:     LATDbits.LATD2 = 0;
  3625  00175E  948C               	bcf	140,2,c	;volatile
  3626                           
  3627                           ;lcd.c: 139:  _delay((unsigned long)((1)*(4000000/4000.0)));
  3628  001760  0EC8               	movlw	200
  3629  001762                     u2097:
  3630  001762  D000               	nop2	
  3631  001764  2EE8               	decfsz	wreg,f,c
  3632  001766  D7FD               	bra	u2097
  3633  001768                     
  3634                           ;lcd.c: 141:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  3635  001768  9E8C               	bcf	140,7,c	;volatile
  3636  00176A  9C8C               	bcf	140,6,c	;volatile
  3637  00176C  8A8C               	bsf	140,5,c	;volatile
  3638  00176E  888C               	bsf	140,4,c	;volatile
  3639  001770                     
  3640                           ;lcd.c: 142:     LATDbits.LATD2 = 1; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  3641  001770  848C               	bsf	140,2,c	;volatile
  3642  001772  928C               	bcf	140,1,c	;volatile
  3643  001774  908C               	bcf	140,0,c	;volatile
  3644                           
  3645                           ;lcd.c: 143:  _delay((unsigned long)((1)*(4000000/4000.0)));
  3646  001776  0EC8               	movlw	200
  3647  001778                     u2107:
  3648  001778  D000               	nop2	
  3649  00177A  2EE8               	decfsz	wreg,f,c
  3650  00177C  D7FD               	bra	u2107
  3651  00177E                     
  3652                           ;lcd.c: 144:     LATDbits.LATD2 = 0;
  3653  00177E  948C               	bcf	140,2,c	;volatile
  3654                           
  3655                           ;lcd.c: 145:  _delay((unsigned long)((1)*(4000000/4000.0)));
  3656  001780  0EC8               	movlw	200
  3657  001782                     u2117:
  3658  001782  D000               	nop2	
  3659  001784  2EE8               	decfsz	wreg,f,c
  3660  001786  D7FD               	bra	u2117
  3661  001788                     
  3662                           ;lcd.c: 147:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
  3663  001788  9E8C               	bcf	140,7,c	;volatile
  3664  00178A  9C8C               	bcf	140,6,c	;volatile
  3665  00178C  8A8C               	bsf	140,5,c	;volatile
  3666  00178E  988C               	bcf	140,4,c	;volatile
  3667  001790                     
  3668                           ;lcd.c: 148:     LATDbits.LATD2 = 1; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  3669  001790  848C               	bsf	140,2,c	;volatile
  3670  001792  928C               	bcf	140,1,c	;volatile
  3671  001794  908C               	bcf	140,0,c	;volatile
  3672                           
  3673                           ;lcd.c: 149:  _delay((unsigned long)((1)*(4000000/4000.0)));
  3674  001796  0EC8               	movlw	200
  3675  001798                     u2127:
  3676  001798  D000               	nop2	
  3677  00179A  2EE8               	decfsz	wreg,f,c
  3678  00179C  D7FD               	bra	u2127
  3679  00179E                     
  3680                           ;lcd.c: 150:     LATDbits.LATD2 = 0;
  3681  00179E  948C               	bcf	140,2,c	;volatile
  3682                           
  3683                           ;lcd.c: 151:  _delay((unsigned long)((1)*(4000000/4000.0)));
  3684  0017A0  0EC8               	movlw	200
  3685  0017A2                     u2137:
  3686  0017A2  D000               	nop2	
  3687  0017A4  2EE8               	decfsz	wreg,f,c
  3688  0017A6  D7FD               	bra	u2137
  3689  0017A8                     
  3690                           ;lcd.c: 153:  LCD_command(0b00101000);
  3691  0017A8  0E28               	movlw	40
  3692  0017AA  ECB5  F00A         	call	_LCD_command
  3693  0017AE                     
  3694                           ;lcd.c: 155:  LCD_command(0b00001100);
  3695  0017AE  0E0C               	movlw	12
  3696  0017B0  ECB5  F00A         	call	_LCD_command
  3697  0017B4                     
  3698                           ;lcd.c: 157:     LCD_clear();
  3699  0017B4  ECD4  F00C         	call	_LCD_clear	;wreg free
  3700  0017B8  0012               	return		;funcret
  3701  0017BA                     __end_of_LCD_init:
  3702                           	opt callstack 0
  3703                           
  3704 ;; *************** function _LCD_clear *****************
  3705 ;; Defined at:
  3706 ;;		line 193 in file "lcd.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, status,2, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3720 ;;      Params:         0       0       0       0       0       0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3723 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3724 ;;Total ram usage:        0 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:    1
  3727 ;; This function calls:
  3728 ;;		_LCD_command
  3729 ;; This function is called by:
  3730 ;;		_validar_clave
  3731 ;;		_cambio_clave
  3732 ;;		_main
  3733 ;;		_LCD_init
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text15
  3738  0019A8                     __ptext15:
  3739                           	opt callstack 0
  3740  0019A8                     _LCD_clear:
  3741                           	opt callstack 28
  3742  0019A8                     
  3743                           ;lcd.c: 194:     LCD_command(0b00000001);
  3744  0019A8  0E01               	movlw	1
  3745  0019AA  ECB5  F00A         	call	_LCD_command
  3746  0019AE  0012               	return		;funcret
  3747  0019B0                     __end_of_LCD_clear:
  3748                           	opt callstack 0
  3749                           
  3750 ;; *************** function _LCD_command *****************
  3751 ;; Defined at:
  3752 ;;		line 63 in file "lcd.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  cmd             1    wreg     unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  cmd             1    0[COMRAM] unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3766 ;;      Params:         0       0       0       0       0       0       0       0       0
  3767 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3769 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3770 ;;Total ram usage:        1 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_LCD_init
  3776 ;;		_LCD_gotoxy
  3777 ;;		_LCD_clear
  3778 ;;		_LCD_definechar
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text16
  3783  00156A                     __ptext16:
  3784                           	opt callstack 0
  3785  00156A                     _LCD_command:
  3786                           	opt callstack 28
  3787                           
  3788                           ;incstack = 0
  3789                           ;LCD_command@cmd stored from wreg
  3790  00156A  6E01               	movwf	LCD_command@cmd^0,c
  3791  00156C                     
  3792                           ;lcd.c: 65:     LATDbits.LATD0 = 0;
  3793  00156C  908C               	bcf	140,0,c	;volatile
  3794  00156E                     
  3795                           ;lcd.c: 67:     if ( cmd & 0x10 ) {
  3796  00156E  A801               	btfss	LCD_command@cmd^0,4,c
  3797  001570  EFBC  F00A         	goto	u1231
  3798  001574  EFBE  F00A         	goto	u1230
  3799  001578                     u1231:
  3800  001578  EFC1  F00A         	goto	l165
  3801  00157C                     u1230:
  3802  00157C                     
  3803                           ;lcd.c: 68:         LATDbits.LATD4 = 1;
  3804  00157C  888C               	bsf	140,4,c	;volatile
  3805                           
  3806                           ;lcd.c: 69:  } else {
  3807  00157E  EFC2  F00A         	goto	l1871
  3808  001582                     l165:
  3809                           
  3810                           ;lcd.c: 70:         LATDbits.LATD4 = 0;
  3811  001582  988C               	bcf	140,4,c	;volatile
  3812  001584                     l1871:
  3813                           
  3814                           ;lcd.c: 72:  if ( cmd & 0x20 ) {
  3815  001584  AA01               	btfss	LCD_command@cmd^0,5,c
  3816  001586  EFC7  F00A         	goto	u1241
  3817  00158A  EFC9  F00A         	goto	u1240
  3818  00158E                     u1241:
  3819  00158E  EFCC  F00A         	goto	l167
  3820  001592                     u1240:
  3821  001592                     
  3822                           ;lcd.c: 73:         LATDbits.LATD5 = 1;
  3823  001592  8A8C               	bsf	140,5,c	;volatile
  3824                           
  3825                           ;lcd.c: 74:  } else {
  3826  001594  EFCD  F00A         	goto	l1875
  3827  001598                     l167:
  3828                           
  3829                           ;lcd.c: 75:         LATDbits.LATD5 = 0;
  3830  001598  9A8C               	bcf	140,5,c	;volatile
  3831  00159A                     l1875:
  3832                           
  3833                           ;lcd.c: 77:  if ( cmd & 0x40 ) {
  3834  00159A  AC01               	btfss	LCD_command@cmd^0,6,c
  3835  00159C  EFD2  F00A         	goto	u1251
  3836  0015A0  EFD4  F00A         	goto	u1250
  3837  0015A4                     u1251:
  3838  0015A4  EFD7  F00A         	goto	l169
  3839  0015A8                     u1250:
  3840  0015A8                     
  3841                           ;lcd.c: 78:         LATDbits.LATD6 = 1;
  3842  0015A8  8C8C               	bsf	140,6,c	;volatile
  3843                           
  3844                           ;lcd.c: 79:  } else {
  3845  0015AA  EFD8  F00A         	goto	l1879
  3846  0015AE                     l169:
  3847                           
  3848                           ;lcd.c: 80:         LATDbits.LATD6 = 0;
  3849  0015AE  9C8C               	bcf	140,6,c	;volatile
  3850  0015B0                     l1879:
  3851                           
  3852                           ;lcd.c: 82:  if ( cmd & 0x80 ) {
  3853  0015B0  AE01               	btfss	LCD_command@cmd^0,7,c
  3854  0015B2  EFDD  F00A         	goto	u1261
  3855  0015B6  EFDF  F00A         	goto	u1260
  3856  0015BA                     u1261:
  3857  0015BA  EFE2  F00A         	goto	l171
  3858  0015BE                     u1260:
  3859  0015BE                     
  3860                           ;lcd.c: 83:         LATDbits.LATD7 = 1;
  3861  0015BE  8E8C               	bsf	140,7,c	;volatile
  3862                           
  3863                           ;lcd.c: 84:  } else {
  3864  0015C0  EFE3  F00A         	goto	l172
  3865  0015C4                     l171:
  3866                           
  3867                           ;lcd.c: 85:         LATDbits.LATD7 = 0;
  3868  0015C4  9E8C               	bcf	140,7,c	;volatile
  3869  0015C6                     l172:
  3870                           
  3871                           ;lcd.c: 88:     LATDbits.LATD2 = 1;
  3872  0015C6  848C               	bsf	140,2,c	;volatile
  3873  0015C8                     
  3874                           ;lcd.c: 89:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3875  0015C8  0EC8               	movlw	200
  3876  0015CA                     u2147:
  3877  0015CA  D000               	nop2	
  3878  0015CC  2EE8               	decfsz	wreg,f,c
  3879  0015CE  D7FD               	bra	u2147
  3880  0015D0                     
  3881                           ;lcd.c: 90:  LATDbits.LATD2 = 0;
  3882  0015D0  948C               	bcf	140,2,c	;volatile
  3883                           
  3884                           ;lcd.c: 91:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3885  0015D2  0EC8               	movlw	200
  3886  0015D4                     u2157:
  3887  0015D4  D000               	nop2	
  3888  0015D6  2EE8               	decfsz	wreg,f,c
  3889  0015D8  D7FD               	bra	u2157
  3890  0015DA                     
  3891                           ;lcd.c: 93:     if ( cmd & 0x01 ) {
  3892  0015DA  A001               	btfss	LCD_command@cmd^0,0,c
  3893  0015DC  EFF2  F00A         	goto	u1271
  3894  0015E0  EFF4  F00A         	goto	u1270
  3895  0015E4                     u1271:
  3896  0015E4  EFF7  F00A         	goto	l173
  3897  0015E8                     u1270:
  3898  0015E8                     
  3899                           ;lcd.c: 94:         LATDbits.LATD4 = 1;
  3900  0015E8  888C               	bsf	140,4,c	;volatile
  3901                           
  3902                           ;lcd.c: 95:  } else {
  3903  0015EA  EFF8  F00A         	goto	l1891
  3904  0015EE                     l173:
  3905                           
  3906                           ;lcd.c: 96:         LATDbits.LATD4 = 0;
  3907  0015EE  988C               	bcf	140,4,c	;volatile
  3908  0015F0                     l1891:
  3909                           
  3910                           ;lcd.c: 98:  if ( cmd & 0x02 ) {
  3911  0015F0  A201               	btfss	LCD_command@cmd^0,1,c
  3912  0015F2  EFFD  F00A         	goto	u1281
  3913  0015F6  EFFF  F00A         	goto	u1280
  3914  0015FA                     u1281:
  3915  0015FA  EF02  F00B         	goto	l175
  3916  0015FE                     u1280:
  3917  0015FE                     
  3918                           ;lcd.c: 99:         LATDbits.LATD5 = 1;
  3919  0015FE  8A8C               	bsf	140,5,c	;volatile
  3920                           
  3921                           ;lcd.c: 100:  } else {
  3922  001600  EF03  F00B         	goto	l1895
  3923  001604                     l175:
  3924                           
  3925                           ;lcd.c: 101:         LATDbits.LATD5 = 0;
  3926  001604  9A8C               	bcf	140,5,c	;volatile
  3927  001606                     l1895:
  3928                           
  3929                           ;lcd.c: 103:  if ( cmd & 0x04 ) {
  3930  001606  A401               	btfss	LCD_command@cmd^0,2,c
  3931  001608  EF08  F00B         	goto	u1291
  3932  00160C  EF0A  F00B         	goto	u1290
  3933  001610                     u1291:
  3934  001610  EF0D  F00B         	goto	l177
  3935  001614                     u1290:
  3936  001614                     
  3937                           ;lcd.c: 104:         LATDbits.LATD6 = 1;
  3938  001614  8C8C               	bsf	140,6,c	;volatile
  3939                           
  3940                           ;lcd.c: 105:  } else {
  3941  001616  EF0E  F00B         	goto	l1899
  3942  00161A                     l177:
  3943                           
  3944                           ;lcd.c: 106:         LATDbits.LATD6 = 0;
  3945  00161A  9C8C               	bcf	140,6,c	;volatile
  3946  00161C                     l1899:
  3947                           
  3948                           ;lcd.c: 108:  if ( cmd & 0x08 ) {
  3949  00161C  A601               	btfss	LCD_command@cmd^0,3,c
  3950  00161E  EF13  F00B         	goto	u1301
  3951  001622  EF15  F00B         	goto	u1300
  3952  001626                     u1301:
  3953  001626  EF18  F00B         	goto	l179
  3954  00162A                     u1300:
  3955  00162A                     
  3956                           ;lcd.c: 109:         LATDbits.LATD7 = 1;
  3957  00162A  8E8C               	bsf	140,7,c	;volatile
  3958                           
  3959                           ;lcd.c: 110:  } else {
  3960  00162C  EF19  F00B         	goto	l180
  3961  001630                     l179:
  3962                           
  3963                           ;lcd.c: 111:         LATDbits.LATD7 = 0;
  3964  001630  9E8C               	bcf	140,7,c	;volatile
  3965  001632                     l180:
  3966                           
  3967                           ;lcd.c: 114:     LATDbits.LATD2 = 1;
  3968  001632  848C               	bsf	140,2,c	;volatile
  3969  001634                     
  3970                           ;lcd.c: 115:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3971  001634  0EC8               	movlw	200
  3972  001636                     u2167:
  3973  001636  D000               	nop2	
  3974  001638  2EE8               	decfsz	wreg,f,c
  3975  00163A  D7FD               	bra	u2167
  3976  00163C                     
  3977                           ;lcd.c: 116:     LATDbits.LATD2 = 0;
  3978  00163C  948C               	bcf	140,2,c	;volatile
  3979                           
  3980                           ;lcd.c: 117:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3981  00163E  0EC8               	movlw	200
  3982  001640                     u2177:
  3983  001640  D000               	nop2	
  3984  001642  2EE8               	decfsz	wreg,f,c
  3985  001644  D7FD               	bra	u2177
  3986  001646  0012               	return		;funcret
  3987  001648                     __end_of_LCD_command:
  3988                           	opt callstack 0
  3989                           
  3990                           	psect	rparam
  3991  0000                     tosu	equ	0xFFF
  3992                           tosh	equ	0xFFE
  3993                           tosl	equ	0xFFD
  3994                           stkptr	equ	0xFFC
  3995                           pclatu	equ	0xFFB
  3996                           pclath	equ	0xFFA
  3997                           pcl	equ	0xFF9
  3998                           tblptru	equ	0xFF8
  3999                           tblptrh	equ	0xFF7
  4000                           tblptrl	equ	0xFF6
  4001                           tablat	equ	0xFF5
  4002                           prodh	equ	0xFF4
  4003                           prodl	equ	0xFF3
  4004                           indf0	equ	0xFEF
  4005                           postinc0	equ	0xFEE
  4006                           postdec0	equ	0xFED
  4007                           preinc0	equ	0xFEC
  4008                           plusw0	equ	0xFEB
  4009                           fsr0h	equ	0xFEA
  4010                           fsr0l	equ	0xFE9
  4011                           wreg	equ	0xFE8
  4012                           indf1	equ	0xFE7
  4013                           postinc1	equ	0xFE6
  4014                           postdec1	equ	0xFE5
  4015                           preinc1	equ	0xFE4
  4016                           plusw1	equ	0xFE3
  4017                           fsr1h	equ	0xFE2
  4018                           fsr1l	equ	0xFE1
  4019                           bsr	equ	0xFE0
  4020                           indf2	equ	0xFDF
  4021                           postinc2	equ	0xFDE
  4022                           postdec2	equ	0xFDD
  4023                           preinc2	equ	0xFDC
  4024                           plusw2	equ	0xFDB
  4025                           fsr2h	equ	0xFDA
  4026                           fsr2l	equ	0xFD9
  4027                           status	equ	0xFD8


Data Sizes:
    Strings     158
    Constant    0
    Data        20
    BSS         7
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     78      92
    BANK0           160     20      37
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_puts@data	PTR unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[16]), STR_11(CODE[14]), STR_10(CODE[15]), STR_9(CODE[15]), 
		 -> STR_8(CODE[15]), STR_7(CODE[16]), STR_6(CODE[14]), STR_5(CODE[15]), 
		 -> STR_4(CODE[14]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_cambio_clave
    _cambio_clave->_validar_clave
    _validar_clave->___lmul
    _LCD_puts->_LCD_putc
    _LCD_gotoxy->_LCD_command
    _TECLADO->_teclado_getc
    _LCD_init->_LCD_command
    _LCD_clear->_LCD_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   24933
                                             70 COMRAM     8     8      0
                                              0 BANK0     20    20      0
                          _LCD_clear
                         _LCD_gotoxy
                           _LCD_init
                           _LCD_puts
                            _TECLADO
                             ___lmul
                             ___wmul
                       _cambio_clave
                       _eeprom_readx
                        _pedir_clave
                       _teclado_init
                      _validar_clave
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_readx                                         2     0      2     402
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _cambio_clave                                        28    28      0   12557
                                             42 COMRAM    28    28      0
                          _LCD_clear
                         _LCD_gotoxy
                           _LCD_putc
                           _LCD_puts
                            _TECLADO
                             ___lmul
                             ___wmul
                      _eeprom_writex
                        _pedir_clave
                      _validar_clave
 ---------------------------------------------------------------------------------
 (1) _validar_clave                                       30    28      2    5147
                                             12 COMRAM    30    28      2
                          _LCD_clear
                         _LCD_gotoxy
                           _LCD_puts
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _LCD_puts                                             6     3      3    2091
                                              1 COMRAM     6     3      3
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_gotoxy                                           5     4      1    1475
                                              1 COMRAM     5     4      1
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _pedir_clave                                          0     0      0     718
                           _LCD_putc
                            _TECLADO
 ---------------------------------------------------------------------------------
 (2) _TECLADO                                              0     0      0     542
                       _teclado_getc
 ---------------------------------------------------------------------------------
 (3) _teclado_getc                                        19    19      0     542
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 (3) _LCD_putc                                             1     1      0     176
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _eeprom_writex                                        3     0      3     804
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0     352
                                              1 COMRAM     1     1      0
                          _LCD_clear
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0     176
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_command                                          1     1      0     176
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _LCD_command
   _LCD_gotoxy
     _LCD_command
   _LCD_init
     _LCD_clear
       _LCD_command
     _LCD_command
   _LCD_puts
     _LCD_putc
   _TECLADO
     _teclado_getc
   ___lmul
   ___wmul
   _cambio_clave
     _LCD_clear
       _LCD_command
     _LCD_gotoxy
       _LCD_command
     _LCD_putc
     _LCD_puts
       _LCD_putc
     _TECLADO
       _teclado_getc
     ___lmul
     ___wmul
     _eeprom_writex
     _pedir_clave
       _LCD_putc
       _TECLADO
         _teclado_getc
     _validar_clave
       _LCD_clear
         _LCD_command
       _LCD_gotoxy
         _LCD_command
       _LCD_puts
         _LCD_putc
       ___lmul
       ___wmul
   _eeprom_readx
   _pedir_clave
     _LCD_putc
     _TECLADO
       _teclado_getc
   _teclado_init
   _validar_clave
     _LCD_clear
       _LCD_command
     _LCD_gotoxy
       _LCD_command
     _LCD_puts
       _LCD_putc
     ___lmul
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      25       5       23.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4E      5C       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      81      20        0.0%
DATA                 0      0      81       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 04 18:20:46 2020

                      _K 0054                       l72 1464                       l65 1568  
                     l89 131E              __CFG_BOR$ON 000000      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l100 0C56  
                    l200 1828                      l105 0C58                      l300 10F2  
                    l301 10EE                      l150 168C                      l310 1154  
                    l311 1150                      l208 19AE                      l160 170A  
                    l152 16A2                      l304 1128                      l161 170C  
                    l153 16A4                      l313 116A                      l305 1124  
                    l162 171C                      l154 16C8                      l146 1660  
                    l314 1166                      l171 15C4                      l307 113E  
                    l180 1632                      l172 15C6                      l332 1956  
                    l156 16DE                      l148 1676                      l316 119A  
                    l308 113A                      l181 1646                      l173 15EE  
                    l165 1582                      l158 16F4                      l190 192A  
                    l350 1892                      l175 1604                      l167 1598  
                    l271 0FEE                      l335 199A                      l184 17B8  
                    l272 0FEA                      l177 161A                      l169 15AE  
                    l329 1948                      l281 104E                      l265 0FC2  
                    l257 19A6                      l282 104A                      l274 1004  
                    l266 0FBE                      l338 197C                      l179 1630  
                    l291 10B0                      l275 1000                      l292 10AC  
                    l284 1064                      l268 0FD8                      l285 1060  
                    l269 0FD4                      l349 1882                      l294 10C6  
                    l278 1038                      l295 10C2                      l287 107A  
                    l279 1034                      l288 1076                      l297 10DC  
                    l298 10D8                      _DEC 0051                      _CEN 0052  
           __CFG_CPB$OFF 000000                      _MIL 0053             __CFG_CPD$OFF 000000  
                    _VAL 004F                      u931 0F88                      u940 0FAE  
                    u941 0FAA                      u950 0FD0                      u951 0FCC  
                    u960 0FE6                      u961 0FE2                      u970 0FFC  
                    u971 0FF8                      u980 1012                      u981 100E  
                    u990 1024                      u991 1020                      _UNI 0050  
            ?_LCD_gotoxy 0002                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l2001 1862  
                   l2011 134E                     l2003 1320                     l2021 1390  
                   l2013 1352                     l2005 1324                     l2111 1946  
                   l2031 13D4                     l2023 13A2                     l2015 1364  
                   l2007 1336                     l2105 192C                     l2041 1406  
                   l2033 13D8                     l2025 13A8                     l2017 137A  
                   l2009 1348                     l2201 0AEE                     l2121 08BE  
                   l2113 08A0                     l2107 193C                     l2051 1456  
                   l2043 1418                     l2035 13EA                     l2027 13AC  
                   l2019 137E                     l2211 0B76                     l2203 0B36  
                   l2131 08FC                     l2123 08D4                     l2115 08A0  
                   l2301 1772                     l2109 1944                     l2053 145C  
                   l2045 142E                     l2037 13FC                     l2029 13BE  
                   l2061 11BC                     l2221 0BC6                     l2213 0B86  
                   l2205 0B46                     l2141 094C                     l2133 0912  
                   l2125 08DE                     l2117 08A4                     l2311 178C  
                   l2303 1774                     l2055 1464                     l2047 1432  
                   l2039 1402                     l2071 127E                     l2063 11BC  
                   l2231 0C0E                     l2215 0B96                     l2207 0B56  
                   l2151 097E                     l2143 0950                     l2135 091C  
                   l2223 0BE0                     l2127 08E2                     l2119 08AE  
                   l2321 179E                     l2313 178E                     l2305 177E  
                   l2049 1444                     l2073 1282                     l2065 11E0  
                   l2241 0C4E                     l2233 0C18                     l2225 0BE4  
                   l2217 0BAC                     l2209 0B66                     l2161 09B8  
                   l2153 098C                     l2145 0954                     l2137 092C  
                   l2129 08F8                     l2401 0E9A                     l2323 17A8  
                   l2315 1790                     l2307 1788                     l2251 1730  
                   l2091 12CE                     l2075 1286                     l2067 120E  
                   l2059 119C                     l2243 0C52                     l2235 0C28  
                   l2227 0BEE                     l2219 0BB6                     l2171 09E6  
                   l2163 09BE                     l2147 0966                     l2155 0990  
                   l2139 0936                     l2331 19A4                     l2411 0EE8  
                   l2403 0EB2                     l2325 17AE                     l2317 1792  
                   l2309 178A                     l2261 173A                     l2253 1732  
                   l2245 171E                     l2093 12D8                     l2085 12BE  
                   l2077 128A                     l2069 122C                     l2237 0C36  
                   l2229 0BFE                     l2181 0A14                     l2173 09F8  
                   l2165 09CC                     l2157 0994                     l2149 0978  
                   l2333 198E                     l2421 0F1E                     l2405 0EB6  
                   l2413 0EF0                     l2341 0C74                     l2327 17B4  
                   l2319 1794                     l2271 1744                     l2263 173C  
                   l2255 1734                     l2247 172C                     l2095 12E8  
                   l2079 12B2                     l2239 0C38                     l2183 0A26  
                   l2191 0A50                     l2175 09FE                     l2159 09A6  
                   l2167 09D0                     l2335 1998                     l2431 0F5C  
                   l2423 0F2A                     l2415 0EF4                     l2407 0ECC  
                   l2351 0CB0                     l2343 0C78                     l2281 174E  
                   l2273 1746                     l2265 173E                     l2257 1736  
                   l2249 172E                     l1801 1028                     l2097 12F2  
                   l2089 12CA                     l2193 0A74                     l2185 0A38  
                   l2177 0A0C                     l2169 09D4                     l2329 199C  
                   l2433 0F72                     l2425 0F34                     l2417 0EFE  
                   l2409 0ED0                     l2361 0D6E                     l2353 0CF0  
                   l2345 0C7C                     l2291 1768                     l2283 1750  
                   l2275 1748                     l2267 1740                     l2259 1738  
                   l1811 1114                     l1803 1088                     l2099 1302  
                   l2195 0A92                     l2187 0A3E                     l2179 0A10  
                   l2427 0F44                     l2419 0F0E                     l2371 0DDE  
                   l2355 0D16                     l2363 0DB6                     l2347 0C8C  
                   l2339 0C58                     l1901 162A                     l2293 176A  
                   l2285 1752                     l2277 174A                     l2269 1742  
                   l1813 1118                     l1805 109C                     l2197 0AC6  
                   l2189 0A4C                     l2429 0F5A                     l2381 0E16  
                   l2373 0DF4                     l2365 0DBA                     l2357 0D44  
                   l2349 0C9C                     l1903 1634                     l2295 176C  
                   l2287 1754                     l2279 174C                     l1831 1670  
                   l1823 164A                     l1815 1178                     l1807 10A0  
                   l1911 146C                     l2199 0AE4                     l2391 0E58  
                   l2383 0E28                     l2375 0DF8                     l2367 0DC4  
                   l2359 0D64                     l1905 163C                     l2297 176E  
                   l2289 175E                     l1841 16A6                     l1833 1678  
                   l1825 164C                     l1817 117C                     l1809 1100  
                   l1921 14B4                     l1913 147C                     l2473 17FA  
                   l2393 0E62                     l2377 0E0A                     l2385 0E2C  
                   l2369 0DD4                     l2299 1770                     l1851 16D8  
                   l1843 16AC                     l1835 1686                     l1827 165A  
                   l1819 1198                     l1931 14E4                     l1923 14B8  
                   l1915 148C                     l1907 1466                     l2395 0E72  
                   l2387 0E3E                     l2379 0E12                     l1861 170E  
                   l1853 16E0                     l1845 16B4                     l1837 168E  
                   l1829 1662                     l1781 0F90                     l1941 1522  
                   l1933 14F6                     l1925 14CA                     l1917 149E  
                   l2397 0E80                     l2389 0E54                     l1871 1584  
                   l1863 1714                     l1855 16EE                     l1847 16C2  
                   l1839 169C                     l1791 0F9C                     l1783 0F90  
                   l1951 1552                     l1943 1526                     l1935 14FA  
                   l1927 14CE                     l1919 14A2                     l2399 0E8A  
                   l1881 15BE                     l1873 1592                     l1865 156C  
                   l1857 16F6                     l1849 16CA                     l1793 0FAE  
                   l1785 0F94                     l1953 1564                     l1945 1538  
                   l1937 150C                     l1929 14E0                     l1961 17C8  
                   l1891 15F0                     l1883 15C8                     l1875 159A  
                   l1867 156E                     l1955 19A8                     l1859 1704  
                   l1795 0FB2                     l1779 0F7E                     l1947 153C  
                   l1939 1510                     l1963 17D2                     l1971 17E6  
                   l1893 15FE                     l1885 15D0                     l1877 15A8  
                   l1869 157C                     l1797 1012                     l1949 154E  
                   l1965 17DC                     l1973 1820                     l1957 17BC  
                   l1981 18FA                     l1895 1606                     l1887 15DA  
                   l1879 15B0                     l1799 1024                     l1959 17C0  
                   l1983 1916                     l1897 1614                     l1889 15E8  
                   l1985 1918                     l1993 182A                     l1899 161C  
                   l1979 18EE                     l1995 183A                     l1987 1958  
                   l1997 1848                     l1989 1974                     l1999 1858  
         ??_eeprom_readx 0003          __end_of_TECLADO 156A                     STR_1 0895  
                   STR_2 085C                     STR_3 083E                     STR_4 0879  
                   STR_5 0811                     STR_6 0887                     STR_7 0801  
                   STR_8 082F                     STR_9 084D             ?_LCD_command 0001  
                   u1000 1046                     u1001 1042                     u1010 105C  
                   u1011 1058                     u1100 1136                     u1020 1072  
                   u1101 1132                     u1021 106E                     u1110 114C  
                   u1030 1088                     u1111 1148                     u1031 1084  
                   u1200 16D8                     u1120 1162                     u1040 109C  
                   u1201 16D4                     u1121 115E                     u1041 1098  
                   u1210 16EE                     u1130 1178                     u1050 10BE  
                   u1211 16EA                     u1131 1174                     u1051 10BA  
                   u1300 162A                     u1220 1704                     u1140 1198  
                   u1060 10D4                     u1301 1626                     u1221 1700  
                   u1141 1194                     u1061 10D0                     u1230 157C  
                   u1150 165A                     u1070 10EA                     u1310 147C  
                   u1231 1578                     u1151 1656                     u1071 10E6  
                   u2007 102A                     u1311 1478                     u1240 1592  
                   u1160 1670                     u1080 1100                     u1400 1538  
                   u1320 148C                     u1241 158E                     u1161 166C  
                   u1081 10FC                     u2017 10A2                     u1401 1534  
                   u1321 1488                     u1250 15A8                     u1170 1686  
                   u1090 1114                     u1410 154E                     u1330 149E  
                   u1251 15A4                     u2107 1778                     u1171 1682  
                   u2027 111A                     u1091 1110                     u1411 154A  
                   u1331 149A                     u1260 15BE                     u1180 169C  
                   u1420 1564                     u1340 14B4                     u1500 1390  
                   u1261 15BA                     u2117 1782                     u2037 16A8  
                   u1181 1698                     u1421 1560                     u1341 14B0  
                   u1501 138C                     u1270 15E8                     u1190 16C2  
                   u1350 14CA                     u1510 13A2                     u1430 192A  
                   _LATB 000F8A                     u1271 15E4                     u2127 1798  
                   u1191 16BE                     u2047 16B0                     u1351 14C6  
                   u1511 139E                     u1431 1926                     u1280 15FE  
                   u1360 14E0                     u1520 13BE                     u1440 1848  
                   u1600 11BC                     u1281 15FA                     u2137 17A2  
                   u2057 1710                     u1361 14DC                     u1521 13BA  
                   u1441 1844                     u1601 11B8                     u1290 1614  
                   u1370 14F6                     u1530 13D0                     u1450 1882  
                   u1610 12B2                     u1291 1610                     u2147 15CA  
                   u2067 1718                     u1371 14F2                     u1531 13CC  
                   u1451 187E                     u1611 12AE                     u1620 1956  
                   u1380 150C                     u1540 13EA                     u1460 1336  
                   u1700 0A26                     u2157 15D4                     u2077 1724  
                   u1621 1952                     u1381 1508                     u1541 13E6  
                   u1461 1332                     u1701 0A22                     u1390 1522  
                   u1550 13FC                     u1470 1348                     u1710 0A38  
                   u1630 08F8                     u2167 1636                     u2087 1758  
                   u1391 151E                     u1551 13F8                     u1471 1344  
                   u1711 0A34                     u1631 08F4                     u1560 1418  
                   u1480 1364                     u1640 0966                     u1720 0C9C  
                   u2177 1640                     u2097 1762                     u1561 1414  
                   u1481 1360                     u1641 0962                     u1721 0C98  
                   u1570 142A                     u1490 1376                     u1650 0978  
                   u1730 0E0A                     u1571 1426                     u1491 1372  
                   u1651 0974                     u1731 0E06                     u1580 1444  
                   u1660 09A6                     u1740 0E28                     u1581 1440  
                   u1661 09A2                     u1741 0E24                     u1590 1456  
                   u1670 09B8                     u1750 0E3E                     u1591 1452  
                   u1671 09B4                     u1807 0EA4                     u1751 0E3A  
                   u1680 09E6                     u1760 0E54                     u1681 09E2  
                   u1817 0EC0                     u1761 0E50                     u1690 09F8  
                   u1691 09F4                     u1907 09C4                     u1827 0EDA  
                   u1917 0A04                     u1837 0F14                     u1927 0A44  
                   u1847 0F4E                     u1937 0BA0                     u1857 0F66  
                   u1947 0BD0                     u1867 08C8                     u1787 0DE8  
                   u1957 0C04                     u1877 0906                     u1797 0E78  
                   u1967 0C2E                     u1887 0940                     u1977 0C42  
                   u1897 0984                     u1987 130C                     u1997 0FB4  
                   _main 0C58                     fsr1l 000FE1                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
     __size_of_LCD_clear 0008            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000         __end_of_LCD_init 17BA           __CFG_CCP2MX$ON 000000  
       __end_of_LCD_putc 171E         __end_of_LCD_puts 192C                    ?_main 0001  
                  _EEADR 000FA9                    STR_10 0820                    STR_11 086B  
                  STR_12 0801                    _LATC0 007C58                    _LATC1 007C59  
                  _LATC2 007C5A                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95          ??_eeprom_writex 0004  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000      ___lmul@multiplicand 0005            __CFG_WRT3$OFF 000000  
          cambio_clave@c 0043            cambio_clave@d 0037            cambio_clave@m 0033  
          cambio_clave@u 003B           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
           ?_pedir_clave 0001           __CFG_EBTRB$OFF 000000                    _sinal 0084  
                  main@c 0064                    main@d 0068                    main@m 0060  
                  main@u 006C                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8           __CFG_ICPRT$OFF 000000  
    __size_of_LCD_gotoxy 0070          __initialization 1894             __end_of_main 0F7E  
            LCD_gotoxy@x 0006              LCD_gotoxy@y 0002                   ??_main 0047  
          __activetblptr 000002    __size_of_cambio_clave 03B8                ??_TECLADO 0014  
      __end_of_LCD_clear 19B0                   _EEDATA 000FA8                   _EECON2 000FA7  
         __CFG_XINST$OFF 000000                   ___lmul 182A                   ___wmul 1958  
         __CFG_STVREN$ON 000000             _cambio_clave 08A0      eeprom_readx@address 0001  
                 _contra 0059     __end_of_eeprom_readx 199C                   main@c1 0071  
                 main@d1 0072                   main@m1 0070                   main@u1 0073  
           __pdataCOMRAM 0059             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8    __end_of_validar_clave 1320  
             __accesstop 0060  __end_of__initialization 18E4          __CFG_PBADEN$OFF 000000  
   __size_of_LCD_command 00DE                ?_LCD_init 0001                ?_LCD_putc 0001  
              ?_LCD_puts 0002            ___rparam_used 000001           __pcstackCOMRAM 0001  
           __pidataBANK0 197E           LCD_puts@nBytes 0004                LCD_puts@i 0007  
           ??_LCD_gotoxy 0003       teclado_getc@letras 0001               __pbssBANK0 0084  
   __size_of_pedir_clave 0146        eeprom_writex@data 0003            ?_teclado_getc 0001  
           LCD_puts@data 0002            ?_teclado_init 0001               __pnvCOMRAM 0055  
             ??_LCD_init 0002               ??_LCD_putc 0001               ??_LCD_puts 0005  
     __end_of_LCD_gotoxy 182A                  ?___lmul 0001                  ?___wmul 0001  
         ___lmul@product 0009                  _TECLADO 1466           validar_clave@c 001B  
         validar_clave@d 001F           validar_clave@m 0017           validar_clave@u 0023  
         ??_teclado_getc 0001           ??_teclado_init 0001          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000    __size_of_eeprom_readx 000E  
        __size_of___lmul 006A          __size_of___wmul 0026             __psmallconst 0800  
                __pcinit 1894            teclado_getc@i 0012                  __ramtop 0800  
                __ptext0 0C58                  __ptext1 199C                  __ptext2 198E  
                __ptext3 08A0                  __ptext4 119C                  __ptext5 1958  
                __ptext6 182A                  __ptext7 18EE                  __ptext8 17BA  
                __ptext9 1320    __end_of_eeprom_writex 1958                _LCD_clear 19A8  
   end_of_initialization 18E4             _eeprom_readx 198E            __Lmediumconst 0000  
                postdec1 000FE5                  postinc0 000FEE                _PORTDbits 000F83  
              _TRISDbits 000F95               ?_LCD_clear 0001     eeprom_writex@address 0001  
      __size_of_LCD_init 009C        __size_of_LCD_putc 00D6        __size_of_LCD_puts 003E  
         __end_of___lmul 1894           __end_of___wmul 197E            __pidataCOMRAM 19B0  
   __end_of_teclado_getc 119C     __end_of_teclado_init 19A8      start_initialization 1894  
      cambio_clave@clave 003F            ??_LCD_command 0001               LCD_putc@ch 0001  
               ??___lmul 0009                 ??___wmul 0005   __size_of_validar_clave 0184  
            __pdataBANK0 0074         __CFG_LPT1OSC$OFF 000000      LCD_gotoxy@DDRAMAddr 0005  
      teclado_getc@F3164 0074              __pbssCOMRAM 004F                 ?_TECLADO 0001  
          __pcstackBANK0 0060            ??_pedir_clave 0014              ??_LCD_clear 0002  
      teclado_getc@valor 0011      __end_of_LCD_command 1648              __smallconst 0800  
          _validar_clave 119C      __end_of_pedir_clave 1466           ___wmul@product 0005  
               _LATDbits 000F8C                 _LCD_init 171E                 _LCD_putc 1648  
               _LCD_puts 18EE         __CFG_WDTPS$32768 000000    __size_of_teclado_getc 021E  
  __size_of_teclado_init 000C            ?_cambio_clave 0001        ___wmul@multiplier 0001  
       __size_of_TECLADO 0104           ?_validar_clave 000D        ___lmul@multiplier 0001  
            _INTCON2bits 000FF1                copy_data0 18A8                copy_data1 18C8  
            _LCD_command 156A             _teclado_getc 0F7E             _teclado_init 199C  
             _EECON1bits 000FA6                 __Hrparam 0000                 __Lrparam 0000  
         ??_cambio_clave 002B   __size_of_eeprom_writex 002C                 __ptext10 1466  
               __ptext11 0F7E                 __ptext12 1648                 __ptext13 192C  
               __ptext14 171E                 __ptext15 19A8              _pedir_clave 1320  
               __ptext16 156A            __size_of_main 0326                 _intentos 0055  
  __CFG_CPUDIV$OSC1_PLL2 000000               _LCD_gotoxy 17BA               _INTCONbits 000FF2  
        ??_validar_clave 000F            _eeprom_writex 192C           ?_eeprom_writex 0001  
   __end_of_cambio_clave 0C58            ?_eeprom_readx 0001           LCD_command@cmd 0001  
     validar_clave@clave 0027  
