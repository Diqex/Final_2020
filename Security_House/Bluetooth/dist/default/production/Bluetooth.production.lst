

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 04 18:19:47 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11  0000                     
    12                           ; Version 2.10
    13                           ; Generated 31/07/2019 GMT
    14                           ; 
    15                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4550 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     _TRISD	set	3989
    47  0000                     _OSCCON	set	4051
    48  0000                     _LATD0	set	31840
    49                           
    50                           	psect	smallconst
    51  0000'                    __psmallconst:
    52                           	opt callstack 0
    53  0000' 00                 	db	0
    54  0001'                    STR_3:
    55  0001' 20                 	db	32
    56  0002' 73                 	db	115	;'s'
    57  0003' 65                 	db	101	;'e'
    58  0004' 6C                 	db	108	;'l'
    59  0005' 65                 	db	101	;'e'
    60  0006' 63                 	db	99	;'c'
    61  0007' 74                 	db	116	;'t'
    62  0008' 20                 	db	32
    63  0009' 31                 	db	49	;'1'
    64  000A' 20                 	db	32
    65  000B' 6F                 	db	111	;'o'
    66  000C' 72                 	db	114	;'r'
    67  000D' 20                 	db	32
    68  000E' 32                 	db	50	;'2'
    69  000F' 00                 	db	0
    70  0010'                    STR_2:
    71  0010' 4C                 	db	76	;'L'
    72  0011' 45                 	db	69	;'E'
    73  0012' 44                 	db	68	;'D'
    74  0013' 5F                 	db	95	;'_'
    75  0014' 4F                 	db	79	;'O'
    76  0015' 46                 	db	70	;'F'
    77  0016' 46                 	db	70	;'F'
    78  0017' 00                 	db	0
    79  0018'                    STR_1:
    80  0018' 4C                 	db	76	;'L'
    81  0019' 45                 	db	69	;'E'
    82  001A' 44                 	db	68	;'D'
    83  001B' 5F                 	db	95	;'_'
    84  001C' 4F                 	db	79	;'O'
    85  001D' 4E                 	db	78	;'N'
    86  001E' 00                 	db	0
    87  001F' 00                 	db	0	; dummy byte at the end
    88  0000                     
    89                           ; #config settings
    90                           
    91                           	psect	cinit
    92  0000'                    __pcinit:
    93                           	opt callstack 0
    94  0000'                    start_initialization:
    95                           	opt callstack 0
    96  0000'                    __initialization:
    97                           	opt callstack 0
    98  0000'                    end_of_initialization:
    99                           	opt callstack 0
   100  0000'                    __end_of__initialization:
   101                           	opt callstack 0
   102  0000' 0E00'              	movlw	low (__Lsmallconst shr (0+16))
   103  0002' 6EF8               	movwf	tblptru,c
   104  0004' 0E00'              	movlw	high __Lsmallconst
   105  0006' 6EF7               	movwf	tblptrh,c
   106  0008' 0100               	movlb	0
   107  000A' EF00' F000'        	goto	_main	;jump to C main() function
   108                           
   109                           	psect	cstackCOMRAM
   110  0000'                    __pcstackCOMRAM:
   111                           	opt callstack 0
   112  0000'                    ?_USART_ReceiveChar:
   113  0000'                    main@data_in:
   114                           	opt callstack 0
   115  0000'                    _MSdelay$0:
   116                           	opt callstack 0
   117  0000'                    _USART_SendString$0:
   118                           	opt callstack 0
   119  0000'                    _USART_Init$0:
   120                           	opt callstack 0
   121                           
   122                           ; 4 bytes @ 0x0
   123  0000'                    	ds	4
   124                           
   125 ;;
   126 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   127 ;;
   128 ;; *************** function _main *****************
   129 ;; Defined at:
   130 ;;		line 4 in file "Bluetooth.c"
   131 ;; Parameters:    Size  Location     Type
   132 ;;		None
   133 ;; Auto vars:     Size  Location     Type
   134 ;;  data_in         1    0[COMRAM] unsigned char 
   135 ;; Return value:  Size  Location     Type
   136 ;;                  1    wreg      void 
   137 ;; Registers used:
   138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   139 ;; Tracked objects:
   140 ;;		On entry : 0/0
   141 ;;		On exit  : 0/0
   142 ;;		Unchanged: 0/0
   143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   144 ;;      Params:         0       0       0       0       0       0       0       0       0
   145 ;;      Locals:         1       0       0       0       0       0       0       0       0
   146 ;;      Temps:          0       0       0       0       0       0       0       0       0
   147 ;;      Totals:         1       0       0       0       0       0       0       0       0
   148 ;;Total ram usage:        1 bytes
   149 ;; Hardware stack levels required when called:    1
   150 ;; This function calls:
   151 ;;		_MSdelay
   152 ;;		_USART_Init
   153 ;;		_USART_ReceiveChar
   154 ;;		_USART_SendString
   155 ;; This function is called by:
   156 ;;		Startup code after reset
   157 ;; This function uses a non-reentrant model
   158 ;;
   159                           
   160                           	psect	text0
   161  0000'                    __ptext0:
   162                           	opt callstack 0
   163  0000'                    _main:
   164                           	opt callstack 30
   165  0000'                    
   166                           ;Bluetooth.c: 6:     OSCCON=0x72;
   167  0000' 0E72               	movlw	114
   168  0002' 6ED3               	movwf	211,c	;volatile
   169                           
   170                           ;Bluetooth.c: 8:     char data_in;;Bluetooth.c: 9:     TRISD = 0;
   171  0004' 0E00               	movlw	0
   172  0006' 6E95               	movwf	149,c	;volatile
   173  0008'                    
   174                           ;Bluetooth.c: 10:     USART_Init(9600);
   175  0008' 0E80               	movlw	128
   176  000A' 6E00'              	movwf	_USART_Init$0^0,c
   177  000C' 0E25               	movlw	37
   178  000E' 6E00'              	movwf	(_USART_Init$0+1)^0,c
   179  0010' 0E00               	movlw	0
   180  0012' 6E00'              	movwf	(_USART_Init$0+2)^0,c
   181  0014' 0E00               	movlw	0
   182  0016' 6E00'              	movwf	(_USART_Init$0+3)^0,c
   183  0018' EC00' F000'        	call	_USART_Init	;wreg free
   184  001C'                    
   185                           ;Bluetooth.c: 11:     MSdelay(50);
   186  001C' 0E00               	movlw	0
   187  001E' 6E00'              	movwf	(_MSdelay$0+1)^0,c
   188  0020' 0E32               	movlw	50
   189  0022' 6E00'              	movwf	_MSdelay$0^0,c
   190  0024' EC00' F000'        	call	_MSdelay	;wreg free
   191  0028'                    l730:
   192                           
   193                           ;Bluetooth.c: 13:     {;Bluetooth.c: 14:         data_in=USART_ReceiveChar();
   194  0028' EC00' F000'        	call	_USART_ReceiveChar	;wreg free
   195  002C' 5000'              	movf	?_USART_ReceiveChar^0,w,c
   196  002E' 6E00'              	movwf	main@data_in^0,c
   197  0030'                    
   198                           ;Bluetooth.c: 15:         if(data_in=='1')
   199  0030' 0E31               	movlw	49
   200  0032' 1800'              	xorwf	main@data_in^0,w,c
   201  0034' A4D8               	btfss	status,2,c
   202  0036' EF00' F000'        	goto	u31
   203  003A' EF00' F000'        	goto	u30
   204  003E'                    u31:
   205  003E' EF00' F000'        	goto	l738
   206  0042'                    u30:
   207  0042'                    
   208                           ;Bluetooth.c: 16:         {;Bluetooth.c: 17:             LATD0 = 0;
   209  0042' 908C               	bcf	3980,0,c	;volatile
   210  0044'                    
   211                           ;Bluetooth.c: 18:             USART_SendString("LED_ON");
   212  0044' 0E00'              	movlw	low STR_1
   213  0046' 6E00'              	movwf	_USART_SendString$0^0,c
   214  0048' 0E00'              	movlw	high STR_1
   215  004A' 6E00'              	movwf	(_USART_SendString$0+1)^0,c
   216  004C' EC00' F000'        	call	_USART_SendString	;wreg free
   217                           
   218                           ;Bluetooth.c: 19:         }
   219  0050' EF00' F000'        	goto	l21
   220  0054'                    l738:
   221  0054' 0E32               	movlw	50
   222  0056' 1800'              	xorwf	main@data_in^0,w,c
   223  0058' A4D8               	btfss	status,2,c
   224  005A' EF00' F000'        	goto	u41
   225  005E' EF00' F000'        	goto	u40
   226  0062'                    u41:
   227  0062' EF00' F000'        	goto	l744
   228  0066'                    u40:
   229  0066'                    
   230                           ;Bluetooth.c: 22:         {;Bluetooth.c: 23:             LATD0 = 1;
   231  0066' 808C               	bsf	3980,0,c	;volatile
   232  0068'                    
   233                           ;Bluetooth.c: 24:             USART_SendString("LED_OFF");
   234  0068' 0E00'              	movlw	low STR_2
   235  006A' 6E00'              	movwf	_USART_SendString$0^0,c
   236  006C' 0E00'              	movlw	high STR_2
   237  006E' 6E00'              	movwf	(_USART_SendString$0+1)^0,c
   238  0070' EC00' F000'        	call	_USART_SendString	;wreg free
   239                           
   240                           ;Bluetooth.c: 25:         }
   241  0074' EF00' F000'        	goto	l21
   242  0078'                    l744:
   243                           
   244                           ;Bluetooth.c: 27:         {;Bluetooth.c: 28:             USART_SendString(" select 1 or 
      +                          2");
   245  0078' 0E00'              	movlw	low STR_3
   246  007A' 6E00'              	movwf	_USART_SendString$0^0,c
   247  007C' 0E00'              	movlw	high STR_3
   248  007E' 6E00'              	movwf	(_USART_SendString$0+1)^0,c
   249  0080' EC00' F000'        	call	_USART_SendString	;wreg free
   250  0084'                    l21:
   251                           
   252                           ;Bluetooth.c: 30:         MSdelay(100);
   253  0084' 0E00               	movlw	0
   254  0086' 6E00'              	movwf	(_MSdelay$0+1)^0,c
   255  0088' 0E64               	movlw	100
   256  008A' 6E00'              	movwf	_MSdelay$0^0,c
   257  008C' EC00' F000'        	call	_MSdelay	;wreg free
   258  0090' EF00' F000'        	goto	l730
   259  0094' EF00' F000'        	goto	start
   260  0098'                    __end_of_main:
   261                           	opt callstack 0
   262                           
   263                           	psect	rparam
   264  0000                     tosu	equ	0xFFF
   265                           tosh	equ	0xFFE
   266                           tosl	equ	0xFFD
   267                           stkptr	equ	0xFFC
   268                           pclatu	equ	0xFFB
   269                           pclath	equ	0xFFA
   270                           pcl	equ	0xFF9
   271                           tblptru	equ	0xFF8
   272                           tblptrh	equ	0xFF7
   273                           tblptrl	equ	0xFF6
   274                           tablat	equ	0xFF5
   275                           prodh	equ	0xFF4
   276                           prodl	equ	0xFF3
   277                           indf0	equ	0xFEF
   278                           postinc0	equ	0xFEE
   279                           postdec0	equ	0xFED
   280                           preinc0	equ	0xFEC
   281                           plusw0	equ	0xFEB
   282                           fsr0h	equ	0xFEA
   283                           fsr0l	equ	0xFE9
   284                           wreg	equ	0xFE8
   285                           indf1	equ	0xFE7
   286                           postinc1	equ	0xFE6
   287                           postdec1	equ	0xFE5
   288                           preinc1	equ	0xFE4
   289                           plusw1	equ	0xFE3
   290                           fsr1h	equ	0xFE2
   291                           fsr1l	equ	0xFE1
   292                           bsr	equ	0xFE0
   293                           indf2	equ	0xFDF
   294                           postinc2	equ	0xFDE
   295                           postdec2	equ	0xFDD
   296                           preinc2	equ	0xFDC
   297                           plusw2	equ	0xFDB
   298                           fsr2h	equ	0xFDA
   299                           fsr2l	equ	0xFD9
   300                           status	equ	0xFD8


Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USART_SendString$0	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[8]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     117
                                              0 COMRAM     1     1      0
                            _MSdelay
                         _USART_Init
                  _USART_ReceiveChar
                   _USART_SendString
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     0      2      36
 ---------------------------------------------------------------------------------
 (1) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           4     0      4      12
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              2     0      2      24
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MSdelay
   _USART_Init
   _USART_ReceiveChar
   _USART_SendString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      1       1       1        1.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 04 18:19:47 2020

                     l21 000084                       u30 000042                       u31 00003E  
                     u40 000066                       u41 000062                      l730 000028  
                    l740 000066                      l732 000030                      l724 000000  
                    l742 000068                      l734 000042                      l726 000008  
                    l744 000078                      l736 000044                      l728 00001C  
                    l738 000054              main@data_in 000000                     STR_1 000018  
                   STR_2 000010                     STR_3 000001                     _main 000000  
                   start 000000*            ___param_bank 000000                    ?_main 000000  
                  _LATD0 007C60                    _TRISD 000F95                    status 000FD8  
            ?_USART_Init 000000          __initialization 000000             __end_of_main 000098  
                 ??_main 000000            __activetblptr 000001                ??_MSdelay 000000  
                 _OSCCON 000FD3             __mediumconst 000000*                  tblptrh 000FF7  
                 tblptru 000FF8               __accesstop 000000* __end_of__initialization 000000  
          ___rparam_used 000001           __pcstackCOMRAM 000000       _USART_SendString$0 000000  
      ?_USART_SendString 000000       ??_USART_SendString 000000                  _MSdelay 000000* 
           ??_USART_Init 000000                  __Hparam 000000                  __Lparam 000000  
           __psmallconst 000000                  __pcinit 000000                  __ramtop 000000* 
                __ptext0 000000     end_of_initialization 000000                _MSdelay$0 000000  
    start_initialization 000000        _USART_ReceiveChar 000000*      ?_USART_ReceiveChar 000000  
    ??_USART_ReceiveChar 000000                 ?_MSdelay 000000              __smallconst 000000* 
               __Hrparam 000000*                __Lrparam 000000*            __Lsmallconst 000000* 
       _USART_SendString 000000*           __size_of_main 000000             _USART_Init$0 000000  
             _USART_Init 000000* 
